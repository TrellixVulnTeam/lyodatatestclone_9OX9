{"ast":null,"code":"var _jsxFileName = \"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/src/Pages/MiddlePage/JobGraph.jsx\",\n    _s = $RefreshSig$();\n\nimport { Card, Container, FormControl, InputLabel, MenuItem, Select, Typography } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport React, { useEffect, useState } from 'react';\nimport { Doughnut, Pie } from 'react-chartjs-2';\nimport { db } from '../../firebase';\nimport { firebaseLooper } from '../../utils/tools';\nimport LinearIndeterminate from './LinearInderminate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JobGraph = () => {\n  _s();\n\n  const [pending, setPending] = useState([]);\n  const [machines, setMachines] = useState([]);\n  const [completed, setCompleted] = useState([]);\n  useEffect(() => {\n    db.collection('machineData').onSnapshot(doc => {\n      const data = firebaseLooper(doc);\n      setMachines(data);\n    });\n    db.collection('jobData').where('status', '==', false).onSnapshot(doc => {\n      const data = firebaseLooper(doc);\n      setPending(data);\n    });\n    db.collection('jobData').where('status', '==', true).onSnapshot(doc => {\n      const data = firebaseLooper(doc);\n      setCompleted(data);\n    });\n  }, []);\n\n  const handleChange = e => {\n    let mid = e.target.value;\n    db.collection('jobData').where('status', '==', false).where('mid', '==', `${mid}`).onSnapshot(doc => {\n      const data = firebaseLooper(doc);\n      setPending(data);\n    });\n    db.collection('jobData').where('status', '==', true).where('mid', '==', `${mid}`).onSnapshot(doc => {\n      const data = firebaseLooper(doc);\n      setCompleted(data);\n    });\n  };\n\n  const data = {\n    labels: ['Completed', 'Pending'],\n    datasets: [{\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: ['#10B90A', '#FF9A40'],\n      hoverOffset: 4,\n      borderColor: 'white',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'white',\n      pointBackgroundColor: 'white',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: '#ff7a00',\n      pointHoverBorderColor: '#7868e6',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: [completed.length, pending.length]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      boxShadow: '0px 2px 6px #0000000A'\n    },\n    className: \"bg-grey-50\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          color: '#43425D',\n          opacity: 0.68\n        },\n        variant: \"h2\",\n        align: \"center\",\n        gutterBottom: true,\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          style: {\n            color: '#43425D'\n          },\n          children: \"Jobs Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 108\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          style: {\n            width: '70%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Select Machine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            label: \"Select Machine\",\n            onChange: handleChange,\n            children: machines.map(data => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: data.id,\n              children: data.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this) // <Button style={{color: 'orangered'}} href={`/machine-data/Job/${data.id}/Job`}><LaunchIcon/></Button>\n            )\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"warning\",\n        children: \"Pending Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        children: \"Completed Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"info\",\n        children: \"Change Machines for individual data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 7\n  }, this);\n};\n\n_s(JobGraph, \"KT4+KmBDatwyUW4Dp8SRIOZotIU=\");\n\n_c = JobGraph;\nexport default JobGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobGraph\");","map":{"version":3,"sources":["/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/src/Pages/MiddlePage/JobGraph.jsx"],"names":["Card","Container","FormControl","InputLabel","MenuItem","Select","Typography","Alert","React","useEffect","useState","Doughnut","Pie","db","firebaseLooper","LinearIndeterminate","JobGraph","pending","setPending","machines","setMachines","completed","setCompleted","collection","onSnapshot","doc","data","where","handleChange","e","mid","target","value","labels","datasets","fill","lineTension","backgroundColor","hoverOffset","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","length","boxShadow","color","opacity","display","justifyContent","width","map","id","title"],"mappings":"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","sourcesContent":["import { Card, Container, FormControl, InputLabel, MenuItem, Select, Typography } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport React, { useEffect, useState } from 'react'\nimport { Doughnut, Pie } from 'react-chartjs-2';\nimport { db } from '../../firebase';\nimport { firebaseLooper } from '../../utils/tools';\nimport LinearIndeterminate from './LinearInderminate';\n\nconst JobGraph = () => {\n    const [pending, setPending] = useState([])\n    const [machines, setMachines] = useState([])\n    const [completed, setCompleted] = useState([])\n\n    useEffect(() => {\n       db.collection('machineData').onSnapshot(doc => {\n            const data = firebaseLooper(doc)\n            setMachines(data)\n        })\n        db.collection('jobData').where('status', '==', false).onSnapshot(doc => {\n            const data = firebaseLooper(doc)\n            setPending(data)\n        })\n\n        db.collection('jobData').where('status', '==', true).onSnapshot(doc => {\n            const data = firebaseLooper(doc)\n            setCompleted(data)\n        })\n    },[])\n\n    const handleChange = (e) => {\n      let mid = e.target.value\n       db.collection('jobData').where('status', '==', false).where('mid', '==', `${mid}`).onSnapshot(doc => {\n            const data = firebaseLooper(doc)\n            setPending(data)\n        })\n\n        db.collection('jobData').where('status', '==', true).where('mid', '==', `${mid}`).onSnapshot(doc => {\n            const data = firebaseLooper(doc)\n            setCompleted(data)\n        })\n    }\n\n    const data = {\n  labels: [\n    'Completed',\n    'Pending',\n    \n  ],\n  datasets: [\n    {\n      \n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: [\n      '#10B90A',\n      '#FF9A40'\n    ],\n    hoverOffset: 4,\n      borderColor: 'white',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'white',\n      pointBackgroundColor: 'white',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: '#ff7a00',\n      pointHoverBorderColor: '#7868e6',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: [completed.length, pending.length]\n    },\n    \n  ]\n}\n\n    return (\n      <div style={{boxShadow: '0px 2px 6px #0000000A'}} className='bg-grey-50'>\n        \n        <Card >\n          <br />\n            <Typography style={{ color:'#43425D', opacity: 0.68}} variant='h2' align='center' gutterBottom><b style={{color:'#43425D'}}>Jobs Data</b></Typography>\n            <div style={{display: 'flex', justifyContent: 'center'}}>\n             <FormControl variant='outlined' style={{width: '70%'}}>\n               <InputLabel>Select Machine</InputLabel>\n                <Select label=\"Select Machine\" onChange={handleChange} >\n              \n          {\n            machines.map(data => (\n             \n              <MenuItem value={data.id}>{data.title}</MenuItem>\n              // <Button style={{color: 'orangered'}} href={`/machine-data/Job/${data.id}/Job`}><LaunchIcon/></Button>\n              \n            ))\n          }\n         \n          </Select>\n             </FormControl>\n              \n            </div>\n            \n            <Doughnut data={data}/>\n            <br/>\n            <Alert severity='warning'>Pending Jobs</Alert>\n            <br/>\n            <Alert severity='success'>Completed Jobs</Alert>\n            <br/>\n            <Alert severity='info'>Change Machines for individual data</Alert>\n           \n          \n          \n        </Card>\n       \n      </div>\n        \n    )\n}\n\nexport default JobGraph\n"]},"metadata":{},"sourceType":"module"}