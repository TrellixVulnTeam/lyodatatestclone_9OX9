{"ast":null,"code":"var _jsxFileName = \"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/src/Pages/MiddlePage/Graph/RecipeeList.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Container, FormControl, Grid, InputLabel, Menu, MenuItem, NativeSelect, Select } from '@material-ui/core';\nimport { Title } from '@material-ui/icons';\nimport React, { useEffect, useState } from 'react';\nimport { db } from '../../../firebase';\nimport { firebaseLooper } from '../../../utils/tools';\nimport TestData from '../../Tests/TestData';\nimport FetchRecipee from './FetchRecipee';\nimport GraphData from './GraphData';\nimport GraphDataRecipee from './GraphDataRecipee';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecipeeList = () => {\n  _s();\n\n  const [recipeeData, setRecipeeData] = useState([]);\n  const [title, setTitle] = useState('');\n  useEffect(() => {\n    db.collection('recipes').onSnapshot(doc => {\n      const data = firebaseLooper(doc);\n      setRecipeeData(data);\n    });\n  }, [recipeeData]);\n\n  const handleChange = event => {\n    setTitle(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        color: \"secondary\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          fullWidth: true,\n          variant: \"outlined\",\n          native: true,\n          value: title,\n          required: true,\n          onChange: e => setTitle(e.target.value),\n          children: recipeeData.map(data => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: data.id,\n            children: data.title\n          }, data.title, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FetchRecipee, {\n      title: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RecipeeList, \"RSs4rz3rdrwUcHoFavH/qvmFO7Q=\");\n\n_c = RecipeeList;\nexport default RecipeeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeeList\");","map":{"version":3,"sources":["/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/src/Pages/MiddlePage/Graph/RecipeeList.jsx"],"names":["Button","Container","FormControl","Grid","InputLabel","Menu","MenuItem","NativeSelect","Select","Title","React","useEffect","useState","db","firebaseLooper","TestData","FetchRecipee","GraphData","GraphDataRecipee","RecipeeList","recipeeData","setRecipeeData","title","setTitle","collection","onSnapshot","doc","data","handleChange","event","target","value","e","map","id"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,SAAjB,EAA4BC,WAA5B,EAAyCC,IAAzC,EAA+CC,UAA/C,EAA2DC,IAA3D,EAAiEC,QAAjE,EAA2EC,YAA3E,EAAyFC,MAAzF,QAAuG,mBAAvG;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,EAAT,QAAmB,mBAAnB;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,EAAE,CAACW,UAAH,CAAc,SAAd,EAAyBC,UAAzB,CAAoCC,GAAG,IAAI;AACvC,YAAMC,IAAI,GAAGb,cAAc,CAACY,GAAD,CAA3B;AACAL,MAAAA,cAAc,CAACM,IAAD,CAAd;AACH,KAHD;AAKH,GANQ,EAMN,CAACP,WAAD,CANM,CAAT;;AAQC,QAAMQ,YAAY,GAAIC,KAAD,IAAW;AACjCN,IAAAA,QAAQ,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD,GAFE;;AAID,sBACI,QAAC,SAAD;AAAA,4BAEC,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA,8BACK,QAAC,UAAD;AAAY,QAAA,KAAK,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,cADL,eAEK,QAAC,WAAD;AAAA,+BACG,QAAC,MAAD;AACT,UAAA,SAAS,MADA;AAET,UAAA,OAAO,EAAC,UAFC;AAGP,UAAA,MAAM,MAHC;AAIP,UAAA,KAAK,EAAET,KAJA;AAKP,UAAA,QAAQ,MALD;AAMP,UAAA,QAAQ,EAAGU,CAAD,IAAOT,QAAQ,CAACS,CAAC,CAACF,MAAF,CAASC,KAAV,CANlB;AAAA,oBAWHX,WAAW,CAACa,GAAZ,CAAgBN,IAAI,iBAChB;AAAyB,YAAA,KAAK,EAAEA,IAAI,CAACO,EAArC;AAAA,sBAA0CP,IAAI,CAACL;AAA/C,aAAaK,IAAI,CAACL,KAAlB;AAAA;AAAA;AAAA;AAAA,kBADJ;AAXG;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,cAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eA0BF;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YA1BE,eA2BD,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,YA3BC;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CAhDD;;GAAMH,W;;KAAAA,W;AAkDN,eAAeA,WAAf","sourcesContent":["import { Button, Container, FormControl, Grid, InputLabel, Menu, MenuItem, NativeSelect, Select } from '@material-ui/core'\nimport { Title } from '@material-ui/icons'\nimport React, { useEffect, useState } from 'react'\nimport { db } from '../../../firebase'\nimport { firebaseLooper } from '../../../utils/tools'\nimport TestData from '../../Tests/TestData'\nimport FetchRecipee from './FetchRecipee'\nimport GraphData from './GraphData'\nimport GraphDataRecipee from './GraphDataRecipee'\n\nconst RecipeeList = () => {\n  \n    const [recipeeData, setRecipeeData] = useState([])\n    const [title, setTitle] = useState('')\n\n    useEffect(() => {\n        db.collection('recipes').onSnapshot(doc => {\n            const data = firebaseLooper(doc)\n            setRecipeeData(data)\n        })\n        \n    }, [recipeeData])\n\n     const handleChange = (event) => {\n    setTitle(event.target.value);\n  };\n\n    return (\n        <Container>\n      \n         <Grid item xs={12}>\n              <InputLabel color=\"secondary\" variant=\"outlined\"></InputLabel>\n              <FormControl>\n                 <Select\n        fullWidth\n        variant=\"outlined\"\n          native\n          value={title}\n          required\n          onChange={(e) => setTitle(e.target.value)}\n          \n        >\n           \n          {\n              recipeeData.map(data => (\n                  <option key={data.title} value={data.id}>{data.title}</option>\n                \n              ))\n          }\n        </Select>\n              </FormControl>\n       \n            </Grid>\n        \n      <h1>{title}</h1>\n       <FetchRecipee title={title}/>\n        </Container>\n    )\n}\n\nexport default RecipeeList\n"]},"metadata":{},"sourceType":"module"}