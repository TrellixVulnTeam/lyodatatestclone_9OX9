{"ast":null,"code":"var _objectSpread = require(\"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar isObject = require('../help/is_object');\n\nvar secs = require('../help/secs');\n\nvar epoch = require('../help/epoch');\n\nvar getKey = require('../help/get_key');\n\nvar JWS = require('../jws');\n\nvar isString = require('./shared_validations').isString.bind(undefined, TypeError);\n\nvar validateOptions = function validateOptions(options) {\n  if (typeof options.iat !== 'boolean') {\n    throw new TypeError('options.iat must be a boolean');\n  }\n\n  if (typeof options.kid !== 'boolean') {\n    throw new TypeError('options.kid must be a boolean');\n  }\n\n  isString(options.subject, 'options.subject');\n  isString(options.issuer, 'options.issuer');\n\n  if (options.audience !== undefined && (typeof options.audience !== 'string' || !options.audience) && (!Array.isArray(options.audience) || options.audience.length === 0 || options.audience.some(function (a) {\n    return !a || typeof a !== 'string';\n  }))) {\n    throw new TypeError('options.audience must be a string or an array of strings');\n  }\n\n  if (!isObject(options.header)) {\n    throw new TypeError('options.header must be an object');\n  }\n\n  isString(options.algorithm, 'options.algorithm');\n  isString(options.expiresIn, 'options.expiresIn');\n  isString(options.notBefore, 'options.notBefore');\n  isString(options.jti, 'options.jti');\n\n  if (options.now !== undefined && (!(options.now instanceof Date) || !options.now.getTime())) {\n    throw new TypeError('options.now must be a valid Date object');\n  }\n};\n\nmodule.exports = function (payload, key) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (!isObject(options)) {\n    throw new TypeError('options must be an object');\n  }\n\n  var algorithm = options.algorithm,\n      audience = options.audience,\n      expiresIn = options.expiresIn,\n      _options$header = options.header,\n      header = _options$header === void 0 ? {} : _options$header,\n      _options$iat = options.iat,\n      iat = _options$iat === void 0 ? true : _options$iat,\n      issuer = options.issuer,\n      jti = options.jti,\n      _options$kid = options.kid,\n      kid = _options$kid === void 0 ? true : _options$kid,\n      notBefore = options.notBefore,\n      subject = options.subject,\n      now = options.now;\n  validateOptions({\n    algorithm: algorithm,\n    audience: audience,\n    expiresIn: expiresIn,\n    header: header,\n    iat: iat,\n    issuer: issuer,\n    jti: jti,\n    kid: kid,\n    notBefore: notBefore,\n    now: now,\n    subject: subject\n  });\n\n  if (!isObject(payload)) {\n    throw new TypeError('payload must be an object');\n  }\n\n  var unix;\n\n  if (expiresIn || notBefore || iat) {\n    unix = epoch(now || new Date());\n  }\n\n  payload = _objectSpread(_objectSpread({}, payload), {}, {\n    sub: subject || payload.sub,\n    aud: audience || payload.aud,\n    iss: issuer || payload.iss,\n    jti: jti || payload.jti,\n    iat: iat ? unix : payload.iat,\n    exp: expiresIn ? unix + secs(expiresIn) : payload.exp,\n    nbf: notBefore ? unix + secs(notBefore) : payload.nbf\n  });\n  key = getKey(key);\n  var includeKid;\n\n  if (typeof options.kid === 'boolean') {\n    includeKid = kid;\n  } else {\n    includeKid = !key.secret;\n  }\n\n  return JWS.sign(JSON.stringify(payload), key, _objectSpread(_objectSpread({}, header), {}, {\n    alg: algorithm || header.alg,\n    kid: includeKid ? key.kid : header.kid\n  }));\n};","map":{"version":3,"sources":["/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/jose/lib/jwt/sign.js"],"names":["isObject","require","secs","epoch","getKey","JWS","isString","bind","undefined","TypeError","validateOptions","options","iat","kid","subject","issuer","audience","Array","isArray","length","some","a","header","algorithm","expiresIn","notBefore","jti","now","Date","getTime","module","exports","payload","key","unix","sub","aud","iss","exp","nbf","includeKid","secret","sign","JSON","stringify","alg"],"mappings":"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","sourcesContent":["const isObject = require('../help/is_object')\nconst secs = require('../help/secs')\nconst epoch = require('../help/epoch')\nconst getKey = require('../help/get_key')\nconst JWS = require('../jws')\n\nconst isString = require('./shared_validations').isString.bind(undefined, TypeError)\n\nconst validateOptions = (options) => {\n  if (typeof options.iat !== 'boolean') {\n    throw new TypeError('options.iat must be a boolean')\n  }\n\n  if (typeof options.kid !== 'boolean') {\n    throw new TypeError('options.kid must be a boolean')\n  }\n\n  isString(options.subject, 'options.subject')\n  isString(options.issuer, 'options.issuer')\n\n  if (\n    options.audience !== undefined &&\n    (\n      (typeof options.audience !== 'string' || !options.audience) &&\n      (!Array.isArray(options.audience) || options.audience.length === 0 || options.audience.some(a => !a || typeof a !== 'string'))\n    )\n  ) {\n    throw new TypeError('options.audience must be a string or an array of strings')\n  }\n\n  if (!isObject(options.header)) {\n    throw new TypeError('options.header must be an object')\n  }\n\n  isString(options.algorithm, 'options.algorithm')\n  isString(options.expiresIn, 'options.expiresIn')\n  isString(options.notBefore, 'options.notBefore')\n  isString(options.jti, 'options.jti')\n\n  if (options.now !== undefined && (!(options.now instanceof Date) || !options.now.getTime())) {\n    throw new TypeError('options.now must be a valid Date object')\n  }\n}\n\nmodule.exports = (payload, key, options = {}) => {\n  if (!isObject(options)) {\n    throw new TypeError('options must be an object')\n  }\n\n  const {\n    algorithm, audience, expiresIn, header = {}, iat = true,\n    issuer, jti, kid = true, notBefore, subject, now\n  } = options\n\n  validateOptions({\n    algorithm, audience, expiresIn, header, iat, issuer, jti, kid, notBefore, now, subject\n  })\n\n  if (!isObject(payload)) {\n    throw new TypeError('payload must be an object')\n  }\n\n  let unix\n  if (expiresIn || notBefore || iat) {\n    unix = epoch(now || new Date())\n  }\n\n  payload = {\n    ...payload,\n    sub: subject || payload.sub,\n    aud: audience || payload.aud,\n    iss: issuer || payload.iss,\n    jti: jti || payload.jti,\n    iat: iat ? unix : payload.iat,\n    exp: expiresIn ? unix + secs(expiresIn) : payload.exp,\n    nbf: notBefore ? unix + secs(notBefore) : payload.nbf\n  }\n\n  key = getKey(key)\n\n  let includeKid\n\n  if (typeof options.kid === 'boolean') {\n    includeKid = kid\n  } else {\n    includeKid = !key.secret\n  }\n\n  return JWS.sign(JSON.stringify(payload), key, {\n    ...header,\n    alg: algorithm || header.alg,\n    kid: includeKid ? key.kid : header.kid\n  })\n}\n"]},"metadata":{},"sourceType":"script"}