{"ast":null,"code":"var _require = require('crypto'),\n    createHmac = _require.createHmac;\n\nvar _require2 = require('../help/consts'),\n    KEYOBJECT = _require2.KEYOBJECT;\n\nvar timingSafeEqual = require('../help/timing_safe_equal');\n\nvar resolveNodeAlg = require('../help/node_alg');\n\nvar _require3 = require('../help/key_object'),\n    asInput = _require3.asInput;\n\nvar sign = function sign(jwaAlg, hmacAlg, _ref, payload) {\n  var keyObject = _ref[KEYOBJECT];\n  var hmac = createHmac(hmacAlg, asInput(keyObject, false));\n  hmac.update(payload);\n  return hmac.digest();\n};\n\nvar verify = function verify(jwaAlg, hmacAlg, key, payload, signature) {\n  var expected = sign(jwaAlg, hmacAlg, key, payload);\n  var actual = signature;\n  return timingSafeEqual(actual, expected);\n};\n\nmodule.exports = function (JWA, JWK) {\n  ['HS256', 'HS384', 'HS512'].forEach(function (jwaAlg) {\n    var hmacAlg = resolveNodeAlg(jwaAlg);\n    JWA.sign.set(jwaAlg, sign.bind(undefined, jwaAlg, hmacAlg));\n    JWA.verify.set(jwaAlg, verify.bind(undefined, jwaAlg, hmacAlg));\n\n    JWK.oct.sign[jwaAlg] = JWK.oct.verify[jwaAlg] = function (key) {\n      return key.use === 'sig' || key.use === undefined;\n    };\n  });\n};","map":{"version":3,"sources":["/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/jose/lib/jwa/hmac.js"],"names":["require","createHmac","KEYOBJECT","timingSafeEqual","resolveNodeAlg","asInput","sign","jwaAlg","hmacAlg","payload","keyObject","hmac","update","digest","verify","key","signature","expected","actual","module","exports","JWA","JWK","forEach","set","bind","undefined","oct","use"],"mappings":"eAAuBA,OAAO,CAAC,QAAD,C;IAAtBC,U,YAAAA,U;;gBAEcD,OAAO,CAAC,gBAAD,C;IAArBE,S,aAAAA,S;;AACR,IAAMC,eAAe,GAAGH,OAAO,CAAC,2BAAD,CAA/B;;AACA,IAAMI,cAAc,GAAGJ,OAAO,CAAC,kBAAD,CAA9B;;gBACoBA,OAAO,CAAC,oBAAD,C;IAAnBK,O,aAAAA,O;;AAER,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,MAAD,EAASC,OAAT,QAA8CC,OAA9C,EAA0D;AAAA,MAAzBC,SAAyB,QAArCR,SAAqC;AACrE,MAAMS,IAAI,GAAGV,UAAU,CAACO,OAAD,EAAUH,OAAO,CAACK,SAAD,EAAY,KAAZ,CAAjB,CAAvB;AACAC,EAAAA,IAAI,CAACC,MAAL,CAAYH,OAAZ;AACA,SAAOE,IAAI,CAACE,MAAL,EAAP;AACD,CAJD;;AAMA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACP,MAAD,EAASC,OAAT,EAAkBO,GAAlB,EAAuBN,OAAvB,EAAgCO,SAAhC,EAA8C;AAC3D,MAAMC,QAAQ,GAAGX,IAAI,CAACC,MAAD,EAASC,OAAT,EAAkBO,GAAlB,EAAuBN,OAAvB,CAArB;AACA,MAAMS,MAAM,GAAGF,SAAf;AAEA,SAAOb,eAAe,CAACe,MAAD,EAASD,QAAT,CAAtB;AACD,CALD;;AAOAE,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7B,GAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4BC,OAA5B,CAAoC,UAAChB,MAAD,EAAY;AAC9C,QAAMC,OAAO,GAAGJ,cAAc,CAACG,MAAD,CAA9B;AACAc,IAAAA,GAAG,CAACf,IAAJ,CAASkB,GAAT,CAAajB,MAAb,EAAqBD,IAAI,CAACmB,IAAL,CAAUC,SAAV,EAAqBnB,MAArB,EAA6BC,OAA7B,CAArB;AACAa,IAAAA,GAAG,CAACP,MAAJ,CAAWU,GAAX,CAAejB,MAAf,EAAuBO,MAAM,CAACW,IAAP,CAAYC,SAAZ,EAAuBnB,MAAvB,EAA+BC,OAA/B,CAAvB;;AACAc,IAAAA,GAAG,CAACK,GAAJ,CAAQrB,IAAR,CAAaC,MAAb,IAAuBe,GAAG,CAACK,GAAJ,CAAQb,MAAR,CAAeP,MAAf,IAAyB,UAAAQ,GAAG;AAAA,aAAIA,GAAG,CAACa,GAAJ,KAAY,KAAZ,IAAqBb,GAAG,CAACa,GAAJ,KAAYF,SAArC;AAAA,KAAnD;AACD,GALD;AAMD,CAPD","sourcesContent":["const { createHmac } = require('crypto')\n\nconst { KEYOBJECT } = require('../help/consts')\nconst timingSafeEqual = require('../help/timing_safe_equal')\nconst resolveNodeAlg = require('../help/node_alg')\nconst { asInput } = require('../help/key_object')\n\nconst sign = (jwaAlg, hmacAlg, { [KEYOBJECT]: keyObject }, payload) => {\n  const hmac = createHmac(hmacAlg, asInput(keyObject, false))\n  hmac.update(payload)\n  return hmac.digest()\n}\n\nconst verify = (jwaAlg, hmacAlg, key, payload, signature) => {\n  const expected = sign(jwaAlg, hmacAlg, key, payload)\n  const actual = signature\n\n  return timingSafeEqual(actual, expected)\n}\n\nmodule.exports = (JWA, JWK) => {\n  ['HS256', 'HS384', 'HS512'].forEach((jwaAlg) => {\n    const hmacAlg = resolveNodeAlg(jwaAlg)\n    JWA.sign.set(jwaAlg, sign.bind(undefined, jwaAlg, hmacAlg))\n    JWA.verify.set(jwaAlg, verify.bind(undefined, jwaAlg, hmacAlg))\n    JWK.oct.sign[jwaAlg] = JWK.oct.verify[jwaAlg] = key => key.use === 'sig' || key.use === undefined\n  })\n}\n"]},"metadata":{},"sourceType":"script"}