{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _toConsumableArray = require(\"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _require = require('crypto'),\n    generateKeyPairSync = _require.generateKeyPairSync,\n    async = _require.generateKeyPair;\n\nvar _require2 = require('util'),\n    promisify = _require2.promisify;\n\nvar _require3 = require('../../help/consts'),\n    THUMBPRINT_MATERIAL = _require3.THUMBPRINT_MATERIAL,\n    JWK_MEMBERS = _require3.JWK_MEMBERS,\n    PUBLIC_MEMBERS = _require3.PUBLIC_MEMBERS,\n    PRIVATE_MEMBERS = _require3.PRIVATE_MEMBERS,\n    KEY_MANAGEMENT_DECRYPT = _require3.KEY_MANAGEMENT_DECRYPT,\n    KEY_MANAGEMENT_ENCRYPT = _require3.KEY_MANAGEMENT_ENCRYPT;\n\nvar _require4 = require('../../registry'),\n    OKP_CURVES = _require4.OKP_CURVES;\n\nvar _require5 = require('../../help/runtime_support'),\n    edDSASupported = _require5.edDSASupported;\n\nvar errors = require('../../errors');\n\nvar Key = require('./base');\n\nvar generateKeyPair = promisify(async);\nvar OKP_PUBLIC = new Set(['crv', 'x']);\nObject.freeze(OKP_PUBLIC);\nvar OKP_PRIVATE = new Set([].concat(_toConsumableArray(OKP_PUBLIC), ['d']));\nObject.freeze(OKP_PRIVATE); // Octet string key pairs Key Type\n\nvar OKPKey = /*#__PURE__*/function (_Key) {\n  \"use strict\";\n\n  _inherits(OKPKey, _Key);\n\n  var _super = _createSuper(OKPKey);\n\n  function OKPKey() {\n    var _this;\n\n    _classCallCheck(this, OKPKey);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this[JWK_MEMBERS]();\n\n    Object.defineProperty(_assertThisInitialized(_this), 'kty', {\n      value: 'OKP',\n      enumerable: true\n    });\n\n    if (!OKP_CURVES.has(_this.crv)) {\n      throw new errors.JOSENotSupported('unsupported OKP key curve');\n    }\n\n    return _this;\n  }\n\n  _createClass(OKPKey, [{\n    key: THUMBPRINT_MATERIAL,\n    value: // https://tc39.github.io/ecma262/#sec-ordinaryownpropertykeys no need for any special\n    // JSON.stringify handling in V8\n    function value() {\n      return {\n        crv: this.crv,\n        kty: 'OKP',\n        x: this.x\n      };\n    }\n  }, {\n    key: KEY_MANAGEMENT_ENCRYPT,\n    value: function value() {\n      return this.algorithms('deriveKey');\n    }\n  }, {\n    key: KEY_MANAGEMENT_DECRYPT,\n    value: function value() {\n      if (this.public) {\n        return new Set();\n      }\n\n      return this.algorithms('deriveKey');\n    }\n  }], [{\n    key: PUBLIC_MEMBERS,\n    get: function get() {\n      return OKP_PUBLIC;\n    }\n  }, {\n    key: PRIVATE_MEMBERS,\n    get: function get() {\n      return OKP_PRIVATE;\n    }\n  }, {\n    key: \"generate\",\n    value: function () {\n      var _generate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var crv,\n            privat,\n            _yield$generateKeyPai,\n            privateKey,\n            publicKey,\n            _args = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                crv = _args.length > 0 && _args[0] !== undefined ? _args[0] : 'Ed25519';\n                privat = _args.length > 1 && _args[1] !== undefined ? _args[1] : true;\n\n                if (edDSASupported) {\n                  _context.next = 4;\n                  break;\n                }\n\n                throw new errors.JOSENotSupported('OKP keys are not supported in your Node.js runtime version');\n\n              case 4:\n                if (OKP_CURVES.has(crv)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                throw new errors.JOSENotSupported(\"unsupported OKP key curve: \".concat(crv));\n\n              case 6:\n                _context.next = 8;\n                return generateKeyPair(crv.toLowerCase());\n\n              case 8:\n                _yield$generateKeyPai = _context.sent;\n                privateKey = _yield$generateKeyPai.privateKey;\n                publicKey = _yield$generateKeyPai.publicKey;\n                return _context.abrupt(\"return\", privat ? privateKey : publicKey);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function generate() {\n        return _generate.apply(this, arguments);\n      }\n\n      return generate;\n    }()\n  }, {\n    key: \"generateSync\",\n    value: function generateSync() {\n      var crv = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Ed25519';\n      var privat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      if (!edDSASupported) {\n        throw new errors.JOSENotSupported('OKP keys are not supported in your Node.js runtime version');\n      }\n\n      if (!OKP_CURVES.has(crv)) {\n        throw new errors.JOSENotSupported(\"unsupported OKP key curve: \".concat(crv));\n      }\n\n      var _generateKeyPairSync = generateKeyPairSync(crv.toLowerCase()),\n          privateKey = _generateKeyPairSync.privateKey,\n          publicKey = _generateKeyPairSync.publicKey;\n\n      return privat ? privateKey : publicKey;\n    }\n  }]);\n\n  return OKPKey;\n}(Key);\n\nmodule.exports = OKPKey;","map":{"version":3,"sources":["/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/jose/lib/jwk/key/okp.js"],"names":["require","generateKeyPairSync","async","generateKeyPair","promisify","THUMBPRINT_MATERIAL","JWK_MEMBERS","PUBLIC_MEMBERS","PRIVATE_MEMBERS","KEY_MANAGEMENT_DECRYPT","KEY_MANAGEMENT_ENCRYPT","OKP_CURVES","edDSASupported","errors","Key","OKP_PUBLIC","Set","Object","freeze","OKP_PRIVATE","OKPKey","args","defineProperty","value","enumerable","has","crv","JOSENotSupported","kty","x","algorithms","public","privat","toLowerCase","privateKey","publicKey","module","exports"],"mappings":";;;;;;;;;;;;;;;;eAAwDA,OAAO,CAAC,QAAD,C;IAAvDC,mB,YAAAA,mB;IAAsCC,K,YAAjBC,e;;gBACPH,OAAO,CAAC,MAAD,C;IAArBI,S,aAAAA,S;;gBAKJJ,OAAO,CAAC,mBAAD,C;IAFTK,mB,aAAAA,mB;IAAqBC,W,aAAAA,W;IAAaC,c,aAAAA,c;IAClCC,e,aAAAA,e;IAAiBC,sB,aAAAA,sB;IAAwBC,sB,aAAAA,sB;;gBAEpBV,OAAO,CAAC,gBAAD,C;IAAtBW,U,aAAAA,U;;gBACmBX,OAAO,CAAC,4BAAD,C;IAA1BY,c,aAAAA,c;;AACR,IAAMC,MAAM,GAAGb,OAAO,CAAC,cAAD,CAAtB;;AAEA,IAAMc,GAAG,GAAGd,OAAO,CAAC,QAAD,CAAnB;;AAEA,IAAMG,eAAe,GAAGC,SAAS,CAACF,KAAD,CAAjC;AAEA,IAAMa,UAAU,GAAG,IAAIC,GAAJ,CAAQ,CAAC,KAAD,EAAQ,GAAR,CAAR,CAAnB;AACAC,MAAM,CAACC,MAAP,CAAcH,UAAd;AACA,IAAMI,WAAW,GAAG,IAAIH,GAAJ,8BAAYD,UAAZ,IAAwB,GAAxB,GAApB;AACAE,MAAM,CAACC,MAAP,CAAcC,WAAd,E,CAEA;;IACMC,M;;;;;;;AACJ,oBAAsB;AAAA;;AAAA;;AAAA,sCAANC,IAAM;AAANA,MAAAA,IAAM;AAAA;;AACpB,oDAASA,IAAT;;AACA,UAAKf,WAAL;;AACAW,IAAAA,MAAM,CAACK,cAAP,gCAA4B,KAA5B,EAAmC;AAAEC,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,UAAU,EAAE;AAA5B,KAAnC;;AACA,QAAI,CAACb,UAAU,CAACc,GAAX,CAAe,MAAKC,GAApB,CAAL,EAA+B;AAC7B,YAAM,IAAIb,MAAM,CAACc,gBAAX,CAA4B,2BAA5B,CAAN;AACD;;AANmB;AAOrB;;;SAYAtB,mB;WAFD;AACA;AACA,qBAAyB;AACvB,aAAO;AAAEqB,QAAAA,GAAG,EAAE,KAAKA,GAAZ;AAAiBE,QAAAA,GAAG,EAAE,KAAtB;AAA6BC,QAAAA,CAAC,EAAE,KAAKA;AAArC,OAAP;AACD;;SAEAnB,sB;WAAD,iBAA4B;AAC1B,aAAO,KAAKoB,UAAL,CAAgB,WAAhB,CAAP;AACD;;SAEArB,sB;WAAD,iBAA4B;AAC1B,UAAI,KAAKsB,MAAT,EAAiB;AACf,eAAO,IAAIf,GAAJ,EAAP;AACD;;AACD,aAAO,KAAKc,UAAL,CAAgB,WAAhB,CAAP;AACD;;SAvBWvB,c;SAAZ,eAA+B;AAC7B,aAAOQ,UAAP;AACD;;SAEWP,e;SAAZ,eAAgC;AAC9B,aAAOW,WAAP;AACD;;;;+EAmBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAuBO,gBAAAA,GAAvB,2DAA6B,SAA7B;AAAwCM,gBAAAA,MAAxC,2DAAiD,IAAjD;;AAAA,oBACOpB,cADP;AAAA;AAAA;AAAA;;AAAA,sBAEU,IAAIC,MAAM,CAACc,gBAAX,CAA4B,4DAA5B,CAFV;;AAAA;AAAA,oBAKOhB,UAAU,CAACc,GAAX,CAAeC,GAAf,CALP;AAAA;AAAA;AAAA;;AAAA,sBAMU,IAAIb,MAAM,CAACc,gBAAX,sCAA0DD,GAA1D,EANV;;AAAA;AAAA;AAAA,uBAS0CvB,eAAe,CAACuB,GAAG,CAACO,WAAJ,EAAD,CATzD;;AAAA;AAAA;AASUC,gBAAAA,UATV,yBASUA,UATV;AASsBC,gBAAAA,SATtB,yBASsBA,SATtB;AAAA,iDAWSH,MAAM,GAAGE,UAAH,GAAgBC,SAX/B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAcA,wBAAqD;AAAA,UAAhCT,GAAgC,uEAA1B,SAA0B;AAAA,UAAfM,MAAe,uEAAN,IAAM;;AACnD,UAAI,CAACpB,cAAL,EAAqB;AACnB,cAAM,IAAIC,MAAM,CAACc,gBAAX,CAA4B,4DAA5B,CAAN;AACD;;AAED,UAAI,CAAChB,UAAU,CAACc,GAAX,CAAeC,GAAf,CAAL,EAA0B;AACxB,cAAM,IAAIb,MAAM,CAACc,gBAAX,sCAA0DD,GAA1D,EAAN;AACD;;AAPkD,iCASjBzB,mBAAmB,CAACyB,GAAG,CAACO,WAAJ,EAAD,CATF;AAAA,UAS3CC,UAT2C,wBAS3CA,UAT2C;AAAA,UAS/BC,SAT+B,wBAS/BA,SAT+B;;AAWnD,aAAOH,MAAM,GAAGE,UAAH,GAAgBC,SAA7B;AACD;;;;EA7DkBrB,G;;AAgErBsB,MAAM,CAACC,OAAP,GAAiBjB,MAAjB","sourcesContent":["const { generateKeyPairSync, generateKeyPair: async } = require('crypto')\nconst { promisify } = require('util')\n\nconst {\n  THUMBPRINT_MATERIAL, JWK_MEMBERS, PUBLIC_MEMBERS,\n  PRIVATE_MEMBERS, KEY_MANAGEMENT_DECRYPT, KEY_MANAGEMENT_ENCRYPT\n} = require('../../help/consts')\nconst { OKP_CURVES } = require('../../registry')\nconst { edDSASupported } = require('../../help/runtime_support')\nconst errors = require('../../errors')\n\nconst Key = require('./base')\n\nconst generateKeyPair = promisify(async)\n\nconst OKP_PUBLIC = new Set(['crv', 'x'])\nObject.freeze(OKP_PUBLIC)\nconst OKP_PRIVATE = new Set([...OKP_PUBLIC, 'd'])\nObject.freeze(OKP_PRIVATE)\n\n// Octet string key pairs Key Type\nclass OKPKey extends Key {\n  constructor (...args) {\n    super(...args)\n    this[JWK_MEMBERS]()\n    Object.defineProperty(this, 'kty', { value: 'OKP', enumerable: true })\n    if (!OKP_CURVES.has(this.crv)) {\n      throw new errors.JOSENotSupported('unsupported OKP key curve')\n    }\n  }\n\n  static get [PUBLIC_MEMBERS] () {\n    return OKP_PUBLIC\n  }\n\n  static get [PRIVATE_MEMBERS] () {\n    return OKP_PRIVATE\n  }\n\n  // https://tc39.github.io/ecma262/#sec-ordinaryownpropertykeys no need for any special\n  // JSON.stringify handling in V8\n  [THUMBPRINT_MATERIAL] () {\n    return { crv: this.crv, kty: 'OKP', x: this.x }\n  }\n\n  [KEY_MANAGEMENT_ENCRYPT] () {\n    return this.algorithms('deriveKey')\n  }\n\n  [KEY_MANAGEMENT_DECRYPT] () {\n    if (this.public) {\n      return new Set()\n    }\n    return this.algorithms('deriveKey')\n  }\n\n  static async generate (crv = 'Ed25519', privat = true) {\n    if (!edDSASupported) {\n      throw new errors.JOSENotSupported('OKP keys are not supported in your Node.js runtime version')\n    }\n\n    if (!OKP_CURVES.has(crv)) {\n      throw new errors.JOSENotSupported(`unsupported OKP key curve: ${crv}`)\n    }\n\n    const { privateKey, publicKey } = await generateKeyPair(crv.toLowerCase())\n\n    return privat ? privateKey : publicKey\n  }\n\n  static generateSync (crv = 'Ed25519', privat = true) {\n    if (!edDSASupported) {\n      throw new errors.JOSENotSupported('OKP keys are not supported in your Node.js runtime version')\n    }\n\n    if (!OKP_CURVES.has(crv)) {\n      throw new errors.JOSENotSupported(`unsupported OKP key curve: ${crv}`)\n    }\n\n    const { privateKey, publicKey } = generateKeyPairSync(crv.toLowerCase())\n\n    return privat ? privateKey : publicKey\n  }\n}\n\nmodule.exports = OKPKey\n"]},"metadata":{},"sourceType":"script"}