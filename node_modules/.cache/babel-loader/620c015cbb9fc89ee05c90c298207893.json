{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _objectSpread = require(\"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _classCallCheck = require(\"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar debug = require('debug');\n\nvar _require = require('./utils'),\n    retrieveSigningKeys = _require.retrieveSigningKeys;\n\nvar _require2 = require('./wrappers'),\n    request = _require2.request,\n    cacheSigningKey = _require2.cacheSigningKey,\n    rateLimitSigningKey = _require2.rateLimitSigningKey,\n    getKeysInterceptor = _require2.getKeysInterceptor,\n    callbackSupport = _require2.callbackSupport;\n\nvar JwksError = require('./errors/JwksError');\n\nvar SigningKeyNotFoundError = require('./errors/SigningKeyNotFoundError');\n\nvar JwksClient = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function JwksClient(options) {\n    _classCallCheck(this, JwksClient);\n\n    this.options = _objectSpread({\n      rateLimit: false,\n      cache: true,\n      timeout: 30000\n    }, options);\n    this.logger = debug('jwks'); // Initialize wrappers.\n\n    if (this.options.getKeysInterceptor) {\n      this.getSigningKey = getKeysInterceptor(this, options);\n    }\n\n    if (this.options.rateLimit) {\n      this.getSigningKey = rateLimitSigningKey(this, options);\n    }\n\n    if (this.options.cache) {\n      this.getSigningKey = cacheSigningKey(this, options);\n    }\n\n    this.getSigningKey = callbackSupport(this, options);\n  }\n\n  _createClass(JwksClient, [{\n    key: \"getKeys\",\n    value: function () {\n      var _getKeys = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res, errorMsg;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.logger(\"Fetching keys from '\".concat(this.options.jwksUri, \"'\"));\n                _context.prev = 1;\n                _context.next = 4;\n                return request({\n                  uri: this.options.jwksUri,\n                  headers: this.options.requestHeaders,\n                  agent: this.options.requestAgent,\n                  timeout: this.options.timeout,\n                  fetcher: this.options.fetcher\n                });\n\n              case 4:\n                res = _context.sent;\n                this.logger('Keys:', res.keys);\n                return _context.abrupt(\"return\", res.keys);\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](1);\n                errorMsg = _context.t0.errorMsg;\n                this.logger('Failure:', errorMsg || _context.t0);\n                throw errorMsg ? new JwksError(errorMsg) : _context.t0;\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 9]]);\n      }));\n\n      function getKeys() {\n        return _getKeys.apply(this, arguments);\n      }\n\n      return getKeys;\n    }()\n  }, {\n    key: \"getSigningKeys\",\n    value: function () {\n      var _getSigningKeys = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var keys, signingKeys;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.getKeys();\n\n              case 2:\n                keys = _context2.sent;\n\n                if (!(!keys || !keys.length)) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                throw new JwksError('The JWKS endpoint did not contain any keys');\n\n              case 5:\n                signingKeys = retrieveSigningKeys(keys);\n\n                if (signingKeys.length) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                throw new JwksError('The JWKS endpoint did not contain any signing keys');\n\n              case 8:\n                this.logger('Signing Keys:', signingKeys);\n                return _context2.abrupt(\"return\", signingKeys);\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getSigningKeys() {\n        return _getSigningKeys.apply(this, arguments);\n      }\n\n      return getSigningKeys;\n    }()\n  }, {\n    key: \"getSigningKey\",\n    value: function () {\n      var _getSigningKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(kid) {\n        var keys, kidDefined, key;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.logger(\"Fetching signing key for '\".concat(kid, \"'\"));\n                _context3.next = 3;\n                return this.getSigningKeys();\n\n              case 3:\n                keys = _context3.sent;\n                kidDefined = kid !== undefined && kid !== null;\n\n                if (!(!kidDefined && keys.length > 1)) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                this.logger('No KID specified and JWKS endpoint returned more than 1 key');\n                throw new SigningKeyNotFoundError('No KID specified and JWKS endpoint returned more than 1 key');\n\n              case 8:\n                key = keys.find(function (k) {\n                  return !kidDefined || k.kid === kid;\n                });\n\n                if (!key) {\n                  _context3.next = 13;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", key);\n\n              case 13:\n                this.logger(\"Unable to find a signing key that matches '\".concat(kid, \"'\"));\n                throw new SigningKeyNotFoundError(\"Unable to find a signing key that matches '\".concat(kid, \"'\"));\n\n              case 15:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getSigningKey(_x) {\n        return _getSigningKey.apply(this, arguments);\n      }\n\n      return getSigningKey;\n    }()\n  }]);\n\n  return JwksClient;\n}();\n\nmodule.exports = {\n  JwksClient: JwksClient\n};","map":{"version":3,"sources":["/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/jwks-rsa/src/JwksClient.js"],"names":["debug","require","retrieveSigningKeys","request","cacheSigningKey","rateLimitSigningKey","getKeysInterceptor","callbackSupport","JwksError","SigningKeyNotFoundError","JwksClient","options","rateLimit","cache","timeout","logger","getSigningKey","jwksUri","uri","headers","requestHeaders","agent","requestAgent","fetcher","res","keys","errorMsg","getKeys","length","signingKeys","kid","getSigningKeys","kidDefined","undefined","key","find","k","module","exports"],"mappings":"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","sourcesContent":["const debug = require('debug');\nconst { retrieveSigningKeys } = require('./utils') ;\nconst { request, cacheSigningKey, rateLimitSigningKey, getKeysInterceptor, callbackSupport } = require('./wrappers');\nconst JwksError = require('./errors/JwksError');\nconst SigningKeyNotFoundError = require('./errors/SigningKeyNotFoundError');\n\nclass JwksClient {\n  constructor(options) {\n    this.options = {\n      rateLimit: false,\n      cache: true,\n      timeout: 30000,\n      ...options\n    };\n    this.logger = debug('jwks');\n\n    // Initialize wrappers.\n    if (this.options.getKeysInterceptor) {\n      this.getSigningKey = getKeysInterceptor(this, options);\n    }\n\n    if (this.options.rateLimit) {\n      this.getSigningKey = rateLimitSigningKey(this, options);\n    }\n    if (this.options.cache) {\n      this.getSigningKey = cacheSigningKey(this, options);\n    }\n\n    this.getSigningKey = callbackSupport(this, options);\n  }\n\n  async getKeys() {\n    this.logger(`Fetching keys from '${this.options.jwksUri}'`);\n\n    try {\n      const res = await request({\n        uri: this.options.jwksUri,\n        headers: this.options.requestHeaders,\n        agent: this.options.requestAgent,\n        timeout: this.options.timeout,\n        fetcher: this.options.fetcher\n      });\n\n      this.logger('Keys:', res.keys);  \n      return res.keys;\n    } catch (err) {\n      const { errorMsg } = err;\n      this.logger('Failure:', errorMsg || err);\n      throw (errorMsg ? new JwksError(errorMsg) : err);\n    }\n  }\n\n  async getSigningKeys() {\n    const keys = await this.getKeys();\n\n    if (!keys || !keys.length) {\n      throw new JwksError('The JWKS endpoint did not contain any keys');\n    }\n\n    const signingKeys = retrieveSigningKeys(keys);\n\n    if (!signingKeys.length) {\n      throw new JwksError('The JWKS endpoint did not contain any signing keys');\n    }\n\n    this.logger('Signing Keys:', signingKeys);\n    return signingKeys;\n  }\n\n  async getSigningKey (kid) {\n    this.logger(`Fetching signing key for '${kid}'`);\n    const keys = await this.getSigningKeys();\n\n    const kidDefined = kid !== undefined && kid !== null;\n    if (!kidDefined && keys.length > 1) {\n      this.logger('No KID specified and JWKS endpoint returned more than 1 key');\n      throw new SigningKeyNotFoundError('No KID specified and JWKS endpoint returned more than 1 key');\n    }\n\n    const key = keys.find(k => !kidDefined || k.kid === kid);\n    if (key) {\n      return key;\n    } else {\n      this.logger(`Unable to find a signing key that matches '${kid}'`);\n      throw new SigningKeyNotFoundError(`Unable to find a signing key that matches '${kid}'`);\n    }\n  }\n}\n\nmodule.exports = {\n  JwksClient\n};\n"]},"metadata":{},"sourceType":"script"}