{"ast":null,"code":"import _slicedToArray from\"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Button,Container,FormControl,Grid,InputLabel,Menu,MenuItem,NativeSelect,Select}from'@material-ui/core';import{Title}from'@material-ui/icons';import React,{useEffect,useState}from'react';import{db}from'../../../firebase';import{firebaseLooper}from'../../../utils/tools';import TestData from'../../Tests/TestData';import FetchRecipee from'./FetchRecipee';import GraphData from'./GraphData';import GraphDataRecipee from'./GraphDataRecipee';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RecipeeList=function RecipeeList(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),recipeeData=_useState2[0],setRecipeeData=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),title=_useState4[0],setTitle=_useState4[1];useEffect(function(){db.collection('recipes').onSnapshot(function(doc){var data=firebaseLooper(doc);setRecipeeData(data);});},[recipeeData]);var handleChange=function handleChange(event){setTitle(event.target.value);};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(InputLabel,{color:\"secondary\",variant:\"outlined\"}),/*#__PURE__*/_jsx(FormControl,{children:/*#__PURE__*/_jsx(Select,{fullWidth:true,variant:\"outlined\",native:true,value:title,required:true,onChange:function onChange(e){return setTitle(e.target.value);},children:recipeeData.map(function(data){return/*#__PURE__*/_jsx(\"option\",{value:data.id,children:data.title},data.title);})})})]}),/*#__PURE__*/_jsx(\"h1\",{children:title}),/*#__PURE__*/_jsx(FetchRecipee,{title:title})]});};export default RecipeeList;","map":{"version":3,"sources":["/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/src/Pages/MiddlePage/Graph/RecipeeList.jsx"],"names":["Button","Container","FormControl","Grid","InputLabel","Menu","MenuItem","NativeSelect","Select","Title","React","useEffect","useState","db","firebaseLooper","TestData","FetchRecipee","GraphData","GraphDataRecipee","RecipeeList","recipeeData","setRecipeeData","title","setTitle","collection","onSnapshot","doc","data","handleChange","event","target","value","e","map","id"],"mappings":"2KAAA,OAASA,MAAT,CAAiBC,SAAjB,CAA4BC,WAA5B,CAAyCC,IAAzC,CAA+CC,UAA/C,CAA2DC,IAA3D,CAAiEC,QAAjE,CAA2EC,YAA3E,CAAyFC,MAAzF,KAAuG,mBAAvG,CACA,OAASC,KAAT,KAAsB,oBAAtB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,EAAT,KAAmB,mBAAnB,CACA,OAASC,cAAT,KAA+B,sBAA/B,CACA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,C,wFAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,eAEgBP,QAAQ,CAAC,EAAD,CAFxB,wCAEfQ,WAFe,eAEFC,cAFE,8BAGIT,QAAQ,CAAC,EAAD,CAHZ,yCAGfU,KAHe,eAGRC,QAHQ,eAKtBZ,SAAS,CAAC,UAAM,CACZE,EAAE,CAACW,UAAH,CAAc,SAAd,EAAyBC,UAAzB,CAAoC,SAAAC,GAAG,CAAI,CACvC,GAAMC,CAAAA,IAAI,CAAGb,cAAc,CAACY,GAAD,CAA3B,CACAL,cAAc,CAACM,IAAD,CAAd,CACH,CAHD,EAKH,CANQ,CAMN,CAACP,WAAD,CANM,CAAT,CAQC,GAAMQ,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CACjCN,QAAQ,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR,CACD,CAFE,CAID,mBACI,MAAC,SAAD,yBAEC,MAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,wBACK,KAAC,UAAD,EAAY,KAAK,CAAC,WAAlB,CAA8B,OAAO,CAAC,UAAtC,EADL,cAEK,KAAC,WAAD,wBACG,KAAC,MAAD,EACT,SAAS,KADA,CAET,OAAO,CAAC,UAFC,CAGP,MAAM,KAHC,CAIP,KAAK,CAAET,KAJA,CAKP,QAAQ,KALD,CAMP,QAAQ,CAAE,kBAACU,CAAD,QAAOT,CAAAA,QAAQ,CAACS,CAAC,CAACF,MAAF,CAASC,KAAV,CAAf,EANH,UAWHX,WAAW,CAACa,GAAZ,CAAgB,SAAAN,IAAI,qBAChB,eAAyB,KAAK,CAAEA,IAAI,CAACO,EAArC,UAA0CP,IAAI,CAACL,KAA/C,EAAaK,IAAI,CAACL,KAAlB,CADgB,EAApB,CAXG,EADH,EAFL,GAFD,cA0BF,oBAAKA,KAAL,EA1BE,cA2BD,KAAC,YAAD,EAAc,KAAK,CAAEA,KAArB,EA3BC,GADJ,CA+BH,CAhDD,CAkDA,cAAeH,CAAAA,WAAf","sourcesContent":["import { Button, Container, FormControl, Grid, InputLabel, Menu, MenuItem, NativeSelect, Select } from '@material-ui/core'\nimport { Title } from '@material-ui/icons'\nimport React, { useEffect, useState } from 'react'\nimport { db } from '../../../firebase'\nimport { firebaseLooper } from '../../../utils/tools'\nimport TestData from '../../Tests/TestData'\nimport FetchRecipee from './FetchRecipee'\nimport GraphData from './GraphData'\nimport GraphDataRecipee from './GraphDataRecipee'\n\nconst RecipeeList = () => {\n  \n    const [recipeeData, setRecipeeData] = useState([])\n    const [title, setTitle] = useState('')\n\n    useEffect(() => {\n        db.collection('recipes').onSnapshot(doc => {\n            const data = firebaseLooper(doc)\n            setRecipeeData(data)\n        })\n        \n    }, [recipeeData])\n\n     const handleChange = (event) => {\n    setTitle(event.target.value);\n  };\n\n    return (\n        <Container>\n      \n         <Grid item xs={12}>\n              <InputLabel color=\"secondary\" variant=\"outlined\"></InputLabel>\n              <FormControl>\n                 <Select\n        fullWidth\n        variant=\"outlined\"\n          native\n          value={title}\n          required\n          onChange={(e) => setTitle(e.target.value)}\n          \n        >\n           \n          {\n              recipeeData.map(data => (\n                  <option key={data.title} value={data.id}>{data.title}</option>\n                \n              ))\n          }\n        </Select>\n              </FormControl>\n       \n            </Grid>\n        \n      <h1>{title}</h1>\n       <FetchRecipee title={title}/>\n        </Container>\n    )\n}\n\nexport default RecipeeList\n"]},"metadata":{},"sourceType":"module"}