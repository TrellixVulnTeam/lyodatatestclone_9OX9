{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar retrieveSigningKeys = require('../utils').retrieveSigningKeys;\n/**\n * Uses getKeysInterceptor to allow users to retrieve keys from a file,\n * external cache, or provided object before falling back to the jwksUri endpoint\n */\n\n\nfunction getKeysInterceptor(client, _ref) {\n  var getKeysInterceptor = _ref.getKeysInterceptor;\n  var getSigningKey = client.getSigningKey.bind(client);\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(kid) {\n      var keys, signingKeys, key;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getKeysInterceptor();\n\n            case 2:\n              keys = _context.sent;\n\n              if (keys && keys.length) {\n                signingKeys = retrieveSigningKeys(keys);\n              }\n\n              if (!(signingKeys && signingKeys.length)) {\n                _context.next = 8;\n                break;\n              }\n\n              key = signingKeys.find(function (k) {\n                return !kid || k.kid === kid;\n              });\n\n              if (!key) {\n                _context.next = 8;\n                break;\n              }\n\n              return _context.abrupt(\"return\", key);\n\n            case 8:\n              return _context.abrupt(\"return\", getSigningKey(kid));\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}\n\nmodule.exports.default = getKeysInterceptor;","map":{"version":3,"sources":["/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/jwks-rsa/src/wrappers/interceptor.js"],"names":["retrieveSigningKeys","require","getKeysInterceptor","client","getSigningKey","bind","kid","keys","length","signingKeys","key","find","k","module","exports","default"],"mappings":";;;;AAAA,IAAMA,mBAAmB,GAAGC,OAAO,CAAC,UAAD,CAAP,CAAoBD,mBAAhD;AAEA;AACA;AACA;AACA;;;AACA,SAASE,kBAAT,CAA4BC,MAA5B,QAA4D;AAAA,MAAtBD,kBAAsB,QAAtBA,kBAAsB;AAC1D,MAAME,aAAa,GAAGD,MAAM,CAACC,aAAP,CAAqBC,IAArB,CAA0BF,MAA1B,CAAtB;AAEA;AAAA,yEAAO,iBAAOG,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACcJ,kBAAkB,EADhC;;AAAA;AACCK,cAAAA,IADD;;AAIL,kBAAIA,IAAI,IAAIA,IAAI,CAACC,MAAjB,EAAyB;AACvBC,gBAAAA,WAAW,GAAGT,mBAAmB,CAACO,IAAD,CAAjC;AACD;;AANI,oBAQDE,WAAW,IAAIA,WAAW,CAACD,MAR1B;AAAA;AAAA;AAAA;;AASGE,cAAAA,GATH,GASSD,WAAW,CAACE,IAAZ,CAAiB,UAAAC,CAAC;AAAA,uBAAI,CAACN,GAAD,IAAQM,CAAC,CAACN,GAAF,KAAUA,GAAtB;AAAA,eAAlB,CATT;;AAAA,mBAWCI,GAXD;AAAA;AAAA;AAAA;;AAAA,+CAYMA,GAZN;;AAAA;AAAA,+CAgBEN,aAAa,CAACE,GAAD,CAhBf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAkBD;;AAEDO,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyBb,kBAAzB","sourcesContent":["const retrieveSigningKeys = require('../utils').retrieveSigningKeys;\n\n/**\n * Uses getKeysInterceptor to allow users to retrieve keys from a file,\n * external cache, or provided object before falling back to the jwksUri endpoint\n */\nfunction getKeysInterceptor(client, { getKeysInterceptor }) {\n  const getSigningKey = client.getSigningKey.bind(client);\n\n  return async (kid) => {\n    const keys = await getKeysInterceptor();\n\n    let signingKeys;\n    if (keys && keys.length) {\n      signingKeys = retrieveSigningKeys(keys);\n    }\n\n    if (signingKeys && signingKeys.length) {\n      const key = signingKeys.find(k => !kid || k.kid === kid);\n\n      if (key) {\n        return key;\n      }\n    }\n\n    return getSigningKey(kid);\n  };\n}\n\nmodule.exports.default = getKeysInterceptor;\n"]},"metadata":{},"sourceType":"script"}