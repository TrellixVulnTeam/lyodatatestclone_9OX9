{"ast":null,"code":"var _defineProperty = require(\"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _require = require('crypto'),\n    createCipheriv = _require.createCipheriv,\n    createDecipheriv = _require.createDecipheriv,\n    getCiphers = _require.getCiphers;\n\nvar uint64be = require('../help/uint64be');\n\nvar timingSafeEqual = require('../help/timing_safe_equal');\n\nvar _require2 = require('../help/consts'),\n    KEYOBJECT = _require2.KEYOBJECT;\n\nvar _require3 = require('../errors'),\n    JWEInvalid = _require3.JWEInvalid,\n    JWEDecryptionFailed = _require3.JWEDecryptionFailed;\n\nvar checkInput = function checkInput(size, iv, tag) {\n  if (iv.length !== 16) {\n    throw new JWEInvalid('invalid iv');\n  }\n\n  if (arguments.length === 3) {\n    if (tag.length !== size / 8) {\n      throw new JWEInvalid('invalid tag');\n    }\n  }\n};\n\nvar encrypt = function encrypt(size, sign, _ref, cleartext, _ref2) {\n  var keyObject = _ref[KEYOBJECT];\n  var iv = _ref2.iv,\n      _ref2$aad = _ref2.aad,\n      aad = _ref2$aad === void 0 ? Buffer.alloc(0) : _ref2$aad;\n  var key = keyObject.export();\n  checkInput(size, iv);\n  var keySize = size / 8;\n  var encKey = key.slice(keySize);\n  var cipher = createCipheriv(\"aes-\".concat(size, \"-cbc\"), encKey, iv);\n  var ciphertext = Buffer.concat([cipher.update(cleartext), cipher.final()]);\n  var macData = Buffer.concat([aad, iv, ciphertext, uint64be(aad.length * 8)]);\n  var macKey = key.slice(0, keySize);\n  var tag = sign(_defineProperty({}, KEYOBJECT, macKey), macData).slice(0, keySize);\n  return {\n    ciphertext: ciphertext,\n    tag: tag\n  };\n};\n\nvar decrypt = function decrypt(size, sign, _ref3, ciphertext, _ref4) {\n  var keyObject = _ref3[KEYOBJECT];\n  var iv = _ref4.iv,\n      _ref4$tag = _ref4.tag,\n      tag = _ref4$tag === void 0 ? Buffer.alloc(0) : _ref4$tag,\n      _ref4$aad = _ref4.aad,\n      aad = _ref4$aad === void 0 ? Buffer.alloc(0) : _ref4$aad;\n  checkInput(size, iv, tag);\n  var keySize = size / 8;\n  var key = keyObject.export();\n  var encKey = key.slice(keySize);\n  var macKey = key.slice(0, keySize);\n  var macData = Buffer.concat([aad, iv, ciphertext, uint64be(aad.length * 8)]);\n  var expectedTag = sign(_defineProperty({}, KEYOBJECT, macKey), macData, tag).slice(0, keySize);\n  var macCheckPassed = timingSafeEqual(tag, expectedTag);\n\n  if (!macCheckPassed) {\n    throw new JWEDecryptionFailed();\n  }\n\n  var cleartext;\n\n  try {\n    var cipher = createDecipheriv(\"aes-\".concat(size, \"-cbc\"), encKey, iv);\n    cleartext = Buffer.concat([cipher.update(ciphertext), cipher.final()]);\n  } catch (err) {}\n\n  if (!cleartext) {\n    throw new JWEDecryptionFailed();\n  }\n\n  return cleartext;\n};\n\nmodule.exports = function (JWA, JWK) {\n  ['A128CBC-HS256', 'A192CBC-HS384', 'A256CBC-HS512'].forEach(function (jwaAlg) {\n    var size = parseInt(jwaAlg.substr(1, 3), 10);\n    var sign = JWA.sign.get(\"HS\".concat(size * 2));\n\n    if (getCiphers().includes(\"aes-\".concat(size, \"-cbc\"))) {\n      JWA.encrypt.set(jwaAlg, encrypt.bind(undefined, size, sign));\n      JWA.decrypt.set(jwaAlg, decrypt.bind(undefined, size, sign));\n\n      JWK.oct.encrypt[jwaAlg] = JWK.oct.decrypt[jwaAlg] = function (key) {\n        return (key.use === 'enc' || key.use === undefined) && key.length / 2 === size;\n      };\n    }\n  });\n};","map":{"version":3,"sources":["/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/jose/lib/jwa/aes_cbc_hmac_sha2.js"],"names":["require","createCipheriv","createDecipheriv","getCiphers","uint64be","timingSafeEqual","KEYOBJECT","JWEInvalid","JWEDecryptionFailed","checkInput","size","iv","tag","length","arguments","encrypt","sign","cleartext","keyObject","aad","Buffer","alloc","key","export","keySize","encKey","slice","cipher","ciphertext","concat","update","final","macData","macKey","decrypt","expectedTag","macCheckPassed","err","module","exports","JWA","JWK","forEach","jwaAlg","parseInt","substr","get","includes","set","bind","undefined","oct","use"],"mappings":"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","sourcesContent":["const { createCipheriv, createDecipheriv, getCiphers } = require('crypto')\n\nconst uint64be = require('../help/uint64be')\nconst timingSafeEqual = require('../help/timing_safe_equal')\nconst { KEYOBJECT } = require('../help/consts')\nconst { JWEInvalid, JWEDecryptionFailed } = require('../errors')\n\nconst checkInput = function (size, iv, tag) {\n  if (iv.length !== 16) {\n    throw new JWEInvalid('invalid iv')\n  }\n  if (arguments.length === 3) {\n    if (tag.length !== size / 8) {\n      throw new JWEInvalid('invalid tag')\n    }\n  }\n}\n\nconst encrypt = (size, sign, { [KEYOBJECT]: keyObject }, cleartext, { iv, aad = Buffer.alloc(0) }) => {\n  const key = keyObject.export()\n  checkInput(size, iv)\n\n  const keySize = size / 8\n  const encKey = key.slice(keySize)\n  const cipher = createCipheriv(`aes-${size}-cbc`, encKey, iv)\n  const ciphertext = Buffer.concat([cipher.update(cleartext), cipher.final()])\n  const macData = Buffer.concat([aad, iv, ciphertext, uint64be(aad.length * 8)])\n\n  const macKey = key.slice(0, keySize)\n  const tag = sign({ [KEYOBJECT]: macKey }, macData).slice(0, keySize)\n\n  return { ciphertext, tag }\n}\n\nconst decrypt = (size, sign, { [KEYOBJECT]: keyObject }, ciphertext, { iv, tag = Buffer.alloc(0), aad = Buffer.alloc(0) }) => {\n  checkInput(size, iv, tag)\n\n  const keySize = size / 8\n  const key = keyObject.export()\n  const encKey = key.slice(keySize)\n  const macKey = key.slice(0, keySize)\n\n  const macData = Buffer.concat([aad, iv, ciphertext, uint64be(aad.length * 8)])\n  const expectedTag = sign({ [KEYOBJECT]: macKey }, macData, tag).slice(0, keySize)\n  const macCheckPassed = timingSafeEqual(tag, expectedTag)\n\n  if (!macCheckPassed) {\n    throw new JWEDecryptionFailed()\n  }\n\n  let cleartext\n  try {\n    const cipher = createDecipheriv(`aes-${size}-cbc`, encKey, iv)\n    cleartext = Buffer.concat([cipher.update(ciphertext), cipher.final()])\n  } catch (err) {}\n\n  if (!cleartext) {\n    throw new JWEDecryptionFailed()\n  }\n\n  return cleartext\n}\n\nmodule.exports = (JWA, JWK) => {\n  ['A128CBC-HS256', 'A192CBC-HS384', 'A256CBC-HS512'].forEach((jwaAlg) => {\n    const size = parseInt(jwaAlg.substr(1, 3), 10)\n    const sign = JWA.sign.get(`HS${size * 2}`)\n    if (getCiphers().includes(`aes-${size}-cbc`)) {\n      JWA.encrypt.set(jwaAlg, encrypt.bind(undefined, size, sign))\n      JWA.decrypt.set(jwaAlg, decrypt.bind(undefined, size, sign))\n      JWK.oct.encrypt[jwaAlg] = JWK.oct.decrypt[jwaAlg] = key => (key.use === 'enc' || key.use === undefined) && key.length / 2 === size\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"script"}