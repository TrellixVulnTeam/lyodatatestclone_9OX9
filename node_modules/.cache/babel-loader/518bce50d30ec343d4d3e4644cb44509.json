{"ast":null,"code":"var _objectSpread = require(\"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _slicedToArray = require(\"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar isObject = require('../help/is_object');\n\nvar validateCrit = require('../help/validate_crit');\n\nvar _require = require('../errors'),\n    JWEInvalid = _require.JWEInvalid;\n\nvalidateCrit = validateCrit.bind(undefined, JWEInvalid);\n\nvar compactSerializer = function compactSerializer(final, _ref) {\n  var _ref2 = _slicedToArray(_ref, 1),\n      recipient = _ref2[0];\n\n  return \"\".concat(final.protected, \".\").concat(recipient.encrypted_key, \".\").concat(final.iv, \".\").concat(final.ciphertext, \".\").concat(final.tag);\n};\n\ncompactSerializer.validate = function (protectedHeader, unprotectedHeader, aad, _ref3) {\n  var header = _ref3[0].header,\n      length = _ref3.length;\n\n  if (length !== 1 || aad || unprotectedHeader || header) {\n    throw new JWEInvalid('JWE Compact Serialization doesn\\'t support multiple recipients, JWE unprotected headers or AAD');\n  }\n\n  validateCrit(protectedHeader, unprotectedHeader, protectedHeader ? protectedHeader.crit : undefined);\n};\n\nvar flattenedSerializer = function flattenedSerializer(final, _ref4) {\n  var _ref5 = _slicedToArray(_ref4, 1),\n      recipient = _ref5[0];\n\n  var header = recipient.header,\n      encryptedKey = recipient.encrypted_key;\n  return _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, final.protected ? {\n    protected: final.protected\n  } : undefined), final.unprotected ? {\n    unprotected: final.unprotected\n  } : undefined), header ? {\n    header: header\n  } : undefined), encryptedKey ? {\n    encrypted_key: encryptedKey\n  } : undefined), final.aad ? {\n    aad: final.aad\n  } : undefined), {}, {\n    iv: final.iv,\n    ciphertext: final.ciphertext,\n    tag: final.tag\n  });\n};\n\nflattenedSerializer.validate = function (protectedHeader, unprotectedHeader, aad, _ref6) {\n  var header = _ref6[0].header,\n      length = _ref6.length;\n\n  if (length !== 1) {\n    throw new JWEInvalid('Flattened JWE JSON Serialization doesn\\'t support multiple recipients');\n  }\n\n  validateCrit(protectedHeader, _objectSpread(_objectSpread({}, unprotectedHeader), header), protectedHeader ? protectedHeader.crit : undefined);\n};\n\nvar generalSerializer = function generalSerializer(final, recipients) {\n  var result = _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, final.protected ? {\n    protected: final.protected\n  } : undefined), final.unprotected ? {\n    unprotected: final.unprotected\n  } : undefined), {}, {\n    recipients: recipients.map(function (_ref7) {\n      var header = _ref7.header,\n          encryptedKey = _ref7.encrypted_key,\n          generatedHeader = _ref7.generatedHeader;\n\n      if (!header && !encryptedKey && !generatedHeader) {\n        return false;\n      }\n\n      return _objectSpread(_objectSpread({}, header || generatedHeader ? {\n        header: _objectSpread(_objectSpread({}, header), generatedHeader)\n      } : undefined), encryptedKey ? {\n        encrypted_key: encryptedKey\n      } : undefined);\n    }).filter(Boolean)\n  }, final.aad ? {\n    aad: final.aad\n  } : undefined), {}, {\n    iv: final.iv,\n    ciphertext: final.ciphertext,\n    tag: final.tag\n  });\n\n  if (!result.recipients.length) {\n    delete result.recipients;\n  }\n\n  return result;\n};\n\ngeneralSerializer.validate = function (protectedHeader, unprotectedHeader, aad, recipients) {\n  recipients.forEach(function (_ref8) {\n    var header = _ref8.header;\n    validateCrit(protectedHeader, _objectSpread(_objectSpread({}, header), unprotectedHeader), protectedHeader ? protectedHeader.crit : undefined);\n  });\n};\n\nvar isJSON = function isJSON(input) {\n  return isObject(input) && typeof input.ciphertext === 'string' && typeof input.iv === 'string' && typeof input.tag === 'string' && (input.unprotected === undefined || isObject(input.unprotected)) && (input.protected === undefined || typeof input.protected === 'string') && (input.aad === undefined || typeof input.aad === 'string');\n};\n\nvar isSingleRecipient = function isSingleRecipient(input) {\n  return (input.encrypted_key === undefined || typeof input.encrypted_key === 'string') && (input.header === undefined || isObject(input.header));\n};\n\nvar isValidRecipient = function isValidRecipient(recipient) {\n  return isObject(recipient) && typeof recipient.encrypted_key === 'string' && (recipient.header === undefined || isObject(recipient.header));\n};\n\nvar isMultiRecipient = function isMultiRecipient(input) {\n  if (Array.isArray(input.recipients) && input.recipients.every(isValidRecipient)) {\n    return true;\n  }\n\n  return false;\n};\n\nvar detect = function detect(input) {\n  if (typeof input === 'string' && input.split('.').length === 5) {\n    return 'compact';\n  }\n\n  if (isJSON(input)) {\n    if (isMultiRecipient(input)) {\n      return 'general';\n    }\n\n    if (isSingleRecipient(input)) {\n      return 'flattened';\n    }\n  }\n\n  throw new JWEInvalid('JWE malformed or invalid serialization');\n};\n\nmodule.exports = {\n  compact: compactSerializer,\n  flattened: flattenedSerializer,\n  general: generalSerializer,\n  detect: detect\n};","map":{"version":3,"sources":["/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/jose/lib/jwe/serializers.js"],"names":["isObject","require","validateCrit","JWEInvalid","bind","undefined","compactSerializer","final","recipient","protected","encrypted_key","iv","ciphertext","tag","validate","protectedHeader","unprotectedHeader","aad","header","length","crit","flattenedSerializer","encryptedKey","unprotected","generalSerializer","recipients","result","map","generatedHeader","filter","Boolean","forEach","isJSON","input","isSingleRecipient","isValidRecipient","isMultiRecipient","Array","isArray","every","detect","split","module","exports","compact","flattened","general"],"mappings":"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","sourcesContent":["const isObject = require('../help/is_object')\nlet validateCrit = require('../help/validate_crit')\n\nconst { JWEInvalid } = require('../errors')\n\nvalidateCrit = validateCrit.bind(undefined, JWEInvalid)\n\nconst compactSerializer = (final, [recipient]) => {\n  return `${final.protected}.${recipient.encrypted_key}.${final.iv}.${final.ciphertext}.${final.tag}`\n}\ncompactSerializer.validate = (protectedHeader, unprotectedHeader, aad, { 0: { header }, length }) => {\n  if (length !== 1 || aad || unprotectedHeader || header) {\n    throw new JWEInvalid('JWE Compact Serialization doesn\\'t support multiple recipients, JWE unprotected headers or AAD')\n  }\n  validateCrit(protectedHeader, unprotectedHeader, protectedHeader ? protectedHeader.crit : undefined)\n}\n\nconst flattenedSerializer = (final, [recipient]) => {\n  const { header, encrypted_key: encryptedKey } = recipient\n\n  return {\n    ...(final.protected ? { protected: final.protected } : undefined),\n    ...(final.unprotected ? { unprotected: final.unprotected } : undefined),\n    ...(header ? { header } : undefined),\n    ...(encryptedKey ? { encrypted_key: encryptedKey } : undefined),\n    ...(final.aad ? { aad: final.aad } : undefined),\n    iv: final.iv,\n    ciphertext: final.ciphertext,\n    tag: final.tag\n  }\n}\nflattenedSerializer.validate = (protectedHeader, unprotectedHeader, aad, { 0: { header }, length }) => {\n  if (length !== 1) {\n    throw new JWEInvalid('Flattened JWE JSON Serialization doesn\\'t support multiple recipients')\n  }\n  validateCrit(protectedHeader, { ...unprotectedHeader, ...header }, protectedHeader ? protectedHeader.crit : undefined)\n}\n\nconst generalSerializer = (final, recipients) => {\n  const result = {\n    ...(final.protected ? { protected: final.protected } : undefined),\n    ...(final.unprotected ? { unprotected: final.unprotected } : undefined),\n    recipients: recipients.map(({ header, encrypted_key: encryptedKey, generatedHeader }) => {\n      if (!header && !encryptedKey && !generatedHeader) {\n        return false\n      }\n\n      return {\n        ...(header || generatedHeader ? { header: { ...header, ...generatedHeader } } : undefined),\n        ...(encryptedKey ? { encrypted_key: encryptedKey } : undefined)\n      }\n    }).filter(Boolean),\n    ...(final.aad ? { aad: final.aad } : undefined),\n    iv: final.iv,\n    ciphertext: final.ciphertext,\n    tag: final.tag\n  }\n\n  if (!result.recipients.length) {\n    delete result.recipients\n  }\n\n  return result\n}\ngeneralSerializer.validate = (protectedHeader, unprotectedHeader, aad, recipients) => {\n  recipients.forEach(({ header }) => {\n    validateCrit(protectedHeader, { ...header, ...unprotectedHeader }, protectedHeader ? protectedHeader.crit : undefined)\n  })\n}\n\nconst isJSON = (input) => {\n  return isObject(input) &&\n    typeof input.ciphertext === 'string' &&\n    typeof input.iv === 'string' &&\n    typeof input.tag === 'string' &&\n    (input.unprotected === undefined || isObject(input.unprotected)) &&\n    (input.protected === undefined || typeof input.protected === 'string') &&\n    (input.aad === undefined || typeof input.aad === 'string')\n}\n\nconst isSingleRecipient = (input) => {\n  return (input.encrypted_key === undefined || typeof input.encrypted_key === 'string') &&\n    (input.header === undefined || isObject(input.header))\n}\n\nconst isValidRecipient = (recipient) => {\n  return isObject(recipient) && typeof recipient.encrypted_key === 'string' && (recipient.header === undefined || isObject(recipient.header))\n}\n\nconst isMultiRecipient = (input) => {\n  if (Array.isArray(input.recipients) && input.recipients.every(isValidRecipient)) {\n    return true\n  }\n\n  return false\n}\n\nconst detect = (input) => {\n  if (typeof input === 'string' && input.split('.').length === 5) {\n    return 'compact'\n  }\n\n  if (isJSON(input)) {\n    if (isMultiRecipient(input)) {\n      return 'general'\n    }\n\n    if (isSingleRecipient(input)) {\n      return 'flattened'\n    }\n  }\n\n  throw new JWEInvalid('JWE malformed or invalid serialization')\n}\n\nmodule.exports = {\n  compact: compactSerializer,\n  flattened: flattenedSerializer,\n  general: generalSerializer,\n  detect\n}\n"]},"metadata":{},"sourceType":"script"}