{"ast":null,"code":"import _slicedToArray from\"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Card,Container,FormControl,InputLabel,MenuItem,Select,Typography}from'@material-ui/core';import{Alert}from'@material-ui/lab';import React,{useEffect,useState}from'react';import{Doughnut,Pie}from'react-chartjs-2';import{db}from'../../firebase';import{firebaseLooper}from'../../utils/tools';import LinearIndeterminate from'./LinearInderminate';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var JobGraph=function JobGraph(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),pending=_useState2[0],setPending=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),machines=_useState4[0],setMachines=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),completed=_useState6[0],setCompleted=_useState6[1];useEffect(function(){db.collection('machineData').onSnapshot(function(doc){var data=firebaseLooper(doc);setMachines(data);});db.collection('jobData').where('status','==',false).onSnapshot(function(doc){var data=firebaseLooper(doc);setPending(data);});db.collection('jobData').where('status','==',true).onSnapshot(function(doc){var data=firebaseLooper(doc);setCompleted(data);});},[]);var handleChange=function handleChange(e){var mid=e.target.value;db.collection('jobData').where('status','==',false).where('mid','==',\"\".concat(mid)).onSnapshot(function(doc){var data=firebaseLooper(doc);setPending(data);});db.collection('jobData').where('status','==',true).where('mid','==',\"\".concat(mid)).onSnapshot(function(doc){var data=firebaseLooper(doc);setCompleted(data);});};var data={labels:['Completed','Pending'],datasets:[{fill:false,lineTension:0.1,backgroundColor:['#10B90A','#FF9A40'],hoverOffset:4,borderColor:'white',borderCapStyle:'butt',borderDash:[],borderDashOffset:0.0,borderJoinStyle:'miter',pointBorderColor:'white',pointBackgroundColor:'white',pointBorderWidth:1,pointHoverRadius:5,pointHoverBackgroundColor:'#ff7a00',pointHoverBorderColor:'#7868e6',pointHoverBorderWidth:2,pointRadius:1,pointHitRadius:10,data:[completed.length,pending.length]}]};return/*#__PURE__*/_jsx(\"div\",{style:{boxShadow:'0px 2px 6px #0000000A'},className:\"bg-grey-50\",children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Typography,{style:{color:'#43425D',opacity:0.68},variant:\"h2\",align:\"center\",gutterBottom:true,children:/*#__PURE__*/_jsx(\"b\",{style:{color:'#43425D'},children:\"Jobs Data\"})}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'center'},children:/*#__PURE__*/_jsxs(FormControl,{variant:\"outlined\",style:{width:'70%'},children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Select Machine\"}),/*#__PURE__*/_jsx(Select,{label:\"Select Machine\",onChange:handleChange,children:machines.map(function(data){return/*#__PURE__*/_jsx(MenuItem,{value:data.id,children:data.title})// <Button style={{color: 'orangered'}} href={`/machine-data/Job/${data.id}/Job`}><LaunchIcon/></Button>\n;})})]})}),/*#__PURE__*/_jsx(Doughnut,{data:data}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Alert,{severity:\"warning\",children:\"Pending Jobs\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Alert,{severity:\"success\",children:\"Completed Jobs\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Alert,{severity:\"info\",children:\"Change Machines for individual data\"})]})});};export default JobGraph;","map":{"version":3,"sources":["/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/src/Pages/MiddlePage/JobGraph.jsx"],"names":["Card","Container","FormControl","InputLabel","MenuItem","Select","Typography","Alert","React","useEffect","useState","Doughnut","Pie","db","firebaseLooper","LinearIndeterminate","JobGraph","pending","setPending","machines","setMachines","completed","setCompleted","collection","onSnapshot","doc","data","where","handleChange","e","mid","target","value","labels","datasets","fill","lineTension","backgroundColor","hoverOffset","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","length","boxShadow","color","opacity","display","justifyContent","width","map","id","title"],"mappings":"2KAAA,OAASA,IAAT,CAAeC,SAAf,CAA0BC,WAA1B,CAAuCC,UAAvC,CAAmDC,QAAnD,CAA6DC,MAA7D,CAAqEC,UAArE,KAAuF,mBAAvF,CACA,OAASC,KAAT,KAAsB,kBAAtB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,QAAT,CAAmBC,GAAnB,KAA8B,iBAA9B,CACA,OAASC,EAAT,KAAmB,gBAAnB,CACA,OAASC,cAAT,KAA+B,mBAA/B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,qBAAhC,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,eACWN,QAAQ,CAAC,EAAD,CADnB,wCACZO,OADY,eACHC,UADG,8BAEaR,QAAQ,CAAC,EAAD,CAFrB,yCAEZS,QAFY,eAEFC,WAFE,8BAGeV,QAAQ,CAAC,EAAD,CAHvB,yCAGZW,SAHY,eAGDC,YAHC,eAKnBb,SAAS,CAAC,UAAM,CACbI,EAAE,CAACU,UAAH,CAAc,aAAd,EAA6BC,UAA7B,CAAwC,SAAAC,GAAG,CAAI,CAC1C,GAAMC,CAAAA,IAAI,CAAGZ,cAAc,CAACW,GAAD,CAA3B,CACAL,WAAW,CAACM,IAAD,CAAX,CACH,CAHF,EAICb,EAAE,CAACU,UAAH,CAAc,SAAd,EAAyBI,KAAzB,CAA+B,QAA/B,CAAyC,IAAzC,CAA+C,KAA/C,EAAsDH,UAAtD,CAAiE,SAAAC,GAAG,CAAI,CACpE,GAAMC,CAAAA,IAAI,CAAGZ,cAAc,CAACW,GAAD,CAA3B,CACAP,UAAU,CAACQ,IAAD,CAAV,CACH,CAHD,EAKAb,EAAE,CAACU,UAAH,CAAc,SAAd,EAAyBI,KAAzB,CAA+B,QAA/B,CAAyC,IAAzC,CAA+C,IAA/C,EAAqDH,UAArD,CAAgE,SAAAC,GAAG,CAAI,CACnE,GAAMC,CAAAA,IAAI,CAAGZ,cAAc,CAACW,GAAD,CAA3B,CACAH,YAAY,CAACI,IAAD,CAAZ,CACH,CAHD,EAIH,CAdQ,CAcP,EAdO,CAAT,CAgBA,GAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CAC1B,GAAIC,CAAAA,GAAG,CAAGD,CAAC,CAACE,MAAF,CAASC,KAAnB,CACCnB,EAAE,CAACU,UAAH,CAAc,SAAd,EAAyBI,KAAzB,CAA+B,QAA/B,CAAyC,IAAzC,CAA+C,KAA/C,EAAsDA,KAAtD,CAA4D,KAA5D,CAAmE,IAAnE,WAA4EG,GAA5E,GAAmFN,UAAnF,CAA8F,SAAAC,GAAG,CAAI,CAChG,GAAMC,CAAAA,IAAI,CAAGZ,cAAc,CAACW,GAAD,CAA3B,CACAP,UAAU,CAACQ,IAAD,CAAV,CACH,CAHF,EAKCb,EAAE,CAACU,UAAH,CAAc,SAAd,EAAyBI,KAAzB,CAA+B,QAA/B,CAAyC,IAAzC,CAA+C,IAA/C,EAAqDA,KAArD,CAA2D,KAA3D,CAAkE,IAAlE,WAA2EG,GAA3E,GAAkFN,UAAlF,CAA6F,SAAAC,GAAG,CAAI,CAChG,GAAMC,CAAAA,IAAI,CAAGZ,cAAc,CAACW,GAAD,CAA3B,CACAH,YAAY,CAACI,IAAD,CAAZ,CACH,CAHD,EAIH,CAXD,CAaA,GAAMA,CAAAA,IAAI,CAAG,CACfO,MAAM,CAAE,CACN,WADM,CAEN,SAFM,CADO,CAMfC,QAAQ,CAAE,CACR,CAEEC,IAAI,CAAE,KAFR,CAGEC,WAAW,CAAE,GAHf,CAIEC,eAAe,CAAE,CACjB,SADiB,CAEjB,SAFiB,CAJnB,CAQAC,WAAW,CAAE,CARb,CASEC,WAAW,CAAE,OATf,CAUEC,cAAc,CAAE,MAVlB,CAWEC,UAAU,CAAE,EAXd,CAYEC,gBAAgB,CAAE,GAZpB,CAaEC,eAAe,CAAE,OAbnB,CAcEC,gBAAgB,CAAE,OAdpB,CAeEC,oBAAoB,CAAE,OAfxB,CAgBEC,gBAAgB,CAAE,CAhBpB,CAiBEC,gBAAgB,CAAE,CAjBpB,CAkBEC,yBAAyB,CAAE,SAlB7B,CAmBEC,qBAAqB,CAAE,SAnBzB,CAoBEC,qBAAqB,CAAE,CApBzB,CAqBEC,WAAW,CAAE,CArBf,CAsBEC,cAAc,CAAE,EAtBlB,CAuBE1B,IAAI,CAAE,CAACL,SAAS,CAACgC,MAAX,CAAmBpC,OAAO,CAACoC,MAA3B,CAvBR,CADQ,CANK,CAAb,CAoCA,mBACE,YAAK,KAAK,CAAE,CAACC,SAAS,CAAE,uBAAZ,CAAZ,CAAkD,SAAS,CAAC,YAA5D,uBAEE,MAAC,IAAD,yBACE,aADF,cAEI,KAAC,UAAD,EAAY,KAAK,CAAE,CAAEC,KAAK,CAAC,SAAR,CAAmBC,OAAO,CAAE,IAA5B,CAAnB,CAAsD,OAAO,CAAC,IAA9D,CAAmE,KAAK,CAAC,QAAzE,CAAkF,YAAY,KAA9F,uBAA+F,UAAG,KAAK,CAAE,CAACD,KAAK,CAAC,SAAP,CAAV,uBAA/F,EAFJ,cAGI,YAAK,KAAK,CAAE,CAACE,OAAO,CAAE,MAAV,CAAkBC,cAAc,CAAE,QAAlC,CAAZ,uBACC,MAAC,WAAD,EAAa,OAAO,CAAC,UAArB,CAAgC,KAAK,CAAE,CAACC,KAAK,CAAE,KAAR,CAAvC,wBACE,KAAC,UAAD,6BADF,cAEG,KAAC,MAAD,EAAQ,KAAK,CAAC,gBAAd,CAA+B,QAAQ,CAAE/B,YAAzC,UAGJT,QAAQ,CAACyC,GAAT,CAAa,SAAAlC,IAAI,qBAEf,KAAC,QAAD,EAAU,KAAK,CAAEA,IAAI,CAACmC,EAAtB,UAA2BnC,IAAI,CAACoC,KAAhC,EACA;AAHe,EAAjB,CAHI,EAFH,GADD,EAHJ,cAsBI,KAAC,QAAD,EAAU,IAAI,CAAEpC,IAAhB,EAtBJ,cAuBI,aAvBJ,cAwBI,KAAC,KAAD,EAAO,QAAQ,CAAC,SAAhB,0BAxBJ,cAyBI,aAzBJ,cA0BI,KAAC,KAAD,EAAO,QAAQ,CAAC,SAAhB,4BA1BJ,cA2BI,aA3BJ,cA4BI,KAAC,KAAD,EAAO,QAAQ,CAAC,MAAhB,iDA5BJ,GAFF,EADF,CAwCH,CA9GD,CAgHA,cAAeV,CAAAA,QAAf","sourcesContent":["import { Card, Container, FormControl, InputLabel, MenuItem, Select, Typography } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport React, { useEffect, useState } from 'react'\nimport { Doughnut, Pie } from 'react-chartjs-2';\nimport { db } from '../../firebase';\nimport { firebaseLooper } from '../../utils/tools';\nimport LinearIndeterminate from './LinearInderminate';\n\nconst JobGraph = () => {\n    const [pending, setPending] = useState([])\n    const [machines, setMachines] = useState([])\n    const [completed, setCompleted] = useState([])\n\n    useEffect(() => {\n       db.collection('machineData').onSnapshot(doc => {\n            const data = firebaseLooper(doc)\n            setMachines(data)\n        })\n        db.collection('jobData').where('status', '==', false).onSnapshot(doc => {\n            const data = firebaseLooper(doc)\n            setPending(data)\n        })\n\n        db.collection('jobData').where('status', '==', true).onSnapshot(doc => {\n            const data = firebaseLooper(doc)\n            setCompleted(data)\n        })\n    },[])\n\n    const handleChange = (e) => {\n      let mid = e.target.value\n       db.collection('jobData').where('status', '==', false).where('mid', '==', `${mid}`).onSnapshot(doc => {\n            const data = firebaseLooper(doc)\n            setPending(data)\n        })\n\n        db.collection('jobData').where('status', '==', true).where('mid', '==', `${mid}`).onSnapshot(doc => {\n            const data = firebaseLooper(doc)\n            setCompleted(data)\n        })\n    }\n\n    const data = {\n  labels: [\n    'Completed',\n    'Pending',\n    \n  ],\n  datasets: [\n    {\n      \n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: [\n      '#10B90A',\n      '#FF9A40'\n    ],\n    hoverOffset: 4,\n      borderColor: 'white',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'white',\n      pointBackgroundColor: 'white',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: '#ff7a00',\n      pointHoverBorderColor: '#7868e6',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: [completed.length, pending.length]\n    },\n    \n  ]\n}\n\n    return (\n      <div style={{boxShadow: '0px 2px 6px #0000000A'}} className='bg-grey-50'>\n        \n        <Card >\n          <br />\n            <Typography style={{ color:'#43425D', opacity: 0.68}} variant='h2' align='center' gutterBottom><b style={{color:'#43425D'}}>Jobs Data</b></Typography>\n            <div style={{display: 'flex', justifyContent: 'center'}}>\n             <FormControl variant='outlined' style={{width: '70%'}}>\n               <InputLabel>Select Machine</InputLabel>\n                <Select label=\"Select Machine\" onChange={handleChange} >\n              \n          {\n            machines.map(data => (\n             \n              <MenuItem value={data.id}>{data.title}</MenuItem>\n              // <Button style={{color: 'orangered'}} href={`/machine-data/Job/${data.id}/Job`}><LaunchIcon/></Button>\n              \n            ))\n          }\n         \n          </Select>\n             </FormControl>\n              \n            </div>\n            \n            <Doughnut data={data}/>\n            <br/>\n            <Alert severity='warning'>Pending Jobs</Alert>\n            <br/>\n            <Alert severity='success'>Completed Jobs</Alert>\n            <br/>\n            <Alert severity='info'>Change Machines for individual data</Alert>\n           \n          \n          \n        </Card>\n       \n      </div>\n        \n    )\n}\n\nexport default JobGraph\n"]},"metadata":{},"sourceType":"module"}