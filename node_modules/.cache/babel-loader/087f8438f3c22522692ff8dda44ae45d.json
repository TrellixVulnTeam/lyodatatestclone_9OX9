{"ast":null,"code":"var _require = require('crypto'),\n    createCipheriv = _require.createCipheriv,\n    createDecipheriv = _require.createDecipheriv,\n    getCiphers = _require.getCiphers;\n\nvar _require2 = require('../help/consts'),\n    KEYOBJECT = _require2.KEYOBJECT;\n\nvar _require3 = require('../errors'),\n    JWEInvalid = _require3.JWEInvalid,\n    JWEDecryptionFailed = _require3.JWEDecryptionFailed;\n\nvar _require4 = require('../help/key_object'),\n    asInput = _require4.asInput;\n\nvar checkInput = function checkInput(size, iv, tag) {\n  if (iv.length !== 12) {\n    throw new JWEInvalid('invalid iv');\n  }\n\n  if (arguments.length === 3) {\n    if (tag.length !== 16) {\n      throw new JWEInvalid('invalid tag');\n    }\n  }\n};\n\nvar encrypt = function encrypt(size, _ref, cleartext, _ref2) {\n  var keyObject = _ref[KEYOBJECT];\n  var iv = _ref2.iv,\n      _ref2$aad = _ref2.aad,\n      aad = _ref2$aad === void 0 ? Buffer.alloc(0) : _ref2$aad;\n  var key = asInput(keyObject, false);\n  checkInput(size, iv);\n  var cipher = createCipheriv(\"aes-\".concat(size, \"-gcm\"), key, iv, {\n    authTagLength: 16\n  });\n  cipher.setAAD(aad);\n  var ciphertext = Buffer.concat([cipher.update(cleartext), cipher.final()]);\n  var tag = cipher.getAuthTag();\n  return {\n    ciphertext: ciphertext,\n    tag: tag\n  };\n};\n\nvar decrypt = function decrypt(size, _ref3, ciphertext, _ref4) {\n  var keyObject = _ref3[KEYOBJECT];\n  var iv = _ref4.iv,\n      _ref4$tag = _ref4.tag,\n      tag = _ref4$tag === void 0 ? Buffer.alloc(0) : _ref4$tag,\n      _ref4$aad = _ref4.aad,\n      aad = _ref4$aad === void 0 ? Buffer.alloc(0) : _ref4$aad;\n  var key = asInput(keyObject, false);\n  checkInput(size, iv, tag);\n\n  try {\n    var cipher = createDecipheriv(\"aes-\".concat(size, \"-gcm\"), key, iv, {\n      authTagLength: 16\n    });\n    cipher.setAuthTag(tag);\n    cipher.setAAD(aad);\n    return Buffer.concat([cipher.update(ciphertext), cipher.final()]);\n  } catch (err) {\n    throw new JWEDecryptionFailed();\n  }\n};\n\nmodule.exports = function (JWA, JWK) {\n  ['A128GCM', 'A192GCM', 'A256GCM'].forEach(function (jwaAlg) {\n    var size = parseInt(jwaAlg.substr(1, 3), 10);\n\n    if (getCiphers().includes(\"aes-\".concat(size, \"-gcm\"))) {\n      JWA.encrypt.set(jwaAlg, encrypt.bind(undefined, size));\n      JWA.decrypt.set(jwaAlg, decrypt.bind(undefined, size));\n\n      JWK.oct.encrypt[jwaAlg] = JWK.oct.decrypt[jwaAlg] = function (key) {\n        return (key.use === 'enc' || key.use === undefined) && key.length === size;\n      };\n    }\n  });\n};","map":{"version":3,"sources":["/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/jose/lib/jwa/aes_gcm.js"],"names":["require","createCipheriv","createDecipheriv","getCiphers","KEYOBJECT","JWEInvalid","JWEDecryptionFailed","asInput","checkInput","size","iv","tag","length","arguments","encrypt","cleartext","keyObject","aad","Buffer","alloc","key","cipher","authTagLength","setAAD","ciphertext","concat","update","final","getAuthTag","decrypt","setAuthTag","err","module","exports","JWA","JWK","forEach","jwaAlg","parseInt","substr","includes","set","bind","undefined","oct","use"],"mappings":"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","sourcesContent":["const { createCipheriv, createDecipheriv, getCiphers } = require('crypto')\n\nconst { KEYOBJECT } = require('../help/consts')\nconst { JWEInvalid, JWEDecryptionFailed } = require('../errors')\nconst { asInput } = require('../help/key_object')\n\nconst checkInput = function (size, iv, tag) {\n  if (iv.length !== 12) {\n    throw new JWEInvalid('invalid iv')\n  }\n  if (arguments.length === 3) {\n    if (tag.length !== 16) {\n      throw new JWEInvalid('invalid tag')\n    }\n  }\n}\n\nconst encrypt = (size, { [KEYOBJECT]: keyObject }, cleartext, { iv, aad = Buffer.alloc(0) }) => {\n  const key = asInput(keyObject, false)\n  checkInput(size, iv)\n\n  const cipher = createCipheriv(`aes-${size}-gcm`, key, iv, { authTagLength: 16 })\n  cipher.setAAD(aad)\n\n  const ciphertext = Buffer.concat([cipher.update(cleartext), cipher.final()])\n  const tag = cipher.getAuthTag()\n\n  return { ciphertext, tag }\n}\n\nconst decrypt = (size, { [KEYOBJECT]: keyObject }, ciphertext, { iv, tag = Buffer.alloc(0), aad = Buffer.alloc(0) }) => {\n  const key = asInput(keyObject, false)\n  checkInput(size, iv, tag)\n\n  try {\n    const cipher = createDecipheriv(`aes-${size}-gcm`, key, iv, { authTagLength: 16 })\n    cipher.setAuthTag(tag)\n    cipher.setAAD(aad)\n\n    return Buffer.concat([cipher.update(ciphertext), cipher.final()])\n  } catch (err) {\n    throw new JWEDecryptionFailed()\n  }\n}\n\nmodule.exports = (JWA, JWK) => {\n  ['A128GCM', 'A192GCM', 'A256GCM'].forEach((jwaAlg) => {\n    const size = parseInt(jwaAlg.substr(1, 3), 10)\n    if (getCiphers().includes(`aes-${size}-gcm`)) {\n      JWA.encrypt.set(jwaAlg, encrypt.bind(undefined, size))\n      JWA.decrypt.set(jwaAlg, decrypt.bind(undefined, size))\n      JWK.oct.encrypt[jwaAlg] = JWK.oct.decrypt[jwaAlg] = key => (key.use === 'enc' || key.use === undefined) && key.length === size\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"script"}