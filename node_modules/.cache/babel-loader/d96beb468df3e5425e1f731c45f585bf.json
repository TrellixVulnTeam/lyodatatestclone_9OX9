{"ast":null,"code":"var debug = require('debug');\n\nvar memoizer = require('lru-memoizer');\n\nfunction cacheWrapper(client, _ref) {\n  var _ref$cacheMaxEntries = _ref.cacheMaxEntries,\n      cacheMaxEntries = _ref$cacheMaxEntries === void 0 ? 5 : _ref$cacheMaxEntries,\n      _ref$cacheMaxAge = _ref.cacheMaxAge,\n      cacheMaxAge = _ref$cacheMaxAge === void 0 ? 600000 : _ref$cacheMaxAge;\n  var logger = debug('jwks');\n  logger(\"Configured caching of signing keys. Max: \".concat(cacheMaxEntries, \" / Age: \").concat(cacheMaxAge));\n  return memoizer.sync({\n    hash: function hash(kid) {\n      return kid;\n    },\n    load: client.getSigningKey.bind(client),\n    maxAge: cacheMaxAge,\n    max: cacheMaxEntries\n  });\n}\n\nmodule.exports.default = cacheWrapper;","map":{"version":3,"sources":["/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/jwks-rsa/src/wrappers/cache.js"],"names":["debug","require","memoizer","cacheWrapper","client","cacheMaxEntries","cacheMaxAge","logger","sync","hash","kid","load","getSigningKey","bind","maxAge","max","module","exports","default"],"mappings":"AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,cAAD,CAAxB;;AAEA,SAASE,YAAT,CAAsBC,MAAtB,QAA6E;AAAA,kCAA7CC,eAA6C;AAAA,MAA7CA,eAA6C,qCAA3B,CAA2B;AAAA,8BAAxBC,WAAwB;AAAA,MAAxBA,WAAwB,iCAAV,MAAU;AAC3E,MAAMC,MAAM,GAAGP,KAAK,CAAC,MAAD,CAApB;AACAO,EAAAA,MAAM,oDAA6CF,eAA7C,qBAAuEC,WAAvE,EAAN;AACA,SAAOJ,QAAQ,CAACM,IAAT,CAAc;AACnBC,IAAAA,IAAI,EAAE,cAACC,GAAD;AAAA,aAASA,GAAT;AAAA,KADa;AAEnBC,IAAAA,IAAI,EAAEP,MAAM,CAACQ,aAAP,CAAqBC,IAArB,CAA0BT,MAA1B,CAFa;AAGnBU,IAAAA,MAAM,EAAER,WAHW;AAInBS,IAAAA,GAAG,EAAEV;AAJc,GAAd,CAAP;AAMD;;AAEDW,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyBf,YAAzB","sourcesContent":["const debug = require('debug');\nconst memoizer = require('lru-memoizer');\n\nfunction cacheWrapper(client, { cacheMaxEntries = 5, cacheMaxAge = 600000 }) {\n  const logger = debug('jwks');\n  logger(`Configured caching of signing keys. Max: ${cacheMaxEntries} / Age: ${cacheMaxAge}`);\n  return memoizer.sync({\n    hash: (kid) => kid,\n    load: client.getSigningKey.bind(client),\n    maxAge: cacheMaxAge,\n    max: cacheMaxEntries\n  });\n}\n\nmodule.exports.default = cacheWrapper;\n"]},"metadata":{},"sourceType":"script"}