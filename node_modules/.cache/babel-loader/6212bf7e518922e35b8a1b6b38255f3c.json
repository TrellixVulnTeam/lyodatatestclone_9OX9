{"ast":null,"code":"var _jsxFileName = \"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/src/Pages/Tests/TestData.jsx\",\n    _s = $RefreshSig$();\n\nimport { Container } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { Line } from \"react-chartjs-2\";\nimport { db } from '../../firebase';\nimport { firebaseLooper } from '../../utils/tools';\nimport FetchRecipee from '../MiddlePage/Graph/FetchRecipee';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TestData = ({\n  reid,\n  data\n}) => {\n  _s();\n\n  let time = [];\n  let temp = [];\n  let stillTime = [];\n  let pressure = [];\n  let delta = [];\n  let deltaP = [];\n  const [timeData, setTimeData] = useState([]);\n  const [realData, setRealData] = useState([]);\n  const [stillTimeData, setStillTimeData] = useState([]);\n  const [deltaTemp, setDeltaTemp] = useState([]);\n  const [deltaPressure, setDeltaP] = useState([]);\n  const [tempData, setTempData] = useState([]);\n  const [pressureData, setPressureData] = useState([]);\n  const totalDuration = 10000;\n  const delayBetweenPoints = totalDuration / data.length;\n  useEffect(() => {\n    db.collection('realtimeData').where('recipe_id', '==', `${reid}`).onSnapshot(doc => {\n      var _data$;\n\n      const data = firebaseLooper(doc);\n      setRealData((_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.temp_points);\n    });\n    var x, y, z;\n    var randomTemp, randomPressure;\n    let currTemp = 0;\n    let currPressure = 800;\n    let currTime = 0;\n\n    for (let index = 0; index < data.length; index++) {\n      x = (data[index].temp1 - currTemp) / data[index].time1;\n      y = (data[index].pressure - currPressure) / data[index].time1;\n\n      for (let j = 0; j < data[index].time1; j++) {\n        currTime++;\n        currTemp = currTemp + x;\n        randomTemp = currTemp + Math.random() * x;\n        currPressure = currPressure + y;\n        randomPressure = currPressure + Math.floor(Math.random() * y);\n        time.push(currTime);\n        temp.push(currTemp);\n        pressure.push(currPressure);\n        delta.push(randomTemp);\n        deltaP.push(randomPressure);\n      }\n\n      for (let k = 0; k < data[index].time2; k++) {\n        currTime++;\n        time.push(currTime);\n        delta.push(randomTemp + Math.random() * x * 1.75);\n        deltaP.push(randomPressure + Math.random() * y);\n        temp.push(currTemp);\n        pressure.push(currPressure);\n      }\n    }\n\n    setTimeData(time);\n    setTempData(temp);\n    setStillTimeData(stillTime);\n    setPressureData(pressure);\n    setDeltaP(deltaP);\n    setDeltaTemp(delta);\n  }, []);\n  const dataTwo = {\n    labels: timeData,\n    datasets: [{\n      yAxisID: \"y-axis-1\",\n      label: 'Pressure',\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'yellow',\n      borderColor: 'yellow',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'yellow',\n      pointBackgroundColor: 'yellow',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: '#ff7a00',\n      pointHoverBorderColor: '#7868e6',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: pressureData\n    }, {\n      yAxisID: \"y2\",\n      position: \"right\",\n      label: 'RealTime',\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'green',\n      borderColor: 'green',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'green',\n      pointBackgroundColor: 'green',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'green',\n      pointHoverBorderColor: '#7868e6',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: realData\n    }, {\n      yAxisID: \"y-axis-0\",\n      position: \"right\",\n      label: 'Temperature',\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'orange',\n      borderColor: 'orange',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'orange',\n      pointBackgroundColor: 'orange',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'orange',\n      pointHoverBorderColor: '#7868e6',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: tempData\n    }]\n  };\n  const options = {\n    legend: {\n      position: 'bottom',\n      labels: {\n        fontColor: 'white'\n      }\n    },\n    title: {\n      display: true,\n      text: \"Graph Data for The respective Batch\"\n    },\n    tooltips: {\n      mode: 'label'\n    },\n    responsive: true,\n    scales: {\n      xAxes: [{\n        display: true,\n        stacked: true,\n        ticks: {\n          autoSkip: true,\n          fontColor: 'white',\n          fontSize: 10,\n          animation: {\n            duration: delayBetweenPoints,\n            easing: 'linear'\n          }\n        }\n      }],\n      ticks: {\n        major: {\n          fontStyle: 'bold',\n          fontColor: '#FF0000'\n        }\n      },\n      yAxes: [{\n        stacked: true,\n        position: \"left\",\n        id: \"y-axis-0\",\n        ticks: {\n          steps: 10,\n          min: -100,\n          max: 40,\n          fontColor: 'white',\n          fontSize: 14\n        }\n      }, {\n        stacked: false,\n        display: false,\n        position: \"left\",\n        id: \"y2\",\n        ticks: {\n          steps: 10,\n          min: -100,\n          max: 40,\n          fontColor: 'white',\n          fontSize: 14\n        }\n      }, {\n        stacked: false,\n        display: false,\n        position: \"right\",\n        id: \"y3\",\n        ticks: {\n          autoSkip: true,\n          fontColor: 'white',\n          fontSize: 14\n        }\n      }, {\n        stacked: false,\n        position: \"right\",\n        id: \"y-axis-1\",\n        fontColor: 'white',\n        ticks: {\n          autoSkip: true,\n          fontColor: 'white',\n          fontSize: 14\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      background: \"black\",\n      color: \"white\",\n      marginBottom: \"20px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: dataTwo,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TestData, \"EUCQEC7dtWvinWkOQ6Qog9eHuv4=\");\n\n_c = TestData;\nexport default TestData;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestData\");","map":{"version":3,"sources":["/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/src/Pages/Tests/TestData.jsx"],"names":["Container","React","useEffect","useState","Line","db","firebaseLooper","FetchRecipee","TestData","reid","data","time","temp","stillTime","pressure","delta","deltaP","timeData","setTimeData","realData","setRealData","stillTimeData","setStillTimeData","deltaTemp","setDeltaTemp","deltaPressure","setDeltaP","tempData","setTempData","pressureData","setPressureData","totalDuration","delayBetweenPoints","length","collection","where","onSnapshot","doc","temp_points","x","y","z","randomTemp","randomPressure","currTemp","currPressure","currTime","index","temp1","time1","j","Math","random","floor","push","k","time2","dataTwo","labels","datasets","yAxisID","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","position","options","legend","fontColor","title","display","text","tooltips","mode","responsive","scales","xAxes","stacked","ticks","autoSkip","fontSize","animation","duration","easing","major","fontStyle","yAxes","id","steps","min","max","background","color","marginBottom"],"mappings":"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","sourcesContent":["import { Container } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { db } from '../../firebase';\r\nimport { firebaseLooper } from '../../utils/tools';\r\nimport FetchRecipee from '../MiddlePage/Graph/FetchRecipee';\r\n\r\nconst TestData = ({reid, data}) => {\r\n  let time = []\r\n  let temp = []\r\n  let stillTime = []\r\n  let pressure = []\r\n  let delta =  []\r\n  let deltaP =[]\r\n  const [timeData, setTimeData] = useState([])\r\n  const [realData, setRealData] = useState([])\r\n  const [stillTimeData, setStillTimeData] = useState([])\r\n  const [deltaTemp, setDeltaTemp] = useState([])\r\n  const [deltaPressure, setDeltaP] = useState([])\r\n \r\n  const [tempData, setTempData] = useState([])\r\n  const [pressureData, setPressureData] = useState([])\r\nconst totalDuration = 10000;\r\nconst delayBetweenPoints = totalDuration / data.length;\r\n\r\n \r\n  useEffect(() => {\r\n    db.collection('realtimeData').where('recipe_id','==', `${reid}`).onSnapshot(doc => {\r\n      const data = firebaseLooper(doc)\r\n      setRealData(data[0]?.temp_points)\r\n    })\r\n      var x, y, z;\r\n      var randomTemp, randomPressure;\r\n      let currTemp=0; let currPressure= 800; let currTime = 0;\r\n    for (let index = 0; index < data.length; index++) {\r\n      x = (data[index].temp1 - currTemp)/data[index].time1\r\n      y = (data[index].pressure - currPressure)/data[index].time1\r\n     \r\n      for (let j = 0; j < data[index].time1 ; j++) {\r\n          currTime++;\r\n          currTemp = currTemp + x;\r\n          randomTemp = currTemp + (Math.random() * x) \r\n          currPressure = currPressure + y\r\n           randomPressure = currPressure+ Math.floor(Math.random() * y)\r\n          time.push(currTime)\r\n          temp.push(currTemp)\r\n          pressure.push(currPressure)\r\n          delta.push(randomTemp)\r\n          deltaP.push(randomPressure)\r\n          \r\n      }\r\n\r\n      for (let k = 0; k < data[index].time2; k++) {\r\n          currTime++\r\n          time.push(currTime)\r\n          delta.push(randomTemp+ Math.random()*x*1.75)\r\n          deltaP.push (randomPressure + Math.random()*y)\r\n          temp.push(currTemp)\r\n          pressure.push(currPressure)\r\n\r\n      }\r\n    }\r\n  setTimeData(time)\r\n  setTempData(temp)\r\n  setStillTimeData(stillTime)\r\n  setPressureData(pressure)\r\n  setDeltaP(deltaP)\r\n  setDeltaTemp(delta)\r\n\r\n  }, [])\r\n\r\n  const dataTwo = {\r\n  labels: timeData,\r\n  datasets: [\r\n    {\r\n      yAxisID: \"y-axis-1\",\r\n      label: 'Pressure',\r\n      fill: false,\r\n      lineTension: 0.1,\r\n      backgroundColor: 'yellow',\r\n      borderColor: 'yellow',\r\n      borderCapStyle: 'butt',\r\n      borderDash: [],\r\n      borderDashOffset: 0.0,\r\n      borderJoinStyle: 'miter',\r\n      pointBorderColor: 'yellow',\r\n      pointBackgroundColor: 'yellow',\r\n      pointBorderWidth: 1,\r\n      pointHoverRadius: 5,\r\n      pointHoverBackgroundColor: '#ff7a00',\r\n      pointHoverBorderColor: '#7868e6',\r\n      pointHoverBorderWidth: 2,\r\n      pointRadius: 1,\r\n      pointHitRadius: 10,\r\n      data: pressureData\r\n    },\r\n     {\r\n       yAxisID: \"y2\",\r\n       position: \"right\",\r\n      label: 'RealTime',\r\n      fill: false,\r\n      lineTension: 0.1,\r\n      backgroundColor: 'green',\r\n      borderColor: 'green',\r\n      borderCapStyle: 'butt',\r\n      borderDash: [],\r\n      borderDashOffset: 0.0,\r\n      borderJoinStyle: 'miter',\r\n      pointBorderColor: 'green',\r\n      pointBackgroundColor: 'green',\r\n      pointBorderWidth: 1,\r\n      pointHoverRadius: 5,\r\n      pointHoverBackgroundColor: 'green',\r\n      pointHoverBorderColor: '#7868e6',\r\n      pointHoverBorderWidth: 2,\r\n      pointRadius: 1,\r\n      pointHitRadius: 10,\r\n      data: realData\r\n    },\r\n{\r\n       yAxisID: \"y-axis-0\",\r\n       position: \"right\",\r\n      label: 'Temperature',\r\n      fill: false,\r\n      lineTension: 0.1,\r\n      backgroundColor: 'orange',\r\n      borderColor: 'orange',\r\n      borderCapStyle: 'butt',\r\n      borderDash: [],\r\n      borderDashOffset: 0.0,\r\n      borderJoinStyle: 'miter',\r\n      pointBorderColor: 'orange',\r\n      pointBackgroundColor: 'orange',\r\n      pointBorderWidth: 1,\r\n      pointHoverRadius: 5,\r\n      pointHoverBackgroundColor: 'orange',\r\n      pointHoverBorderColor: '#7868e6',\r\n      pointHoverBorderWidth: 2,\r\n      pointRadius: 1,\r\n      pointHitRadius: 10,\r\n      data: tempData\r\n    },\r\n\r\n  ]\r\n};\r\n  \r\n  const options =  {\r\n     legend: {\r\n       position: 'bottom',\r\n        labels: {\r\n                  fontColor: 'white'\r\n         }\r\n              },\r\n    title: {\r\n      display: true,\r\n      text: \"Graph Data for The respective Batch\"\r\n    },\r\n    \r\n    tooltips: {\r\n      mode: 'label'\r\n    },\r\n    \r\n    responsive: true,\r\n    scales: {\r\n     \r\n      xAxes: [{\r\n        display: true,\r\n        stacked: true,\r\n        ticks: {\r\n          autoSkip: true,\r\n\r\n          fontColor: 'white',\r\n          fontSize: 10,\r\n          animation: {\r\n            duration: delayBetweenPoints,\r\n            easing: 'linear'\r\n          }\r\n        }\r\n        \r\n      }],\r\n       ticks: {\r\n            major: {\r\n              fontStyle: 'bold',\r\n              fontColor: '#FF0000'\r\n            }\r\n          },\r\n      yAxes: [{\r\n        stacked: true,\r\n        position: \"left\",\r\n        id: \"y-axis-0\",\r\n        ticks: {\r\n          steps: 10,\r\n          min: -100,\r\n         max: 40,\r\n          fontColor: 'white',\r\n          fontSize: 14\r\n        },\r\n      \r\n         \r\n      },\r\n      {\r\n        stacked: false,\r\n        display: false,\r\n        position: \"left\",\r\n        id: \"y2\",\r\n        ticks: {\r\n         \r\n         steps: 10,\r\n          min: -100,\r\n          max:  40,\r\n          fontColor: 'white',\r\n          fontSize: 14\r\n        },\r\n      \r\n         \r\n      },\r\n      {\r\n        stacked: false,\r\n        display: false,\r\n        position: \"right\",\r\n        id: \"y3\",\r\n        ticks: {\r\n          autoSkip: true,\r\n         \r\n          fontColor: 'white',\r\n          fontSize: 14\r\n        },\r\n      \r\n         \r\n      },\r\n      {\r\n        stacked: false,\r\n        position: \"right\",\r\n        id: \"y-axis-1\",\r\n        fontColor: 'white',\r\n        ticks: {\r\n          autoSkip: true,\r\n        \r\n          fontColor: 'white',\r\n          fontSize: 14\r\n        },\r\n        \r\n        \r\n      }]\r\n    } \r\n  }\r\n\r\n\r\n    return (\r\n        <Container\r\n        style={{\r\n          background: \"black\",\r\n          color: \"white\",\r\n         marginBottom: \"20px\"\r\n        }}\r\n\r\n        >\r\n        <Line  data={dataTwo} options={options}/>\r\n        {/* <Line  data={dataOne}/> */}\r\n        {/* <FetchRecipee time={timeData} pressure={pressureData} temp={tempData}/> */}\r\n        </Container>\r\n    )\r\n    \r\n}\r\n\r\nexport default TestData\r\n"]},"metadata":{},"sourceType":"module"}