{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _toConsumableArray = require(\"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _require = require('crypto'),\n    generateKeyPairSync = _require.generateKeyPairSync,\n    async = _require.generateKeyPair;\n\nvar _require2 = require('util'),\n    promisify = _require2.promisify;\n\nvar _require3 = require('../../help/consts'),\n    THUMBPRINT_MATERIAL = _require3.THUMBPRINT_MATERIAL,\n    JWK_MEMBERS = _require3.JWK_MEMBERS,\n    PUBLIC_MEMBERS = _require3.PUBLIC_MEMBERS,\n    PRIVATE_MEMBERS = _require3.PRIVATE_MEMBERS,\n    KEY_MANAGEMENT_DECRYPT = _require3.KEY_MANAGEMENT_DECRYPT,\n    KEY_MANAGEMENT_ENCRYPT = _require3.KEY_MANAGEMENT_ENCRYPT;\n\nvar _require4 = require('../../help/runtime_support'),\n    keyObjectSupported = _require4.keyObjectSupported;\n\nvar _require5 = require('../../help/key_object'),\n    createPublicKey = _require5.createPublicKey,\n    createPrivateKey = _require5.createPrivateKey;\n\nvar Key = require('./base');\n\nvar generateKeyPair = promisify(async);\nvar RSA_PUBLIC = new Set(['e', 'n']);\nObject.freeze(RSA_PUBLIC);\nvar RSA_PRIVATE = new Set([].concat(_toConsumableArray(RSA_PUBLIC), ['d', 'p', 'q', 'dp', 'dq', 'qi']));\nObject.freeze(RSA_PRIVATE); // RSA Key Type\n\nvar RSAKey = /*#__PURE__*/function (_Key) {\n  \"use strict\";\n\n  _inherits(RSAKey, _Key);\n\n  var _super = _createSuper(RSAKey);\n\n  function RSAKey() {\n    var _this;\n\n    _classCallCheck(this, RSAKey);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this[JWK_MEMBERS]();\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      kty: {\n        value: 'RSA',\n        enumerable: true\n      },\n      length: {\n        get: function get() {\n          Object.defineProperty(this, 'length', {\n            value: Buffer.byteLength(this.n, 'base64') * 8,\n            configurable: false\n          });\n          return this.length;\n        },\n        configurable: true\n      }\n    });\n    return _this;\n  }\n\n  _createClass(RSAKey, [{\n    key: THUMBPRINT_MATERIAL,\n    value: // https://tc39.github.io/ecma262/#sec-ordinaryownpropertykeys no need for any special\n    // JSON.stringify handling in V8\n    function value() {\n      return {\n        e: this.e,\n        kty: 'RSA',\n        n: this.n\n      };\n    }\n  }, {\n    key: KEY_MANAGEMENT_ENCRYPT,\n    value: function value() {\n      return this.algorithms('wrapKey');\n    }\n  }, {\n    key: KEY_MANAGEMENT_DECRYPT,\n    value: function value() {\n      return this.algorithms('unwrapKey');\n    }\n  }], [{\n    key: PUBLIC_MEMBERS,\n    get: function get() {\n      return RSA_PUBLIC;\n    }\n  }, {\n    key: PRIVATE_MEMBERS,\n    get: function get() {\n      return RSA_PRIVATE;\n    }\n  }, {\n    key: \"generate\",\n    value: function () {\n      var _generate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var len,\n            privat,\n            privateKey,\n            publicKey,\n            _yield$generateKeyPai,\n            _yield$generateKeyPai2,\n            _args = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                len = _args.length > 0 && _args[0] !== undefined ? _args[0] : 2048;\n                privat = _args.length > 1 && _args[1] !== undefined ? _args[1] : true;\n\n                if (!(!Number.isSafeInteger(len) || len < 512 || len % 8 !== 0 || 'electron' in process.versions && len % 128 !== 0)) {\n                  _context.next = 4;\n                  break;\n                }\n\n                throw new TypeError('invalid bit length');\n\n              case 4:\n                if (!keyObjectSupported) {\n                  _context.next = 11;\n                  break;\n                }\n\n                _context.next = 7;\n                return generateKeyPair('rsa', {\n                  modulusLength: len\n                });\n\n              case 7:\n                _yield$generateKeyPai = _context.sent;\n                privateKey = _yield$generateKeyPai.privateKey;\n                publicKey = _yield$generateKeyPai.publicKey;\n                return _context.abrupt(\"return\", privat ? privateKey : publicKey);\n\n              case 11:\n                _context.next = 13;\n                return generateKeyPair('rsa', {\n                  modulusLength: len,\n                  publicKeyEncoding: {\n                    type: 'spki',\n                    format: 'pem'\n                  },\n                  privateKeyEncoding: {\n                    type: 'pkcs8',\n                    format: 'pem'\n                  }\n                });\n\n              case 13:\n                _yield$generateKeyPai2 = _context.sent;\n                privateKey = _yield$generateKeyPai2.privateKey;\n                publicKey = _yield$generateKeyPai2.publicKey;\n\n                if (!privat) {\n                  _context.next = 20;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", createPrivateKey(privateKey));\n\n              case 20:\n                return _context.abrupt(\"return\", createPublicKey(publicKey));\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function generate() {\n        return _generate.apply(this, arguments);\n      }\n\n      return generate;\n    }()\n  }, {\n    key: \"generateSync\",\n    value: function generateSync() {\n      var len = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2048;\n      var privat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      if (!Number.isSafeInteger(len) || len < 512 || len % 8 !== 0 || 'electron' in process.versions && len % 128 !== 0) {\n        throw new TypeError('invalid bit length');\n      }\n\n      var privateKey, publicKey;\n\n      if (keyObjectSupported) {\n        var _generateKeyPairSync = generateKeyPairSync('rsa', {\n          modulusLength: len\n        });\n\n        privateKey = _generateKeyPairSync.privateKey;\n        publicKey = _generateKeyPairSync.publicKey;\n        return privat ? privateKey : publicKey;\n      }\n\n      var _generateKeyPairSync2 = generateKeyPairSync('rsa', {\n        modulusLength: len,\n        publicKeyEncoding: {\n          type: 'spki',\n          format: 'pem'\n        },\n        privateKeyEncoding: {\n          type: 'pkcs8',\n          format: 'pem'\n        }\n      });\n\n      privateKey = _generateKeyPairSync2.privateKey;\n      publicKey = _generateKeyPairSync2.publicKey;\n\n      if (privat) {\n        return createPrivateKey(privateKey);\n      } else {\n        return createPublicKey(publicKey);\n      }\n    }\n  }]);\n\n  return RSAKey;\n}(Key);\n\nmodule.exports = RSAKey;","map":{"version":3,"sources":["/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/jose/lib/jwk/key/rsa.js"],"names":["require","generateKeyPairSync","async","generateKeyPair","promisify","THUMBPRINT_MATERIAL","JWK_MEMBERS","PUBLIC_MEMBERS","PRIVATE_MEMBERS","KEY_MANAGEMENT_DECRYPT","KEY_MANAGEMENT_ENCRYPT","keyObjectSupported","createPublicKey","createPrivateKey","Key","RSA_PUBLIC","Set","Object","freeze","RSA_PRIVATE","RSAKey","args","defineProperties","kty","value","enumerable","length","get","defineProperty","Buffer","byteLength","n","configurable","e","algorithms","len","privat","Number","isSafeInteger","process","versions","TypeError","modulusLength","privateKey","publicKey","publicKeyEncoding","type","format","privateKeyEncoding","module","exports"],"mappings":"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","sourcesContent":["const { generateKeyPairSync, generateKeyPair: async } = require('crypto')\nconst { promisify } = require('util')\n\nconst {\n  THUMBPRINT_MATERIAL, JWK_MEMBERS, PUBLIC_MEMBERS,\n  PRIVATE_MEMBERS, KEY_MANAGEMENT_DECRYPT, KEY_MANAGEMENT_ENCRYPT\n} = require('../../help/consts')\nconst { keyObjectSupported } = require('../../help/runtime_support')\nconst { createPublicKey, createPrivateKey } = require('../../help/key_object')\n\nconst Key = require('./base')\n\nconst generateKeyPair = promisify(async)\n\nconst RSA_PUBLIC = new Set(['e', 'n'])\nObject.freeze(RSA_PUBLIC)\nconst RSA_PRIVATE = new Set([...RSA_PUBLIC, 'd', 'p', 'q', 'dp', 'dq', 'qi'])\nObject.freeze(RSA_PRIVATE)\n\n// RSA Key Type\nclass RSAKey extends Key {\n  constructor (...args) {\n    super(...args)\n    this[JWK_MEMBERS]()\n    Object.defineProperties(this, {\n      kty: {\n        value: 'RSA',\n        enumerable: true\n      },\n      length: {\n        get () {\n          Object.defineProperty(this, 'length', {\n            value: Buffer.byteLength(this.n, 'base64') * 8,\n            configurable: false\n          })\n\n          return this.length\n        },\n        configurable: true\n      }\n    })\n  }\n\n  static get [PUBLIC_MEMBERS] () {\n    return RSA_PUBLIC\n  }\n\n  static get [PRIVATE_MEMBERS] () {\n    return RSA_PRIVATE\n  }\n\n  // https://tc39.github.io/ecma262/#sec-ordinaryownpropertykeys no need for any special\n  // JSON.stringify handling in V8\n  [THUMBPRINT_MATERIAL] () {\n    return { e: this.e, kty: 'RSA', n: this.n }\n  }\n\n  [KEY_MANAGEMENT_ENCRYPT] () {\n    return this.algorithms('wrapKey')\n  }\n\n  [KEY_MANAGEMENT_DECRYPT] () {\n    return this.algorithms('unwrapKey')\n  }\n\n  static async generate (len = 2048, privat = true) {\n    if (!Number.isSafeInteger(len) || len < 512 || len % 8 !== 0 || (('electron' in process.versions) && len % 128 !== 0)) {\n      throw new TypeError('invalid bit length')\n    }\n\n    let privateKey, publicKey\n\n    if (keyObjectSupported) {\n      ({ privateKey, publicKey } = await generateKeyPair('rsa', { modulusLength: len }))\n      return privat ? privateKey : publicKey\n    }\n\n    ({ privateKey, publicKey } = await generateKeyPair('rsa', {\n      modulusLength: len,\n      publicKeyEncoding: { type: 'spki', format: 'pem' },\n      privateKeyEncoding: { type: 'pkcs8', format: 'pem' }\n    }))\n\n    if (privat) {\n      return createPrivateKey(privateKey)\n    } else {\n      return createPublicKey(publicKey)\n    }\n  }\n\n  static generateSync (len = 2048, privat = true) {\n    if (!Number.isSafeInteger(len) || len < 512 || len % 8 !== 0 || (('electron' in process.versions) && len % 128 !== 0)) {\n      throw new TypeError('invalid bit length')\n    }\n\n    let privateKey, publicKey\n\n    if (keyObjectSupported) {\n      ({ privateKey, publicKey } = generateKeyPairSync('rsa', { modulusLength: len }))\n      return privat ? privateKey : publicKey\n    }\n\n    ({ privateKey, publicKey } = generateKeyPairSync('rsa', {\n      modulusLength: len,\n      publicKeyEncoding: { type: 'spki', format: 'pem' },\n      privateKeyEncoding: { type: 'pkcs8', format: 'pem' }\n    }))\n\n    if (privat) {\n      return createPrivateKey(privateKey)\n    } else {\n      return createPublicKey(publicKey)\n    }\n  }\n}\n\nmodule.exports = RSAKey\n"]},"metadata":{},"sourceType":"script"}