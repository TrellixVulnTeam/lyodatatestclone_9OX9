{"ast":null,"code":"var _jsxFileName = \"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/src/Pages/VideoCallPage/components/Publisher.jsx\";\nimport React, { useState } from 'react';\nimport { OTPublisher } from 'opentok-react';\nimport CheckBox from './CheckBox';\nimport '../OpenTok.css';\nimport { Button, Card, Container, Grid, Hidden, Toolbar } from '@material-ui/core';\nimport ScreenShareIcon from '@material-ui/icons/ScreenShare';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Publisher extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setAudio = audio => {\n      this.setState({\n        audio\n      });\n    };\n\n    this.setVideo = video => {\n      this.setState({\n        video\n      });\n    };\n\n    this.changeVideoSource = videoSource => {\n      this.state.videoSource !== 'camera' ? this.setState({\n        videoSource: 'camera'\n      }) : this.setState({\n        videoSource: 'screen'\n      });\n    };\n\n    this.onError = err => {\n      this.setState({\n        error: `Failed to publish: ${err.message}`\n      });\n    };\n\n    this.onPublishScreen = () => {\n      console.log(\"Publish Screen Success\");\n      this.setState({\n        error: null\n      });\n    };\n\n    this.toggleScreenshare = () => {\n      this.setState(state => ({\n        publishScreen: !state.publishScreen\n      }));\n    };\n\n    this.state = {\n      publishScreen: false,\n      error: null,\n      audio: true,\n      video: true,\n      videoSource: 'camera',\n      showControls: true\n    };\n    this.publisherScreenEventHandlers = {\n      accessDenied: () => {\n        console.log(\"User denied access to media Screen source\");\n      },\n      streamCreated: () => {\n        console.log(\"Publisher SCreen created\");\n      },\n      mediaStopped: () => {\n        this.setState({\n          publishScreen: false\n        });\n      },\n      streamDestroyed: ({\n        reason\n      }) => {\n        console.log(`Publisher Screen destroyed because: ${reason}`);\n      }\n    };\n  }\n\n  render() {\n    const {\n      publishScreen\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-black mx-10 mb-10 p-10\",\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        className: \"bg-black\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: publishScreen && /*#__PURE__*/_jsxDEV(OTPublisher, {\n              properties: {\n                width: 800,\n                height: 350,\n                publishAudio: this.state.audio,\n                publishVideo: this.state.video,\n                videoSource: 'screen',\n                showControls: true\n              },\n              onPublish: this.onPublishScreen,\n              eventHandlers: this.publisherScreenEventHandlers,\n              onError: this.onError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'flex-end'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            background: 'black',\n            justifyContent: 'flex-end'\n          },\n          children: /*#__PURE__*/_jsxDEV(OTPublisher, {\n            properties: {\n              showControls: true,\n              insertMode: 'append',\n              publishAudio: true,\n              publishVideo: this.state.video,\n              width: 500,\n              height: 270\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n          style: {\n            display: 'flex',\n            background: 'black',\n            justifyContent: 'flex-end'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginRight: '20px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                color: 'orange'\n              },\n              variant: \"outlined\",\n              onClick: this.toggleScreenshare,\n              children: /*#__PURE__*/_jsxDEV(ScreenShareIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 99\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-black\",\n            children: /*#__PURE__*/_jsxDEV(CheckBox, {\n              label: \"Video\",\n              initialChecked: this.state.video,\n              onChange: this.setVideo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.error ? /*#__PURE__*/_jsxDEV(\"b\", {\n          id: \"error\",\n          children: this.state.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 30\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Publisher;","map":{"version":3,"sources":["/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/src/Pages/VideoCallPage/components/Publisher.jsx"],"names":["React","useState","OTPublisher","CheckBox","Button","Card","Container","Grid","Hidden","Toolbar","ScreenShareIcon","Publisher","Component","constructor","props","setAudio","audio","setState","setVideo","video","changeVideoSource","videoSource","state","onError","err","error","message","onPublishScreen","console","log","toggleScreenshare","publishScreen","showControls","publisherScreenEventHandlers","accessDenied","streamCreated","mediaStopped","streamDestroyed","reason","render","width","height","publishAudio","publishVideo","display","flexDirection","justifyContent","background","insertMode","marginRight","color"],"mappings":"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","sourcesContent":[" import React, { useState } from 'react';\nimport { OTPublisher } from 'opentok-react';\nimport CheckBox from './CheckBox';\nimport '../OpenTok.css'\nimport { Button, Card, Container, Grid, Hidden, Toolbar } from '@material-ui/core';\nimport ScreenShareIcon from '@material-ui/icons/ScreenShare';\n\nclass Publisher extends React.Component {\n  constructor(props) {\n    super(props);\n   \n    this.state = {\n       publishScreen: false,\n      error: null,\n      audio: true,\n      video: true,\n      videoSource: 'camera',\n     showControls: true\n      \n    };\n\n this.publisherScreenEventHandlers = {\n      accessDenied: () => {\n        console.log(\"User denied access to media Screen source\");\n      },\n      streamCreated: () => {\n        console.log(\"Publisher SCreen created\");\n      },\n      mediaStopped: () => {\n        this.setState({ publishScreen: false });\n      },\n      streamDestroyed: ({ reason }) => {\n        console.log(`Publisher Screen destroyed because: ${reason}`);\n      },\n    };\n \n  \n  }\n\n  setAudio = (audio) => {\n    this.setState({ audio });\n  }\n\n  setVideo = (video) => {\n    this.setState({ video });\n  }\n\n  changeVideoSource = (videoSource) => {\n    (this.state.videoSource !== 'camera') ? this.setState({videoSource: 'camera'}) : this.setState({ videoSource: 'screen' })\n  }\n\n  onError = (err) => {\n    this.setState({ error: `Failed to publish: ${err.message}` });\n  }\n\n  onPublishScreen = () => {\n    console.log(\"Publish Screen Success\");\n    this.setState({ error: null });\n  };\n  \n  toggleScreenshare = () => {\n    this.setState((state) => ({\n      publishScreen: !state.publishScreen,\n    }));\n  };\n\n \n\n  render() {\n    \n    const {  publishScreen } = this.state;\n    return (\n      <div className='bg-black mx-10 mb-10 p-10'>\n          <Container className=\"bg-black\">\n        <Grid\n        container\n        spacing={3}\n        >\n         \n         \n          <Grid\n           item\n           \n            >\n             {\n          publishScreen && \n           (<OTPublisher\n           \n          properties={{\n            width: 800, height: 350,\n            publishAudio: this.state.audio,\n            publishVideo: this.state.video,\n            videoSource:  'screen' ,\n            showControls: true,\n          \n          }}\n          onPublish={this.onPublishScreen}\n          eventHandlers={this.publisherScreenEventHandlers}\n          onError={this.onError}\n        />)\n        }\n          </Grid>\n        </Grid>\n       \n\n      </Container>\n        <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'flex-end'}}>\n         \n        <div  style={{display: 'flex',background: 'black', justifyContent: 'flex-end'}}>\n           <OTPublisher\n         properties={{\n              showControls: true,\n              insertMode: 'append',\n              publishAudio: true,\n              publishVideo: this.state.video,\n              width:500, height: 270\n          }}\n        />\n        </div>\n         <Toolbar  style={{display: 'flex',background: 'black', justifyContent: 'flex-end'}}>\n          <div style={{marginRight: '20px'}}>\n            <Button style={{color: 'orange'}} variant='outlined' onClick={this.toggleScreenshare}><ScreenShareIcon/></Button>\n          </div>\n          \n        <div className='bg-black'>\n          <CheckBox\n          label=\"Video\"\n          initialChecked={this.state.video}\n          onChange={this.setVideo}\n        />\n        </div>\n        <div>\n         \n        </div>\n        \n        </Toolbar>\n        </div>\n         \n       \n      \n      <div>\n         {this.state.error ? <b id=\"error\">{this.state.error}</b> : null}\n      </div>\n      </div>\n      \n    );\n  }\n}\nexport default Publisher;\n"]},"metadata":{},"sourceType":"module"}