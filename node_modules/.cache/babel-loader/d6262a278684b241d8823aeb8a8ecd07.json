{"ast":null,"code":"'use strict';\n/** Wrap DOM selector methods:\n *  document.querySelector,\n *  document.getElementById,\n *  document.getElementsByClassName\n *  'element' checks for a string before returning an element with `query`\n */\n\nvar dom = {\n  query: function query(arg) {\n    return document.querySelector(arg);\n  },\n  id: function id(arg) {\n    return document.getElementById(arg);\n  },\n  class: function _class(arg) {\n    return document.getElementsByClassName(arg);\n  },\n  element: function element(el) {\n    return typeof el === 'string' ? this.query(el) : el;\n  }\n};\n/**\n * Returns a (nested) propery from an object, or undefined if it doesn't exist\n * @param {String | Array} props - An array of properties or a single property\n * @param {Object | Array} obj\n */\n\nvar path = function path(props, obj) {\n  var nested = obj;\n  var properties = typeof props === 'string' ? props.split('.') : props;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = properties[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var property = _step.value;\n      nested = nested[property];\n\n      if (nested === undefined) {\n        return nested;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return nested;\n};\n/**\n * Checks for a (nested) propery in an object and returns the property if\n * it exists.  Otherwise, it returns a default value.\n * @param {*} d - Default value\n * @param {String | Array} props - An array of properties or a single property\n * @param {Object | Array} obj\n */\n\n\nvar pathOr = function pathOr(d, props, obj) {\n  var value = path(props, obj);\n  return value === undefined ? d : value;\n};\n/**\n * Converts a string to proper case (e.g. 'camera' => 'Camera')\n * @param {String} text\n * @returns {String}\n */\n\n\nvar properCase = function properCase(text) {\n  return '' + text[0].toUpperCase() + text.slice(1);\n};\n\nmodule.exports = {\n  dom: dom,\n  path: path,\n  pathOr: pathOr,\n  properCase: properCase\n};","map":{"version":3,"sources":["/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/opentok-accelerator-core/dist/util.js"],"names":["dom","query","arg","document","querySelector","id","getElementById","class","_class","getElementsByClassName","element","el","path","props","obj","nested","properties","split","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","next","done","property","value","err","return","pathOr","d","properCase","text","toUpperCase","slice","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/** Wrap DOM selector methods:\n *  document.querySelector,\n *  document.getElementById,\n *  document.getElementsByClassName\n *  'element' checks for a string before returning an element with `query`\n */\nvar dom = {\n  query: function query(arg) {\n    return document.querySelector(arg);\n  },\n  id: function id(arg) {\n    return document.getElementById(arg);\n  },\n  class: function _class(arg) {\n    return document.getElementsByClassName(arg);\n  },\n  element: function element(el) {\n    return typeof el === 'string' ? this.query(el) : el;\n  }\n};\n\n/**\n * Returns a (nested) propery from an object, or undefined if it doesn't exist\n * @param {String | Array} props - An array of properties or a single property\n * @param {Object | Array} obj\n */\nvar path = function path(props, obj) {\n  var nested = obj;\n  var properties = typeof props === 'string' ? props.split('.') : props;\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = properties[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var property = _step.value;\n\n      nested = nested[property];\n      if (nested === undefined) {\n        return nested;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return nested;\n};\n\n/**\n * Checks for a (nested) propery in an object and returns the property if\n * it exists.  Otherwise, it returns a default value.\n * @param {*} d - Default value\n * @param {String | Array} props - An array of properties or a single property\n * @param {Object | Array} obj\n */\nvar pathOr = function pathOr(d, props, obj) {\n  var value = path(props, obj);\n  return value === undefined ? d : value;\n};\n\n/**\n * Converts a string to proper case (e.g. 'camera' => 'Camera')\n * @param {String} text\n * @returns {String}\n */\nvar properCase = function properCase(text) {\n  return '' + text[0].toUpperCase() + text.slice(1);\n};\n\nmodule.exports = {\n  dom: dom,\n  path: path,\n  pathOr: pathOr,\n  properCase: properCase\n};"]},"metadata":{},"sourceType":"script"}