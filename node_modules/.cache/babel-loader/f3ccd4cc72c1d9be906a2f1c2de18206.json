{"ast":null,"code":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/* global OT */\n\n/* Dependencies */\n\n\nvar State = require('./state');\n\nvar _require = require('./errors'),\n    SDKError = _require.SDKError;\n/* Internal variables */\n\n\nvar stateMap = new WeakMap();\n/* Internal methods */\n\n/**\n * Ensures that we have the required credentials\n * @param {Object} credentials\n * @param {String} credentials.apiKey\n * @param {String} credentials.sessionId\n * @param {String} credentials.token\n * @returns {Object}\n */\n\nvar validateCredentials = function validateCredentials() {\n  var credentials = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var required = ['apiKey', 'sessionId', 'token'];\n  required.forEach(function (credential) {\n    if (!credentials[credential]) {\n      throw new SDKError(credential + ' is a required credential', 'invalidParameters');\n    }\n  });\n  return credentials;\n};\n/**\n * Initialize an OpenTok publisher object\n * @param {String | Object} element - The target element\n * @param {Object} properties - The publisher properties\n * @returns {Promise} <resolve: Object, reject: Error>\n */\n\n\nvar initPublisher = function initPublisher(element, properties) {\n  return new Promise(function (resolve, reject) {\n    var publisher = OT.initPublisher(element, properties, function (error) {\n      error ? reject(error) : resolve(publisher);\n    });\n  });\n};\n/**\n * Binds and sets a single event listener on the OpenTok session\n * @param {String} event - The name of the event\n * @param {Function} callback\n */\n\n\nvar bindListener = function bindListener(target, context, event, callback) {\n  var paramsError = '\\'on\\' requires a string and a function to create an event listener.';\n\n  if (typeof event !== 'string' || typeof callback !== 'function') {\n    throw new SDKError(paramsError, 'invalidParameters');\n  }\n\n  target.on(event, callback.bind(context));\n};\n/**\n * Bind and set event listeners\n * @param {Object} target - An OpenTok session, publisher, or subscriber object\n * @param {Object} context - The context to which to bind event listeners\n * @param {Object | Array} listeners - An object (or array of objects) with\n *        eventName/callback k/v pairs\n */\n\n\nvar bindListeners = function bindListeners(target, context, listeners) {\n  /**\n   * Create listeners from an object with event/callback k/v pairs\n   * @param {Object} listeners\n   */\n  var createListenersFromObject = function createListenersFromObject(eventListeners) {\n    Object.keys(eventListeners).forEach(function (event) {\n      bindListener(target, context, event, eventListeners[event]);\n    });\n  };\n\n  if (Array.isArray(listeners)) {\n    listeners.forEach(function (listener) {\n      return createListenersFromObject(listener);\n    });\n  } else {\n    createListenersFromObject(listeners);\n  }\n};\n/**\n * @class\n * Represents an OpenTok SDK Wrapper\n */\n\n\nvar OpenTokSDK = function () {\n  /**\n   * Create an SDK Wrapper\n   * @param {Object} credentials\n   * @param {String} credentials.apiKey\n   * @param {String} credentials.sessionId\n   * @param {String} credentials.token\n   */\n  function OpenTokSDK(credentials) {\n    _classCallCheck(this, OpenTokSDK);\n\n    this.credentials = validateCredentials(credentials);\n    stateMap.set(this, new State());\n    this.session = OT.initSession(credentials.apiKey, credentials.sessionId);\n  }\n  /**\n   * Determines if a connection object is my local connection\n   * @param {Object} connection - An OpenTok connection object\n   * @returns {Boolean}\n   */\n\n\n  _createClass(OpenTokSDK, [{\n    key: 'isMe',\n    value: function isMe(connection) {\n      var session = this.session;\n      return session && session.connection.connectionId === connection.connectionId;\n    }\n    /**\n     * Wrap OpenTok session events\n     */\n\n  }, {\n    key: 'setInternalListeners',\n    value: function setInternalListeners() {\n      /**\n       * Wrap session events and update state when streams are created\n       * or destroyed\n       */\n      var state = stateMap.get(this);\n      this.session.on('streamCreated', function (_ref) {\n        var stream = _ref.stream;\n        return state.addStream(stream);\n      });\n      this.session.on('streamDestroyed', function (_ref2) {\n        var stream = _ref2.stream;\n        return state.removeStream(stream);\n      });\n      this.session.on('sessionConnected sessionReconnected', function () {\n        return state.setConnected(true);\n      });\n      this.session.on('sessionDisconnected', function () {\n        return state.setConnected(false);\n      });\n    }\n    /**\n     * Register a callback for a specific event, pass an object\n     * with event => callback key/values (or an array of objects)\n     * to register callbacks for multiple events.\n     * @param {String | Object | Array} [events] - The name of the events\n     * @param {Function} [callback]\n     * https://tokbox.com/developer/sdks/js/reference/Session.html#on\n     */\n\n  }, {\n    key: 'on',\n    value: function on() {\n      if (arguments.length === 1 && _typeof(arguments.length <= 0 ? undefined : arguments[0]) === 'object') {\n        bindListeners(this.session, this, arguments.length <= 0 ? undefined : arguments[0]);\n      } else if (arguments.length === 2) {\n        bindListener(this.session, this, arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1]);\n      }\n    }\n    /**\n     * Remove a callback for a specific event. If no parameters are passed,\n     * all callbacks for the session will be removed.\n     * @param {String} [events] - The name of the events\n     * @param {Function} [callback]\n     * https://tokbox.com/developer/sdks/js/reference/Session.html#off\n     */\n\n  }, {\n    key: 'off',\n    value: function off() {\n      var _session;\n\n      (_session = this.session).off.apply(_session, arguments);\n    }\n    /**\n     * Enable or disable local publisher audio\n     * @param {Boolean} enable\n     */\n\n  }, {\n    key: 'enablePublisherAudio',\n    value: function enablePublisherAudio(enable) {\n      var _stateMap$get$getPubS = stateMap.get(this).getPubSub(),\n          publishers = _stateMap$get$getPubS.publishers;\n\n      Object.keys(publishers.camera).forEach(function (publisherId) {\n        publishers.camera[publisherId].publishAudio(enable);\n      });\n    }\n    /**\n     * Enable or disable local publisher video\n     * @param {Boolean} enable\n     */\n\n  }, {\n    key: 'enablePublisherVideo',\n    value: function enablePublisherVideo(enable) {\n      var _stateMap$get$getPubS2 = stateMap.get(this).getPubSub(),\n          publishers = _stateMap$get$getPubS2.publishers;\n\n      Object.keys(publishers.camera).forEach(function (publisherId) {\n        publishers.camera[publisherId].publishVideo(enable);\n      });\n    }\n    /**\n     * Enable or disable local subscriber audio\n     * @param {String} streamId\n     * @param {Boolean} enable\n     */\n\n  }, {\n    key: 'enableSubscriberAudio',\n    value: function enableSubscriberAudio(streamId, enable) {\n      var _stateMap$get$all = stateMap.get(this).all(),\n          streamMap = _stateMap$get$all.streamMap,\n          subscribers = _stateMap$get$all.subscribers;\n\n      var subscriberId = streamMap[streamId];\n      var subscriber = subscribers.camera[subscriberId] || subscribers.screen[subscriberId];\n      subscriber && subscriber.subscribeToAudio(enable);\n    }\n    /**\n     * Enable or disable local subscriber video\n     * @param {String} streamId\n     * @param {Boolean} enable\n     */\n\n  }, {\n    key: 'enableSubscriberVideo',\n    value: function enableSubscriberVideo(streamId, enable) {\n      var _stateMap$get$all2 = stateMap.get(this).all(),\n          streamMap = _stateMap$get$all2.streamMap,\n          subscribers = _stateMap$get$all2.subscribers;\n\n      var subscriberId = streamMap[streamId];\n      var subscriber = subscribers.camera[subscriberId] || subscribers.screen[subscriberId];\n      subscriber && subscriber.subscribeToVideo(enable);\n    }\n    /**\n     * Create and publish a stream\n     * @param {String | Object} element - The target element\n     * @param {Object} properties - The publisher properties\n     * @param {Array | Object} [eventListeners] - An object (or array of objects) with\n     *        eventName/callback k/v pairs\n     * @param {Boolean} [preview] - Create a publisher with publishing to the session\n     * @returns {Promise} <resolve: Object, reject: Error>\n     */\n\n  }, {\n    key: 'publish',\n    value: function publish(element, properties) {\n      var _this = this;\n\n      var eventListeners = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var preview = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      return new Promise(function (resolve, reject) {\n        initPublisher(element, properties) // eslint-disable-next-line no-confusing-arrow\n        .then(function (publisher) {\n          eventListeners && bindListeners(publisher, _this, eventListeners);\n\n          if (preview) {\n            resolve(publisher);\n          } else {\n            _this.publishPreview(publisher).then(resolve).catch(reject);\n          }\n        }).catch(reject);\n      });\n    }\n    /**\n     * Publish a 'preview' stream to the session\n     * @param {Object} publisher - An OpenTok publisher object\n     * @returns {Promise} <resolve: empty, reject: Error>\n     */\n\n  }, {\n    key: 'publishPreview',\n    value: function publishPreview(publisher) {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        var state = stateMap.get(_this2);\n\n        _this2.session.publish(publisher, function (error) {\n          error && reject(error);\n          var type = publisher.stream.videoType;\n          state.addPublisher(type, publisher);\n          resolve(publisher);\n        });\n      });\n    }\n    /**\n     * Stop publishing a stream\n     * @param {Object} publisher - An OpenTok publisher object\n     */\n\n  }, {\n    key: 'unpublish',\n    value: function unpublish(publisher) {\n      var type = publisher.stream.videoType;\n      var state = stateMap.get(this);\n      this.session.unpublish(publisher);\n      state.removePublisher(type, publisher);\n    }\n    /**\n     * Subscribe to stream\n     * @param {Object} stream\n     * @param {String | Object} container - The id of the container or a reference to the element\n     * @param {Object} [properties]\n     * @param {Array | Object} [eventListeners] - An object (or array of objects) with\n     *        eventName/callback k/v pairs\n     * @returns {Promise} <resolve: empty, reject: Error>\n     * https://tokbox.com/developer/sdks/js/reference/Session.html#subscribe\n     */\n\n  }, {\n    key: 'subscribe',\n    value: function subscribe(stream, container, properties, eventListeners) {\n      var _this3 = this;\n\n      var state = stateMap.get(this);\n      return new Promise(function (resolve, reject) {\n        var subscriber = _this3.session.subscribe(stream, container, properties, function (error) {\n          if (error) {\n            reject(error);\n          } else {\n            state.addSubscriber(subscriber);\n            eventListeners && bindListeners(subscriber, _this3, eventListeners);\n            resolve(subscriber);\n          }\n        });\n      });\n    }\n    /**\n     * Unsubscribe from a stream and update the state\n     * @param {Object} subscriber - An OpenTok subscriber object\n     * @returns {Promise} <resolve: empty>\n     */\n\n  }, {\n    key: 'unsubscribe',\n    value: function unsubscribe(subscriber) {\n      var _this4 = this;\n\n      var state = stateMap.get(this);\n      return new Promise(function (resolve) {\n        _this4.session.unsubscribe(subscriber);\n\n        state.removeSubscriber(subscriber);\n        resolve();\n      });\n    }\n    /**\n     * Connect to the OpenTok session\n     * @param {Array | Object} [eventListeners] - An object (or array of objects) with\n     *        eventName/callback k/v pairs\n     * @returns {Promise} <resolve: empty, reject: Error>\n     */\n\n  }, {\n    key: 'connect',\n    value: function connect(eventListeners) {\n      var _this5 = this;\n\n      this.off();\n      this.setInternalListeners();\n      eventListeners && this.on(eventListeners);\n      return new Promise(function (resolve, reject) {\n        var token = _this5.credentials.token;\n\n        _this5.session.connect(token, function (error) {\n          error ? reject(error) : resolve();\n        });\n      });\n    }\n    /**\n     * Force a remote connection to leave the session\n     * @param {Object} connection\n     * @returns {Promise} <resolve: empty, reject: Error>\n     */\n\n  }, {\n    key: 'forceDisconnect',\n    value: function forceDisconnect(connection) {\n      var _this6 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this6.session.forceDisconnect(connection, function (error) {\n          error ? reject(error) : resolve();\n        });\n      });\n    }\n    /**\n     * Force the publisher of a stream to stop publishing the stream\n     * @param {Object} stream\n     * @returns {Promise} <resolve: empty, reject: Error>\n     */\n\n  }, {\n    key: 'forceUnpublish',\n    value: function forceUnpublish(stream) {\n      var _this7 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this7.session.forceUnpublish(stream, function (error) {\n          error ? reject(error) : resolve();\n        });\n      });\n    }\n    /**\n     * Send a signal using the OpenTok signaling apiKey\n     * @param {String} type\n     * @param {*} signalData\n     * @param {Object} [to] - An OpenTok connection object\n     * @returns {Promise} <resolve: empty, reject: Error>\n     * https://tokbox.com/developer/guides/signaling/js/\n     */\n\n  }, {\n    key: 'signal',\n    value: function signal(type, signalData, to) {\n      var _this8 = this;\n\n      var data = JSON.stringify(signalData);\n      var signal = to ? {\n        type: type,\n        data: data,\n        to: to\n      } : {\n        type: type,\n        data: data\n      };\n      return new Promise(function (resolve, reject) {\n        _this8.session.signal(signal, function (error) {\n          error ? reject(error) : resolve();\n        });\n      });\n    }\n    /**\n     * Disconnect from the OpenTok session\n     */\n\n  }, {\n    key: 'disconnect',\n    value: function disconnect() {\n      this.session.disconnect();\n      stateMap.get(this).reset();\n    }\n    /**\n     * Return the state of the OpenTok session\n     * @returns {Object} Streams, publishers, subscribers, and stream map\n     */\n\n  }, {\n    key: 'state',\n    value: function state() {\n      return stateMap.get(this).all();\n    }\n  }]);\n\n  return OpenTokSDK;\n}();\n\nif (global === window) {\n  window.OpenTokSDK = OpenTokSDK;\n}\n\nmodule.exports = OpenTokSDK;","map":{"version":3,"sources":["/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/opentok-accelerator-core/dist/sdk-wrapper/sdkWrapper.js"],"names":["_typeof","Symbol","iterator","obj","constructor","prototype","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","_classCallCheck","instance","TypeError","State","require","_require","SDKError","stateMap","WeakMap","validateCredentials","credentials","arguments","undefined","required","forEach","credential","initPublisher","element","properties","Promise","resolve","reject","publisher","OT","error","bindListener","context","event","callback","paramsError","on","bind","bindListeners","listeners","createListenersFromObject","eventListeners","keys","Array","isArray","listener","OpenTokSDK","set","session","initSession","apiKey","sessionId","value","isMe","connection","connectionId","setInternalListeners","state","get","_ref","stream","addStream","_ref2","removeStream","setConnected","off","_session","apply","enablePublisherAudio","enable","_stateMap$get$getPubS","getPubSub","publishers","camera","publisherId","publishAudio","enablePublisherVideo","_stateMap$get$getPubS2","publishVideo","enableSubscriberAudio","streamId","_stateMap$get$all","all","streamMap","subscribers","subscriberId","subscriber","screen","subscribeToAudio","enableSubscriberVideo","_stateMap$get$all2","subscribeToVideo","publish","_this","preview","then","publishPreview","catch","_this2","type","videoType","addPublisher","unpublish","removePublisher","subscribe","container","_this3","addSubscriber","unsubscribe","_this4","removeSubscriber","connect","_this5","token","forceDisconnect","_this6","forceUnpublish","_this7","signal","signalData","to","_this8","data","JSON","stringify","disconnect","reset","global","window","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* global OT */\n\n/* Dependencies */\nvar State = require('./state');\n\nvar _require = require('./errors'),\n    SDKError = _require.SDKError;\n\n/* Internal variables */\n\nvar stateMap = new WeakMap();\n\n/* Internal methods */\n\n/**\n * Ensures that we have the required credentials\n * @param {Object} credentials\n * @param {String} credentials.apiKey\n * @param {String} credentials.sessionId\n * @param {String} credentials.token\n * @returns {Object}\n */\nvar validateCredentials = function validateCredentials() {\n  var credentials = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var required = ['apiKey', 'sessionId', 'token'];\n  required.forEach(function (credential) {\n    if (!credentials[credential]) {\n      throw new SDKError(credential + ' is a required credential', 'invalidParameters');\n    }\n  });\n  return credentials;\n};\n\n/**\n * Initialize an OpenTok publisher object\n * @param {String | Object} element - The target element\n * @param {Object} properties - The publisher properties\n * @returns {Promise} <resolve: Object, reject: Error>\n */\nvar initPublisher = function initPublisher(element, properties) {\n  return new Promise(function (resolve, reject) {\n    var publisher = OT.initPublisher(element, properties, function (error) {\n      error ? reject(error) : resolve(publisher);\n    });\n  });\n};\n\n/**\n * Binds and sets a single event listener on the OpenTok session\n * @param {String} event - The name of the event\n * @param {Function} callback\n */\nvar bindListener = function bindListener(target, context, event, callback) {\n  var paramsError = '\\'on\\' requires a string and a function to create an event listener.';\n  if (typeof event !== 'string' || typeof callback !== 'function') {\n    throw new SDKError(paramsError, 'invalidParameters');\n  }\n  target.on(event, callback.bind(context));\n};\n\n/**\n * Bind and set event listeners\n * @param {Object} target - An OpenTok session, publisher, or subscriber object\n * @param {Object} context - The context to which to bind event listeners\n * @param {Object | Array} listeners - An object (or array of objects) with\n *        eventName/callback k/v pairs\n */\nvar bindListeners = function bindListeners(target, context, listeners) {\n  /**\n   * Create listeners from an object with event/callback k/v pairs\n   * @param {Object} listeners\n   */\n  var createListenersFromObject = function createListenersFromObject(eventListeners) {\n    Object.keys(eventListeners).forEach(function (event) {\n      bindListener(target, context, event, eventListeners[event]);\n    });\n  };\n\n  if (Array.isArray(listeners)) {\n    listeners.forEach(function (listener) {\n      return createListenersFromObject(listener);\n    });\n  } else {\n    createListenersFromObject(listeners);\n  }\n};\n\n/**\n * @class\n * Represents an OpenTok SDK Wrapper\n */\n\nvar OpenTokSDK = function () {\n  /**\n   * Create an SDK Wrapper\n   * @param {Object} credentials\n   * @param {String} credentials.apiKey\n   * @param {String} credentials.sessionId\n   * @param {String} credentials.token\n   */\n  function OpenTokSDK(credentials) {\n    _classCallCheck(this, OpenTokSDK);\n\n    this.credentials = validateCredentials(credentials);\n    stateMap.set(this, new State());\n    this.session = OT.initSession(credentials.apiKey, credentials.sessionId);\n  }\n\n  /**\n   * Determines if a connection object is my local connection\n   * @param {Object} connection - An OpenTok connection object\n   * @returns {Boolean}\n   */\n\n\n  _createClass(OpenTokSDK, [{\n    key: 'isMe',\n    value: function isMe(connection) {\n      var session = this.session;\n\n      return session && session.connection.connectionId === connection.connectionId;\n    }\n\n    /**\n     * Wrap OpenTok session events\n     */\n\n  }, {\n    key: 'setInternalListeners',\n    value: function setInternalListeners() {\n      /**\n       * Wrap session events and update state when streams are created\n       * or destroyed\n       */\n      var state = stateMap.get(this);\n      this.session.on('streamCreated', function (_ref) {\n        var stream = _ref.stream;\n        return state.addStream(stream);\n      });\n      this.session.on('streamDestroyed', function (_ref2) {\n        var stream = _ref2.stream;\n        return state.removeStream(stream);\n      });\n      this.session.on('sessionConnected sessionReconnected', function () {\n        return state.setConnected(true);\n      });\n      this.session.on('sessionDisconnected', function () {\n        return state.setConnected(false);\n      });\n    }\n\n    /**\n     * Register a callback for a specific event, pass an object\n     * with event => callback key/values (or an array of objects)\n     * to register callbacks for multiple events.\n     * @param {String | Object | Array} [events] - The name of the events\n     * @param {Function} [callback]\n     * https://tokbox.com/developer/sdks/js/reference/Session.html#on\n     */\n\n  }, {\n    key: 'on',\n    value: function on() {\n      if (arguments.length === 1 && _typeof(arguments.length <= 0 ? undefined : arguments[0]) === 'object') {\n        bindListeners(this.session, this, arguments.length <= 0 ? undefined : arguments[0]);\n      } else if (arguments.length === 2) {\n        bindListener(this.session, this, arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1]);\n      }\n    }\n\n    /**\n     * Remove a callback for a specific event. If no parameters are passed,\n     * all callbacks for the session will be removed.\n     * @param {String} [events] - The name of the events\n     * @param {Function} [callback]\n     * https://tokbox.com/developer/sdks/js/reference/Session.html#off\n     */\n\n  }, {\n    key: 'off',\n    value: function off() {\n      var _session;\n\n      (_session = this.session).off.apply(_session, arguments);\n    }\n\n    /**\n     * Enable or disable local publisher audio\n     * @param {Boolean} enable\n     */\n\n  }, {\n    key: 'enablePublisherAudio',\n    value: function enablePublisherAudio(enable) {\n      var _stateMap$get$getPubS = stateMap.get(this).getPubSub(),\n          publishers = _stateMap$get$getPubS.publishers;\n\n      Object.keys(publishers.camera).forEach(function (publisherId) {\n        publishers.camera[publisherId].publishAudio(enable);\n      });\n    }\n\n    /**\n     * Enable or disable local publisher video\n     * @param {Boolean} enable\n     */\n\n  }, {\n    key: 'enablePublisherVideo',\n    value: function enablePublisherVideo(enable) {\n      var _stateMap$get$getPubS2 = stateMap.get(this).getPubSub(),\n          publishers = _stateMap$get$getPubS2.publishers;\n\n      Object.keys(publishers.camera).forEach(function (publisherId) {\n        publishers.camera[publisherId].publishVideo(enable);\n      });\n    }\n\n    /**\n     * Enable or disable local subscriber audio\n     * @param {String} streamId\n     * @param {Boolean} enable\n     */\n\n  }, {\n    key: 'enableSubscriberAudio',\n    value: function enableSubscriberAudio(streamId, enable) {\n      var _stateMap$get$all = stateMap.get(this).all(),\n          streamMap = _stateMap$get$all.streamMap,\n          subscribers = _stateMap$get$all.subscribers;\n\n      var subscriberId = streamMap[streamId];\n      var subscriber = subscribers.camera[subscriberId] || subscribers.screen[subscriberId];\n      subscriber && subscriber.subscribeToAudio(enable);\n    }\n\n    /**\n     * Enable or disable local subscriber video\n     * @param {String} streamId\n     * @param {Boolean} enable\n     */\n\n  }, {\n    key: 'enableSubscriberVideo',\n    value: function enableSubscriberVideo(streamId, enable) {\n      var _stateMap$get$all2 = stateMap.get(this).all(),\n          streamMap = _stateMap$get$all2.streamMap,\n          subscribers = _stateMap$get$all2.subscribers;\n\n      var subscriberId = streamMap[streamId];\n      var subscriber = subscribers.camera[subscriberId] || subscribers.screen[subscriberId];\n      subscriber && subscriber.subscribeToVideo(enable);\n    }\n\n    /**\n     * Create and publish a stream\n     * @param {String | Object} element - The target element\n     * @param {Object} properties - The publisher properties\n     * @param {Array | Object} [eventListeners] - An object (or array of objects) with\n     *        eventName/callback k/v pairs\n     * @param {Boolean} [preview] - Create a publisher with publishing to the session\n     * @returns {Promise} <resolve: Object, reject: Error>\n     */\n\n  }, {\n    key: 'publish',\n    value: function publish(element, properties) {\n      var _this = this;\n\n      var eventListeners = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var preview = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      return new Promise(function (resolve, reject) {\n        initPublisher(element, properties) // eslint-disable-next-line no-confusing-arrow\n        .then(function (publisher) {\n          eventListeners && bindListeners(publisher, _this, eventListeners);\n          if (preview) {\n            resolve(publisher);\n          } else {\n            _this.publishPreview(publisher).then(resolve).catch(reject);\n          }\n        }).catch(reject);\n      });\n    }\n\n    /**\n     * Publish a 'preview' stream to the session\n     * @param {Object} publisher - An OpenTok publisher object\n     * @returns {Promise} <resolve: empty, reject: Error>\n     */\n\n  }, {\n    key: 'publishPreview',\n    value: function publishPreview(publisher) {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        var state = stateMap.get(_this2);\n        _this2.session.publish(publisher, function (error) {\n          error && reject(error);\n          var type = publisher.stream.videoType;\n          state.addPublisher(type, publisher);\n          resolve(publisher);\n        });\n      });\n    }\n\n    /**\n     * Stop publishing a stream\n     * @param {Object} publisher - An OpenTok publisher object\n     */\n\n  }, {\n    key: 'unpublish',\n    value: function unpublish(publisher) {\n      var type = publisher.stream.videoType;\n      var state = stateMap.get(this);\n      this.session.unpublish(publisher);\n      state.removePublisher(type, publisher);\n    }\n\n    /**\n     * Subscribe to stream\n     * @param {Object} stream\n     * @param {String | Object} container - The id of the container or a reference to the element\n     * @param {Object} [properties]\n     * @param {Array | Object} [eventListeners] - An object (or array of objects) with\n     *        eventName/callback k/v pairs\n     * @returns {Promise} <resolve: empty, reject: Error>\n     * https://tokbox.com/developer/sdks/js/reference/Session.html#subscribe\n     */\n\n  }, {\n    key: 'subscribe',\n    value: function subscribe(stream, container, properties, eventListeners) {\n      var _this3 = this;\n\n      var state = stateMap.get(this);\n      return new Promise(function (resolve, reject) {\n        var subscriber = _this3.session.subscribe(stream, container, properties, function (error) {\n          if (error) {\n            reject(error);\n          } else {\n            state.addSubscriber(subscriber);\n            eventListeners && bindListeners(subscriber, _this3, eventListeners);\n            resolve(subscriber);\n          }\n        });\n      });\n    }\n\n    /**\n     * Unsubscribe from a stream and update the state\n     * @param {Object} subscriber - An OpenTok subscriber object\n     * @returns {Promise} <resolve: empty>\n     */\n\n  }, {\n    key: 'unsubscribe',\n    value: function unsubscribe(subscriber) {\n      var _this4 = this;\n\n      var state = stateMap.get(this);\n      return new Promise(function (resolve) {\n        _this4.session.unsubscribe(subscriber);\n        state.removeSubscriber(subscriber);\n        resolve();\n      });\n    }\n\n    /**\n     * Connect to the OpenTok session\n     * @param {Array | Object} [eventListeners] - An object (or array of objects) with\n     *        eventName/callback k/v pairs\n     * @returns {Promise} <resolve: empty, reject: Error>\n     */\n\n  }, {\n    key: 'connect',\n    value: function connect(eventListeners) {\n      var _this5 = this;\n\n      this.off();\n      this.setInternalListeners();\n      eventListeners && this.on(eventListeners);\n      return new Promise(function (resolve, reject) {\n        var token = _this5.credentials.token;\n\n        _this5.session.connect(token, function (error) {\n          error ? reject(error) : resolve();\n        });\n      });\n    }\n\n    /**\n     * Force a remote connection to leave the session\n     * @param {Object} connection\n     * @returns {Promise} <resolve: empty, reject: Error>\n     */\n\n  }, {\n    key: 'forceDisconnect',\n    value: function forceDisconnect(connection) {\n      var _this6 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this6.session.forceDisconnect(connection, function (error) {\n          error ? reject(error) : resolve();\n        });\n      });\n    }\n\n    /**\n     * Force the publisher of a stream to stop publishing the stream\n     * @param {Object} stream\n     * @returns {Promise} <resolve: empty, reject: Error>\n     */\n\n  }, {\n    key: 'forceUnpublish',\n    value: function forceUnpublish(stream) {\n      var _this7 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this7.session.forceUnpublish(stream, function (error) {\n          error ? reject(error) : resolve();\n        });\n      });\n    }\n\n    /**\n     * Send a signal using the OpenTok signaling apiKey\n     * @param {String} type\n     * @param {*} signalData\n     * @param {Object} [to] - An OpenTok connection object\n     * @returns {Promise} <resolve: empty, reject: Error>\n     * https://tokbox.com/developer/guides/signaling/js/\n     */\n\n  }, {\n    key: 'signal',\n    value: function signal(type, signalData, to) {\n      var _this8 = this;\n\n      var data = JSON.stringify(signalData);\n      var signal = to ? { type: type, data: data, to: to } : { type: type, data: data };\n      return new Promise(function (resolve, reject) {\n        _this8.session.signal(signal, function (error) {\n          error ? reject(error) : resolve();\n        });\n      });\n    }\n\n    /**\n     * Disconnect from the OpenTok session\n     */\n\n  }, {\n    key: 'disconnect',\n    value: function disconnect() {\n      this.session.disconnect();\n      stateMap.get(this).reset();\n    }\n\n    /**\n     * Return the state of the OpenTok session\n     * @returns {Object} Streams, publishers, subscribers, and stream map\n     */\n\n  }, {\n    key: 'state',\n    value: function state() {\n      return stateMap.get(this).all();\n    }\n  }]);\n\n  return OpenTokSDK;\n}();\n\nif (global === window) {\n  window.OpenTokSDK = OpenTokSDK;\n}\n\nmodule.exports = OpenTokSDK;"]},"metadata":{},"sourceType":"script"}