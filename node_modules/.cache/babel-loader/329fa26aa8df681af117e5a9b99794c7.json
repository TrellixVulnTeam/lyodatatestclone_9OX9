{"ast":null,"code":"var _jsxFileName = \"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/src/TestGraph/FetchRecipee.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Grid } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport React, { useEffect, useState } from 'react';\nimport { db } from '../firebase';\nimport TestData from '../Pages/Tests/TestData';\nimport { firebaseLooper } from '../utils/tools';\nimport GraphSelect from './GraphSelect';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FetchRecipee = ({\n  batchId,\n  recipes,\n  rid\n}) => {\n  _s();\n\n  const [rData, setRdata] = useState([]);\n  const [realData, setRealData] = useState([]);\n\n  const updateData = () => {\n    db.collection('realtimeData').where('recipe_id', '==', `${rid}`).where('time', '==', `${batchId}`).onSnapshot(doc => {\n      const data = firebaseLooper(doc);\n      setRealData(data[0].temp_points);\n    });\n    db.collection('recipeeData').where('rid', '==', `${rid}`).onSnapshot(doc => {\n      const data = firebaseLooper(doc);\n      data.sort(function (a, b) {\n        return a.index - b.index;\n      });\n      setRdata(data);\n    });\n  };\n\n  function showData() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(GraphSelect, {\n        realData: realData,\n        rData: rData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n  console.log(rData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        jstifyContent: 'space-evenly'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        startIcon: /*#__PURE__*/_jsxDEV(UpdateIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 34\n        }, this),\n        style: {\n          color: 'orangered'\n        },\n        onClick: updateData,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        style: {\n          marginLeft: '40%'\n        },\n        severity: \"info\",\n        children: [\"Click \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"'Update'\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 74\n        }, this), \" and \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"'Set Graph'\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 94\n        }, this), \" after selecting \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this), showData()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FetchRecipee, \"iloWrRocFiXzOhTCPEaE4tgfZH8=\");\n\n_c = FetchRecipee;\nexport default FetchRecipee;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchRecipee\");","map":{"version":3,"sources":["/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/src/TestGraph/FetchRecipee.jsx"],"names":["Button","Grid","Alert","React","useEffect","useState","db","TestData","firebaseLooper","GraphSelect","UpdateIcon","FetchRecipee","batchId","recipes","rid","rData","setRdata","realData","setRealData","updateData","collection","where","onSnapshot","doc","data","temp_points","sort","a","b","index","showData","console","log","display","jstifyContent","color","marginLeft"],"mappings":"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","sourcesContent":["\nimport { Button, Grid } from '@material-ui/core'\nimport { Alert } from '@material-ui/lab'\nimport React, { useEffect, useState } from 'react'\nimport { db } from '../firebase'\nimport TestData from '../Pages/Tests/TestData'\nimport { firebaseLooper } from '../utils/tools'\nimport GraphSelect from './GraphSelect'\nimport UpdateIcon from '@material-ui/icons/Update';\n\nconst FetchRecipee = ({batchId, recipes, rid}) => {\n    const [rData, setRdata] = useState([])\n     const [realData, setRealData] = useState([])\n    const updateData = () => {\n\n        db.collection('realtimeData').where('recipe_id','==', `${rid}`).where('time', '==', `${batchId}`).onSnapshot(doc => {\n      const data = firebaseLooper(doc)\n      setRealData(data[0].temp_points)\n    })\n        db.collection('recipeeData').where('rid', '==', `${rid}`).onSnapshot(doc => {\n            const data = firebaseLooper(doc)\n             data.sort(function(a,b) {\n                return(a.index-b.index)\n            })\n            setRdata(data)\n          \n        })\n    }\n\n    function showData (){\n\n        return(\n            <>\n\n            <GraphSelect realData={realData} rData={rData}/>\n            \n            </>\n        )\n    }\n    console.log(rData)\n    return (\n        <div>\n           <div style={{display: 'flex', jstifyContent: 'space-evenly'}}>\n              <Button startIcon={<UpdateIcon/>} style={{color: 'orangered'}} onClick={updateData}>Update</Button>\n                <Alert style={{marginLeft: '40%'}} severity='info'>Click <b>'Update'</b> and <b>'Set Graph'</b> after selecting </Alert>\n           </div>\n            {showData()}\n\n            </div>\n    )\n}\n\nexport default FetchRecipee\n"]},"metadata":{},"sourceType":"module"}