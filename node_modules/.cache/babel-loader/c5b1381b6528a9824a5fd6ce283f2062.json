{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useAuth } from \"../components/context/AuthContext\";\nimport { storage } from \"../firebase\";\nexport const useStorage = file => {\n  _s();\n\n  const [progress, setProgress] = useState(0);\n  const {\n    currentUser\n  } = useAuth();\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null); // runs every time the file value changes\n\n  useEffect(() => {\n    if (file) {\n      // storage ref\n      const storageRef = storage.ref(`users/${currentUser.email}/${file.name}`);\n      storageRef.put(file).on(\"state_changed\", snap => {\n        // track the upload progress\n        let percentage = Math.round(snap.bytesTransferred / snap.totalBytes * 100);\n        setProgress(percentage);\n      }, err => {\n        setError(err);\n      }, async () => {\n        // get the public download img url\n        const downloadUrl = await storageRef.getDownloadURL(); // save the url to local state\n\n        setUrl(downloadUrl);\n      });\n    }\n  }, [file]);\n  return {\n    progress,\n    url,\n    error\n  };\n};\n\n_s(useStorage, \"/TTvkMLeZwkg7IVCQBCY2HNYq7U=\", false, function () {\n  return [useAuth];\n});","map":{"version":3,"sources":["/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/src/utils/useStorage.js"],"names":["useState","useEffect","useAuth","storage","useStorage","file","progress","setProgress","currentUser","error","setError","url","setUrl","storageRef","ref","email","name","put","on","snap","percentage","Math","round","bytesTransferred","totalBytes","err","downloadUrl","getDownloadURL"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAAA;;AAChC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM;AAACQ,IAAAA;AAAD,MAAgBN,OAAO,EAA7B;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,IAAD,CAA9B,CAJgC,CAMhC;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAII,IAAJ,EAAU;AACN;AACA,YAAMQ,UAAU,GAAGV,OAAO,CAACW,GAAR,CAAa,SAAQN,WAAW,CAACO,KAAM,IAAGV,IAAI,CAACW,IAAK,EAApD,CAAnB;AACIH,MAAAA,UAAU,CAACI,GAAX,CAAeZ,IAAf,EAAqBa,EAArB,CACA,eADA,EAECC,IAAD,IAAU;AACN;AACA,YAAIC,UAAU,GACVC,IAAI,CAACC,KAAL,CACCH,IAAI,CAACI,gBAAL,GAAwBJ,IAAI,CAACK,UAA9B,GAA4C,GAD5C,CADJ;AAIAjB,QAAAA,WAAW,CAACa,UAAD,CAAX;AACH,OATD,EAUCK,GAAD,IAAS;AACLf,QAAAA,QAAQ,CAACe,GAAD,CAAR;AACH,OAZD,EAaA,YAAY;AACR;AACA,cAAMC,WAAW,GAAG,MAAMb,UAAU,CAACc,cAAX,EAA1B,CAFQ,CAIR;;AACAf,QAAAA,MAAM,CAACc,WAAD,CAAN;AACH,OAnBD;AAqBP;AACJ,GA1BQ,EA0BN,CAACrB,IAAD,CA1BM,CAAT;AA4BA,SAAO;AAAEC,IAAAA,QAAF;AAAYK,IAAAA,GAAZ;AAAiBF,IAAAA;AAAjB,GAAP;AACH,CApCM;;GAAML,U;UAEaF,O","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useAuth } from \"../components/context/AuthContext\";\nimport { storage } from \"../firebase\";\n\nexport const useStorage = (file) => {\n    const [progress, setProgress] = useState(0);\n    const {currentUser} = useAuth()\n    const [error, setError] = useState(null);\n    const [url, setUrl] = useState(null);\n\n    // runs every time the file value changes\n    useEffect(() => {\n        if (file) {\n            // storage ref\n            const storageRef = storage.ref(`users/${currentUser.email}/${file.name}`);        \n                storageRef.put(file).on(\n                \"state_changed\",\n                (snap) => {\n                    // track the upload progress\n                    let percentage =\n                        Math.round(\n                        (snap.bytesTransferred / snap.totalBytes) * 100\n                    );\n                    setProgress(percentage);\n                },\n                (err) => {\n                    setError(err);\n                },\n                async () => {\n                    // get the public download img url\n                    const downloadUrl = await storageRef.getDownloadURL();\n\n                    // save the url to local state\n                    setUrl(downloadUrl);\n                }\n            );\n        }\n    }, [file]);\n\n    return { progress, url, error };\n};\n"]},"metadata":{},"sourceType":"module"}