{"ast":null,"code":"var _jsxFileName = \"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/src/Pages/VideoCallPage/components/Subscriber.jsx\";\nimport React from 'react';\nimport '../OpenTok.css';\nimport { OTSubscriber } from 'opentok-react';\nimport CheckBox from './CheckBox';\nimport { Button, Card, Container, Dialog, Grid } from '@material-ui/core';\nimport screenfull from 'screenfull';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport '../OpenTok.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Subscriber extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setAudio = audio => {\n      this.setState({\n        audio\n      });\n    };\n\n    this.setVideo = video => {\n      this.setState({\n        video\n      });\n    };\n\n    this.onError = err => {\n      this.setState({\n        error: `Failed to subscribe: ${err.message}`\n      });\n    };\n\n    this.handleMode = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.state = {\n      error: null,\n      audio: true,\n      video: true,\n      open: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        lg: 4,\n        sm: 6,\n        xl: 3,\n        xs: 12,\n        children: [this.state.open ? /*#__PURE__*/_jsxDEV(Dialog, {\n          fullScreen: true,\n          open: this.state.open,\n          onClose: this.handleClose,\n          children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              edge: \"start\",\n              color: \"inherit\",\n              onClick: this.handleClose,\n              \"aria-label\": \"close\",\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(OTSubscriber, {\n            properties: {\n              width: 1080,\n              height: 726,\n              subscribeToAudio: false,\n              subscribeToVideo: this.state.video\n            },\n            onError: this.onError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(OTSubscriber, {\n          properties: {\n            width: 500,\n            height: 350,\n            subscribeToAudio: this.state.audio,\n            subscribeToVideo: this.state.video,\n            showControls: true\n          },\n          onError: this.onError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '500px',\n            display: 'flex',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(CheckBox, {\n              label: \"Subscribe to Audio\",\n              initialChecked: this.state.audio,\n              onChange: this.setAudio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(CheckBox, {\n              label: \"Subscribe to Video\",\n              initialChecked: this.state.video,\n              onChange: this.setVideo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.handleMode,\n              children: \"Change Mode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"error\",\n          children: this.state.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 30\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Subscriber;","map":{"version":3,"sources":["/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/src/Pages/VideoCallPage/components/Subscriber.jsx"],"names":["React","OTSubscriber","CheckBox","Button","Card","Container","Dialog","Grid","screenfull","Toolbar","IconButton","CloseIcon","Subscriber","Component","constructor","props","setAudio","audio","setState","setVideo","video","onError","err","error","message","handleMode","open","handleClose","state","render","width","height","subscribeToAudio","subscribeToVideo","showControls","display","justifyContent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../OpenTok.css'\nimport { OTSubscriber } from 'opentok-react';\nimport CheckBox from './CheckBox';\nimport { Button, Card, Container, Dialog, Grid } from '@material-ui/core';\nimport screenfull from 'screenfull';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close'\nimport '../OpenTok.css';\nclass Subscriber extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: null,\n      audio: true,\n      video: true,\n      open: false\n    };\n  }\n\n  setAudio = (audio) => {\n    this.setState({ audio });\n  }\n\n  setVideo = (video) => {\n    this.setState({ video });\n  }\n\n  onError = (err) => {\n    this.setState({ error: `Failed to subscribe: ${err.message}` });\n  }\n\n  handleMode = () => {\n    this.setState({open: true})\n  }\n  handleClose = () => {\n    this.setState({open: false})\n  }\n  \n  render() {\n    return (\n      <>\n\n        <Grid \n        item\n        lg={4}\n            sm={6}\n            xl={3}\n            xs={12}\n       >\n        \n          {\n            this.state.open?\n            <Dialog\n        fullScreen open={this.state.open} onClose={this.handleClose}\n        >\n          <Toolbar>\n             <IconButton edge=\"start\" color=\"inherit\" onClick={this.handleClose} aria-label=\"close\">\n              <CloseIcon />\n            </IconButton>\n          </Toolbar>\n           \n            <OTSubscriber\n          properties={\n            {\n              width: 1080, height:726,\n            subscribeToAudio: false,\n            subscribeToVideo: this.state.video\n          }}\n          onError={this.onError}\n        />\n        </Dialog>\n        :\n         <OTSubscriber\n          properties={\n            {\n              width: 500, height:350,\n            subscribeToAudio: this.state.audio,\n            subscribeToVideo: this.state.video,\n            showControls: true\n          }}\n          onError={this.onError}\n        />\n\n         }\n       \n      <Card style={{width:'500px', display: 'flex', justifyContent: 'space-between'}}>\n        <div>\n            <CheckBox\n          label=\"Subscribe to Audio\"\n          initialChecked={this.state.audio}\n          onChange={this.setAudio}\n        />\n        </div>\n          <div>\n             <CheckBox\n          label=\"Subscribe to Video\"\n          initialChecked={this.state.video}\n          onChange={this.setVideo}\n        />\n          </div>\n          <div>\n            <Button onClick={this.handleMode}>Change Mode</Button>\n          </div>\n        </Card>\n        \n      </Grid>\n\n      <div>\n         {this.state.error ? <div id=\"error\">{this.state.error}</div> : null}\n      </div>\n      </>\n     \n    );\n  }\n}\nexport default Subscriber;\n\n\n"]},"metadata":{},"sourceType":"module"}