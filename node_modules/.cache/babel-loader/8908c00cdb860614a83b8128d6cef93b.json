{"ast":null,"code":"var _jsxFileName = \"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/src/TestGraph/TestGraph.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { db } from \"../firebase\";\nimport FetchRecipee from \"./FetchRecipee\";\nimport { firebaseLooper } from \"../utils/tools\";\nimport { Button, Card, FormControl, FormHelperText, Grid, Input, InputLabel, MenuItem, Select } from \"@material-ui/core\";\nimport GraphSelect from \"./GraphSelect\";\nimport Chartjs from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chartConfig = {\n  type: \"line\",\n  data: {\n    labels: [],\n    datasets: [{\n      fill: 'false',\n      label: \"Temperature\",\n      yAxisID: \"y-axis-0\",\n      data: [],\n      borderWidth: 1,\n      lineTension: 0.1,\n      backgroundColor: 'yellow',\n      borderColor: 'yellow',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'yellow',\n      pointBackgroundColor: 'yellow',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: '#ff7a00',\n      pointHoverBorderColor: '#7868e6',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10\n    }, {\n      fill: 'false',\n      yAxisID: \"y-axis-1\",\n      label: \"Pressure\",\n      data: [],\n      lineTension: 0.1,\n      backgroundColor: 'orangered',\n      borderColor: 'orangered',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'orangered',\n      pointBackgroundColor: 'orangered',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: '#ff7a00',\n      pointHoverBorderColor: '#7868e6',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      borderWidth: 1\n    }, {\n      yAxisID: \"y2\",\n      label: 'RealTime',\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'green',\n      borderColor: 'green',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'green',\n      pointBackgroundColor: 'green',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'green',\n      pointHoverBorderColor: '#7868e6',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: []\n    }]\n  },\n  options: {\n    legend: {\n      position: 'bottom',\n      labels: {\n        fontColor: 'white'\n      }\n    },\n    title: {\n      display: true,\n      text: \"Select/Change The Required to Showcase Data\"\n    },\n    tooltips: {\n      mode: 'label'\n    },\n    interaction: {\n      mode: 'index',\n      intersect: false\n    },\n    responsive: true,\n    scales: {\n      xAxes: [{\n        display: true,\n        stacked: false,\n        ticks: {\n          autoSkip: true,\n          maxTicksLimit: 15,\n          fontColor: 'white',\n          fontSize: 10,\n          animation: {\n            easing: 'linear'\n          }\n        }\n      }],\n      ticks: {\n        major: {\n          fontStyle: 'bold',\n          fontColor: '#FF0000'\n        }\n      },\n      yAxes: [{\n        stacked: true,\n        position: \"left\",\n        id: \"y-axis-0\",\n        title: 'Temp Set Point',\n        ticks: {\n          steps: 10,\n          min: -100,\n          fontColor: 'white',\n          fontSize: 14\n        }\n      }, {\n        stacked: false,\n        display: false,\n        position: \"left\",\n        id: \"y2\",\n        title: 'Realtime',\n        ticks: {\n          steps: 10,\n          fontColor: 'white',\n          fontSize: 14\n        }\n      }, {\n        stacked: false,\n        position: \"right\",\n        id: \"y-axis-1\",\n        fontColor: 'white',\n        ticks: {\n          steps: 100,\n          fontColor: 'white',\n          fontSize: 14\n        }\n      }]\n    }\n  }\n};\n\nconst TestGraph = () => {\n  _s();\n\n  const [recipes, setRecipes] = useState([]);\n  const [rid, setRid] = useState('');\n  const [machines, setMachines] = useState([]);\n  const [rData, setRdata] = useState([]);\n  const [realData, setRealData] = useState([]);\n  const [batch, setBatch] = useState([]);\n  const [batchId, setBatchId] = useState([]);\n  const [mid, setMid] = useState('');\n  let time = [];\n  let temp = [];\n  let stillTime = [];\n  let pressure = [];\n  let delta = [];\n  let deltaP = [];\n  let realDatax = [];\n  const [stillTimeData, setStillTimeData] = useState([]);\n  const [deltaTemp, setDeltaTemp] = useState([]);\n  const [deltaPressure, setDeltaP] = useState([]);\n  const [tempData, setTempData] = useState([]);\n  const [pressureData, setPressureData] = useState([]);\n  const chartContainer = useRef(null);\n  const [chartInstance, setChartInstance] = useState(null);\n  useEffect(() => {\n    db.collection('machineData').onSnapshot(doc => {\n      const data = firebaseLooper(doc);\n      setMachines(data);\n    });\n\n    if (chartContainer && chartContainer.current) {\n      const newChartInstance = new Chartjs(chartContainer.current, chartConfig);\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer]);\n\n  const updateDataset = (time, newData, pressure) => {\n    chartInstance.data.labels = time;\n    chartInstance.data.datasets[0].data = newData;\n    chartInstance.data.datasets[1].data = pressure;\n    chartInstance.data.datasets[2].data = realData;\n    chartInstance.update();\n  };\n\n  function myFunction() {\n    console.log('myFunction Called');\n  }\n\n  myFunction();\n  setInterval(function (e) {\n    onButtonClick(e);\n    console.log('called database once');\n  }, 30000);\n\n  const onButtonClick = e => {\n    e.preventDefault();\n    var x, y, z;\n    var randomTemp, randomPressure;\n    let currTemp = 0;\n    let currPressure = 800;\n    let currTime = 0;\n\n    for (let index = 0; index < rData.length; index++) {\n      x = (rData[index].temp1 - currTemp) / rData[index].time1;\n      y = (rData[index].pressure - currPressure) / rData[index].time1;\n\n      for (let j = 0; j < rData[index].time1; j++) {\n        currTime++;\n        currTemp = currTemp + x;\n        randomTemp = currTemp + Math.floor(Math.random() * x);\n        currPressure = currPressure + y;\n        randomPressure = currPressure + Math.floor(Math.random() * y);\n        time.push(currTime);\n        temp.push(currTemp);\n        pressure.push(currPressure);\n        delta.push(randomTemp);\n        deltaP.push(randomPressure);\n      }\n\n      for (let k = 0; k < rData[index].time2; k++) {\n        currTime++;\n        time.push(currTime);\n        delta.push(randomTemp + Math.random() * x);\n        deltaP.push(randomPressure + Math.random() * y);\n        temp.push(currTemp);\n        pressure.push(currPressure);\n      }\n    }\n\n    setTempData(temp);\n    setStillTimeData(stillTime);\n    setPressureData(pressure);\n    setDeltaP(deltaP);\n    setDeltaTemp(delta);\n    updateDataset(time, temp, pressure);\n  };\n\n  function handleChange(e) {\n    setRid(e.target.value);\n    const recipe_id = e.target.value;\n    db.collection('realData').where('recipe_id', '==', `${recipe_id}`).onSnapshot(doc => {\n      const data = firebaseLooper(doc);\n      console.log(data);\n      setBatch(data);\n    });\n  }\n\n  function handleBatchChange(e) {\n    setBatchId(e.target.value);\n    let batch_id = e.target.value;\n    let tempData = [];\n    db.collection('realData').doc(batch_id).onSnapshot(doc => {\n      console.log(doc.data().temp_points);\n\n      for (let i = 0; i < doc.data().temp_points.length; i++) {\n        tempData.push(doc.data().temp_points[i].value);\n      }\n\n      setRealData(tempData);\n    });\n    db.collection('recipeeData').where('rid', '==', `${rid}`).onSnapshot(doc => {\n      const data = firebaseLooper(doc);\n      data.sort(function (a, b) {\n        return a.index - b.index;\n      });\n      setRdata(data);\n      console.log(tempData);\n    });\n  }\n\n  function handleSetChange(e) {\n    let mid = e.target.value;\n    db.collection('recipes').where('mid', '==', `${mid}`).onSnapshot(doc => {\n      const data = firebaseLooper(doc);\n      setRecipes(data);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onButtonClick,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        style: {\n          display: 'flex',\n          justifyContent: 'space-evenly',\n          marginLeft: '3%',\n          marginBottom: '12px',\n          marginTop: '5px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 3,\n          sm: 6,\n          xl: 3,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: \"form-select mt-1 block w-full\",\n            fullWidth: true,\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"demo-simple-select-outlined-label\",\n              children: \"Select Machine\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              label: \"Select Machine\",\n              required: true,\n              onChange: handleSetChange,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"em\", {\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 28\n              }, this), machines.map(data => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: data.id,\n                children: data.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 29\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 3,\n          sm: 6,\n          xl: 3,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: \"form-select mt-1 block w-full\",\n            fullWidth: true,\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"demo-simple-select-outlined-label\",\n              children: \"Select Recipes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              disabled: recipes.length === 0,\n              required: true,\n              label: \"Select Recipes\",\n              variant: \"outlined\",\n              fullWidth: true,\n              onChange: handleChange,\n              children: recipes.map(data => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: data.id,\n                children: data.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 29\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 3,\n          sm: 6,\n          xl: 3,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: \"form-select mt-1 block w-full\",\n            fullWidth: true,\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"demo-simple-select-outlined-label\",\n              children: \"Select Batch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              disabled: batch.length === 0,\n              label: \"Select Batch\",\n              fullWidth: true,\n              variant: \"outlined\",\n              onChange: e => {\n                handleBatchChange(e);\n              },\n              children: batch.map(data => {\n                var _data$timestamp;\n\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: data.id,\n                  children: (_data$timestamp = data.timestamp) === null || _data$timestamp === void 0 ? void 0 : _data$timestamp.toDate().toString().substring(0, 15)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 29\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 3,\n          sm: 6,\n          xl: 3,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            className: \" mt-3 block \",\n            style: {\n              backgroundColor: 'orange',\n              color: 'white'\n            },\n            children: \"Show Graph\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        padding: '15px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        style: {\n          background: 'black'\n        },\n        ref: chartContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 329,\n    columnNumber: 7\n  }, this);\n};\n\n_s(TestGraph, \"VcYV2aINI9iGbgf89l5H0DCOHz8=\");\n\n_c = TestGraph;\nexport default TestGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestGraph\");","map":{"version":3,"sources":["/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/src/TestGraph/TestGraph.jsx"],"names":["React","useEffect","useRef","useState","db","FetchRecipee","firebaseLooper","Button","Card","FormControl","FormHelperText","Grid","Input","InputLabel","MenuItem","Select","GraphSelect","Chartjs","chartConfig","type","data","labels","datasets","fill","label","yAxisID","borderWidth","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","options","legend","position","fontColor","title","display","text","tooltips","mode","interaction","intersect","responsive","scales","xAxes","stacked","ticks","autoSkip","maxTicksLimit","fontSize","animation","easing","major","fontStyle","yAxes","id","steps","min","TestGraph","recipes","setRecipes","rid","setRid","machines","setMachines","rData","setRdata","realData","setRealData","batch","setBatch","batchId","setBatchId","mid","setMid","time","temp","stillTime","pressure","delta","deltaP","realDatax","stillTimeData","setStillTimeData","deltaTemp","setDeltaTemp","deltaPressure","setDeltaP","tempData","setTempData","pressureData","setPressureData","chartContainer","chartInstance","setChartInstance","collection","onSnapshot","doc","current","newChartInstance","updateDataset","newData","update","myFunction","console","log","setInterval","e","onButtonClick","preventDefault","x","y","z","randomTemp","randomPressure","currTemp","currPressure","currTime","index","length","temp1","time1","j","Math","floor","random","push","k","time2","handleChange","target","value","recipe_id","where","handleBatchChange","batch_id","temp_points","i","sort","a","b","handleSetChange","justifyContent","marginLeft","marginBottom","marginTop","map","timestamp","toDate","toString","substring","color","padding","background"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { db } from \"../firebase\";\nimport FetchRecipee from \"./FetchRecipee\";\nimport { firebaseLooper } from \"../utils/tools\";\nimport { Button, Card, FormControl, FormHelperText, Grid, Input, InputLabel, MenuItem, Select } from \"@material-ui/core\";\nimport GraphSelect from \"./GraphSelect\";\nimport Chartjs from \"chart.js\";\n\nconst chartConfig = {\n  type: \"line\",\n  data: {\n    labels: [],\n\n    datasets: [\n      {\n          fill: 'false',\n        label: \"Temperature\",\n         yAxisID: \"y-axis-0\",\n        data: [],\n        borderWidth: 1,\n        lineTension: 0.1,\n      backgroundColor: 'yellow',\n      borderColor: 'yellow',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'yellow',\n      pointBackgroundColor: 'yellow',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: '#ff7a00',\n      pointHoverBorderColor: '#7868e6',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      },\n        {\n       \n          fill: 'false',\n           yAxisID: \"y-axis-1\",\n        label: \"Pressure\",\n        data: [],\n        lineTension: 0.1,\n      backgroundColor: 'orangered',\n      borderColor: 'orangered',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'orangered',\n      pointBackgroundColor: 'orangered',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: '#ff7a00',\n      pointHoverBorderColor: '#7868e6',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n        borderWidth: 1\n      },\n      {\n       yAxisID: \"y2\",\n      \n      label: 'RealTime',\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'green',\n      borderColor: 'green',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'green',\n      pointBackgroundColor: 'green',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'green',\n      pointHoverBorderColor: '#7868e6',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: []\n    },\n     \n\n    ]\n  },\n  options: {\n     legend: {\n       position: 'bottom',\n        labels: {\n                  fontColor: 'white'\n         }\n              },\n    title: {\n      display: true,\n      text: \"Select/Change The Required to Showcase Data\"\n    },\n    \n    tooltips: {\n      mode: 'label'\n    },\n    interaction: {\n      mode: 'index',\n      intersect: false,\n    },\n    responsive: true,\n    scales: {\n     \n      xAxes: [{\n        display: true,\n        stacked: false,\n        ticks: {\n          autoSkip: true,\n          maxTicksLimit: 15,\n          fontColor: 'white',\n          fontSize: 10,\n          animation: {\n            \n            easing: 'linear'\n          }\n        }\n        \n      }],\n       ticks: {\n            major: {\n              fontStyle: 'bold',\n              fontColor: '#FF0000'\n            }\n          },\n      yAxes: [{\n        stacked: true,\n        position: \"left\",\n        id: \"y-axis-0\",\n        title: 'Temp Set Point',\n        ticks: {\n         \n          steps: 10,\n          min:-100,\n          fontColor: 'white',\n          fontSize: 14,\n           \n        },\n      \n         \n      },\n       {\n        stacked: false,\n        display: false,\n        position: \"left\",\n        id: \"y2\",\n        title: 'Realtime',\n        ticks: {\n         \n          steps: 10,\n       \n          fontColor: 'white',\n          fontSize: 14,\n          \n        },\n      \n         \n      },\n      {\n        stacked: false,\n        position: \"right\",\n        id: \"y-axis-1\",\n        fontColor: 'white',\n        ticks: {\n         steps: 100,\n          \n          fontColor: 'white',\n          fontSize: 14\n        },\n        \n        \n      },\n     ]\n    } \n  }\n};\n\nconst TestGraph = () => {\n    const [recipes, setRecipes] = useState([])\n    const [rid, setRid] = useState('')\n    const [machines, setMachines] = useState([])\n    const [rData, setRdata] = useState([])\n     const [realData, setRealData] = useState([])\n    const [batch, setBatch] = useState([])\n     const [batchId, setBatchId] = useState([])\n\n    const [mid, setMid] = useState('')\n      let time = []\n  let temp = []\n  let stillTime = []\n  let pressure = []\n  let delta =  []\n  let deltaP =[]\n  let realDatax = []\n\n  const [stillTimeData, setStillTimeData] = useState([])\n  const [deltaTemp, setDeltaTemp] = useState([])\n  const [deltaPressure, setDeltaP] = useState([])\n  const [tempData, setTempData] = useState([])\n  const [pressureData, setPressureData] = useState([])\n  const chartContainer = useRef(null);\n  const [chartInstance, setChartInstance] = useState(null);\n\n  useEffect(() => {\n    db.collection('machineData').onSnapshot(doc => {\n            const data = firebaseLooper(doc)\n            setMachines(data)\n        })\n\n    if (chartContainer && chartContainer.current) {\n      const newChartInstance = new Chartjs(chartContainer.current, chartConfig);\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer]);\n\n  const updateDataset = (time, newData, pressure) => {\n      chartInstance.data.labels = time\n    chartInstance.data.datasets[0].data = newData;\n    chartInstance.data.datasets[1].data = pressure;\n     chartInstance.data.datasets[2].data = realData;\n    chartInstance.update();\n  };\n  function myFunction(){\n    console.log('myFunction Called')\n}\n\nmyFunction();\n\nsetInterval(function(e){\n    onButtonClick(e)\n    console.log('called database once')\n}, 30000)\n  const onButtonClick = (e) => {\n    e.preventDefault()\n      var x, y, z;\n      var randomTemp, randomPressure;\n      let currTemp=0; let currPressure= 800; let currTime = 0;\n    for (let index = 0; index < rData.length; index++) {\n      x = (rData[index].temp1 - currTemp)/rData[index].time1\n      y = (rData[index].pressure - currPressure)/rData[index].time1\n     \n      for (let j = 0; j < rData[index].time1 ; j++) {\n          currTime++;\n          currTemp = currTemp + x;\n          randomTemp = currTemp + Math.floor(Math.random() * x)\n          currPressure = currPressure + y\n           randomPressure = currPressure+ Math.floor(Math.random() * y)\n          time.push(currTime)\n          temp.push(currTemp)\n          pressure.push(currPressure)\n          delta.push(randomTemp)\n          deltaP.push(randomPressure)\n          \n      }\n\n      for (let k = 0; k < rData[index].time2; k++) {\n          currTime++\n          time.push(currTime)\n          delta.push(randomTemp + Math.random() * x)\n          deltaP.push (randomPressure + Math.random()*y)\n          temp.push(currTemp)\n          pressure.push(currPressure)\n         \n         \n     \n      }\n    }\n \n  setTempData(temp)\n  setStillTimeData(stillTime)\n  setPressureData(pressure)\n  setDeltaP(deltaP)\n  setDeltaTemp(delta)\n\n    \n    updateDataset(time, temp, pressure);\n  };\n    \n    function handleChange(e){\n        setRid(e.target.value)\n        const recipe_id = e.target.value\n        db.collection('realData').where('recipe_id', '==',`${recipe_id}`).onSnapshot(doc => {\n            const data = firebaseLooper(doc)\n            console.log(data)\n            setBatch(data)\n        })\n     \n       \n    }\n   \n    function handleBatchChange(e){\n        setBatchId(e.target.value)\n        let batch_id = e.target.value\n        let tempData = []\n        db.collection('realData').doc(batch_id).onSnapshot(doc => {\n           console.log(doc.data().temp_points)\n           for(let i = 0; i < doc.data().temp_points.length; i++){\n             tempData.push(doc.data().temp_points[i].value)\n           }\n     setRealData(tempData)\n    \n    })\n        db.collection('recipeeData').where('rid', '==', `${rid}`).onSnapshot(doc => {\n            const data = firebaseLooper(doc)\n             data.sort(function(a,b) {\n                return(a.index-b.index)\n            })\n            setRdata(data)\n          console.log(tempData)\n        })\n       \n       \n    }\n    function handleSetChange(e){\n        let mid = e.target.value\n       db.collection('recipes').where('mid', '==',`${mid}`).onSnapshot(doc => {\n            const data = firebaseLooper(doc)\n            setRecipes(data)\n        })\n    }\n \n  return (\n      <Card >\n        <form onSubmit={onButtonClick}>\n          <Grid container spacing={3} style={{display: 'flex', justifyContent: 'space-evenly', marginLeft: '3%', marginBottom: '12px', marginTop: '5px'}} >\n             \n                  <Grid item  lg={3}\n            sm={6}\n            xl={3}\n            xs={12} >\n                 <FormControl className='form-select mt-1 block w-full'  fullWidth variant=\"outlined\">\n                 <InputLabel id=\"demo-simple-select-outlined-label\">Select Machine</InputLabel>\n                     <Select\n                     label='Select Machine'\n                     required\n                    onChange={handleSetChange} >\n                           <MenuItem value=\"\">\n                          <em>None</em>\n                         </MenuItem>\n                    {\n                        machines.map(data => (\n                            <MenuItem value={data.id}>{data.title}</MenuItem>\n                        ))\n                    } \n                    </Select>\n                    \n                 </FormControl>\n                    \n                  </Grid>\n                    \n     \n             \n              <Grid item lg={3}\n            sm={6}\n            xl={3}\n            xs={12} >\n                  <FormControl className='form-select mt-1 block w-full'  fullWidth variant=\"outlined\">\n                  <InputLabel id=\"demo-simple-select-outlined-label\">Select Recipes</InputLabel>\n                   <Select disabled={recipes.length === 0}  required label=\"Select Recipes\"  variant='outlined'  fullWidth onChange={handleChange} >\n                       \n                    {\n                        recipes.map(data => (\n                            <MenuItem value={data.id}>{data.title}</MenuItem>\n                        ))\n                    } \n                    </Select>\n                  </FormControl>\n                  \n                  \n                    \n              </Grid>\n              <Grid item lg={3}\n            sm={6}\n            xl={3}\n            xs={12}>\n                  <FormControl  className='form-select mt-1 block w-full'  fullWidth variant=\"outlined\">\n                  <InputLabel id=\"demo-simple-select-outlined-label\">Select Batch</InputLabel>\n                   <Select disabled={batch.length === 0} label='Select Batch'  fullWidth variant='outlined' onChange={(e) => {handleBatchChange(e) }}>\n                      \n                    {\n                        batch.map(data => (\n                            <MenuItem value={data.id}>{data.timestamp?.toDate().toString().substring(0,15)}</MenuItem>\n                        ))\n                    } \n                    </Select>\n                  </FormControl>\n                  \n                  \n              </Grid>\n              <Grid \n              item lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n              >\n                <Button type=\"submit\" className=' mt-3 block ' style={{backgroundColor: 'orange', color: 'white'}}>Show Graph</Button>\n              </Grid>\n              \n          </Grid>\n          </form>\n                    <Card style={{padding: '15px'}}>\n                      <canvas style={{background: 'black'}} ref={chartContainer} />\n                    </Card>\n    \n   \n    </Card>\n  );\n}\n\nexport default TestGraph;"]},"metadata":{},"sourceType":"module"}