{"ast":null,"code":"import _slicedToArray from\"/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Button,Grid}from'@material-ui/core';import{Alert}from'@material-ui/lab';import React,{useEffect,useState}from'react';import{db}from'../firebase';import TestData from'../Pages/Tests/TestData';import{firebaseLooper}from'../utils/tools';import GraphSelect from'./GraphSelect';import UpdateIcon from'@material-ui/icons/Update';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FetchRecipee=function FetchRecipee(_ref){var batchId=_ref.batchId,recipes=_ref.recipes,rid=_ref.rid;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),rData=_useState2[0],setRdata=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),realData=_useState4[0],setRealData=_useState4[1];var updateData=function updateData(){db.collection('realtimeData').where('recipe_id','==',\"\".concat(rid)).where('time','==',\"\".concat(batchId)).onSnapshot(function(doc){var data=firebaseLooper(doc);setRealData(data[0].temp_points);});db.collection('recipeeData').where('rid','==',\"\".concat(rid)).onSnapshot(function(doc){var data=firebaseLooper(doc);data.sort(function(a,b){return a.index-b.index;});setRdata(data);});};function showData(){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(GraphSelect,{realData:realData,rData:rData})});}console.log(rData);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',jstifyContent:'space-evenly'},children:[/*#__PURE__*/_jsx(Button,{startIcon:/*#__PURE__*/_jsx(UpdateIcon,{}),style:{color:'orangered'},onClick:updateData,children:\"Update\"}),/*#__PURE__*/_jsxs(Alert,{style:{marginLeft:'40%'},severity:\"info\",children:[\"Click \",/*#__PURE__*/_jsx(\"b\",{children:\"'Update'\"}),\" and \",/*#__PURE__*/_jsx(\"b\",{children:\"'Set Graph'\"}),\" after selecting \"]})]}),showData()]});};export default FetchRecipee;","map":{"version":3,"sources":["/Users/suryanandsunil/Desktop/proto1-arizon/lyo-test/src/TestGraph/FetchRecipee.jsx"],"names":["Button","Grid","Alert","React","useEffect","useState","db","TestData","firebaseLooper","GraphSelect","UpdateIcon","FetchRecipee","batchId","recipes","rid","rData","setRdata","realData","setRealData","updateData","collection","where","onSnapshot","doc","data","temp_points","sort","a","b","index","showData","console","log","display","jstifyContent","color","marginLeft"],"mappings":"2KACA,OAASA,MAAT,CAAiBC,IAAjB,KAA6B,mBAA7B,CACA,OAASC,KAAT,KAAsB,kBAAtB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,EAAT,KAAmB,aAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CACA,OAASC,cAAT,KAA+B,gBAA/B,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,2BAAvB,C,6IAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAA6B,IAA3BC,CAAAA,OAA2B,MAA3BA,OAA2B,CAAlBC,OAAkB,MAAlBA,OAAkB,CAATC,GAAS,MAATA,GAAS,eACpBT,QAAQ,CAAC,EAAD,CADY,wCACvCU,KADuC,eAChCC,QADgC,8BAEbX,QAAQ,CAAC,EAAD,CAFK,yCAEtCY,QAFsC,eAE5BC,WAF4B,eAG9C,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAErBb,EAAE,CAACc,UAAH,CAAc,cAAd,EAA8BC,KAA9B,CAAoC,WAApC,CAAgD,IAAhD,WAAyDP,GAAzD,GAAgEO,KAAhE,CAAsE,MAAtE,CAA8E,IAA9E,WAAuFT,OAAvF,GAAkGU,UAAlG,CAA6G,SAAAC,GAAG,CAAI,CACtH,GAAMC,CAAAA,IAAI,CAAGhB,cAAc,CAACe,GAAD,CAA3B,CACAL,WAAW,CAACM,IAAI,CAAC,CAAD,CAAJ,CAAQC,WAAT,CAAX,CACD,CAHG,EAIAnB,EAAE,CAACc,UAAH,CAAc,aAAd,EAA6BC,KAA7B,CAAmC,KAAnC,CAA0C,IAA1C,WAAmDP,GAAnD,GAA0DQ,UAA1D,CAAqE,SAAAC,GAAG,CAAI,CACxE,GAAMC,CAAAA,IAAI,CAAGhB,cAAc,CAACe,GAAD,CAA3B,CACCC,IAAI,CAACE,IAAL,CAAU,SAASC,CAAT,CAAWC,CAAX,CAAc,CACrB,MAAOD,CAAAA,CAAC,CAACE,KAAF,CAAQD,CAAC,CAACC,KAAjB,CACH,CAFA,EAGDb,QAAQ,CAACQ,IAAD,CAAR,CAEH,CAPD,EAQH,CAdD,CAgBA,QAASM,CAAAA,QAAT,EAAoB,CAEhB,mBACI,sCAEA,KAAC,WAAD,EAAa,QAAQ,CAAEb,QAAvB,CAAiC,KAAK,CAAEF,KAAxC,EAFA,EADJ,CAOH,CACDgB,OAAO,CAACC,GAAR,CAAYjB,KAAZ,EACA,mBACI,oCACG,aAAK,KAAK,CAAE,CAACkB,OAAO,CAAE,MAAV,CAAkBC,aAAa,CAAE,cAAjC,CAAZ,wBACG,KAAC,MAAD,EAAQ,SAAS,cAAE,KAAC,UAAD,IAAnB,CAAkC,KAAK,CAAE,CAACC,KAAK,CAAE,WAAR,CAAzC,CAA+D,OAAO,CAAEhB,UAAxE,oBADH,cAEK,MAAC,KAAD,EAAO,KAAK,CAAE,CAACiB,UAAU,CAAE,KAAb,CAAd,CAAmC,QAAQ,CAAC,MAA5C,iCAAyD,+BAAzD,sBAA6E,kCAA7E,uBAFL,GADH,CAKKN,QAAQ,EALb,GADJ,CAUH,CAxCD,CA0CA,cAAenB,CAAAA,YAAf","sourcesContent":["\nimport { Button, Grid } from '@material-ui/core'\nimport { Alert } from '@material-ui/lab'\nimport React, { useEffect, useState } from 'react'\nimport { db } from '../firebase'\nimport TestData from '../Pages/Tests/TestData'\nimport { firebaseLooper } from '../utils/tools'\nimport GraphSelect from './GraphSelect'\nimport UpdateIcon from '@material-ui/icons/Update';\n\nconst FetchRecipee = ({batchId, recipes, rid}) => {\n    const [rData, setRdata] = useState([])\n     const [realData, setRealData] = useState([])\n    const updateData = () => {\n\n        db.collection('realtimeData').where('recipe_id','==', `${rid}`).where('time', '==', `${batchId}`).onSnapshot(doc => {\n      const data = firebaseLooper(doc)\n      setRealData(data[0].temp_points)\n    })\n        db.collection('recipeeData').where('rid', '==', `${rid}`).onSnapshot(doc => {\n            const data = firebaseLooper(doc)\n             data.sort(function(a,b) {\n                return(a.index-b.index)\n            })\n            setRdata(data)\n          \n        })\n    }\n\n    function showData (){\n\n        return(\n            <>\n\n            <GraphSelect realData={realData} rData={rData}/>\n            \n            </>\n        )\n    }\n    console.log(rData)\n    return (\n        <div>\n           <div style={{display: 'flex', jstifyContent: 'space-evenly'}}>\n              <Button startIcon={<UpdateIcon/>} style={{color: 'orangered'}} onClick={updateData}>Update</Button>\n                <Alert style={{marginLeft: '40%'}} severity='info'>Click <b>'Update'</b> and <b>'Set Graph'</b> after selecting </Alert>\n           </div>\n            {showData()}\n\n            </div>\n    )\n}\n\nexport default FetchRecipee\n"]},"metadata":{},"sourceType":"module"}